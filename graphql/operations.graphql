query RequestsList(
  $options: RequestOptions
  $where: RequestWhere
  $requestsConnectionWhere2: RequestWhere
) {
  requestsConnection(where: $requestsConnectionWhere2) {
    totalCount
  }
  requests(where: $where, options: $options) {
    ...RequestParts
    hasSampleSamplesConnection {
      totalCount
    }
  }
}

query PatientsList(
  $options: PatientOptions
  $where: PatientWhere
  $patientsConnectionWhere2: PatientWhere
) {
  patientsConnection(where: $patientsConnectionWhere2) {
    totalCount
  }
  patients(where: $where, options: $options) {
    smilePatientId
    hasSampleSamples {
      smileSampleId
      hasMetadataSampleMetadata {
        primaryId
        cmoSampleName
        additionalProperties
      }
    }
    hasSampleSamplesConnection {
      totalCount
    }
    patientAliasesIsAlias {
      namespace
      value
    }
  }
}

query FindSamplesByInputValue(
  $where: SampleWhere
  $first: Int
  $sampleMetadataOptions: SampleMetadataOptions
  $bamCompletesOptions: BamCompleteOptions
  $mafCompletesOptions: MafCompleteOptions
  $qcCompletesOptions: QcCompleteOptions
) {
  samplesConnection(where: $where, first: $first) {
    edges {
      node {
        ...SampleParts
        hasMetadataSampleMetadata(options: $sampleMetadataOptions) {
          ...SampleMetadataParts
          hasStatusStatuses {
            validationReport
            validationStatus
          }
        }
        requestsHasSampleConnection {
          edges {
            node {
              ...RequestParts
            }
          }
        }
        patientsHasSampleConnection {
          edges {
            node {
              smilePatientId
            }
          }
        }
        cohortsHasCohortSampleConnection {
          edges {
            node {
              cohortId
              hasCohortCompleteCohortCompletes {
                date
              }
            }
          }
        }
        hasTempoTempos {
          billed
          billedBy
          costCenter
          custodianInformation
          accessLevel
          hasEventBamCompletes(options: $bamCompletesOptions) {
            date
            status
          }
          hasEventMafCompletes(options: $mafCompletesOptions) {
            date
            normalPrimaryId
            status
          }
          hasEventQcCompletes(options: $qcCompletesOptions) {
            date
            reason
            result
            status
          }
        }
      }
    }
  }
}

fragment RequestParts on Request {
  igoRequestId
  igoProjectId
  genePanel
  dataAnalystName
  dataAnalystEmail
  dataAccessEmails
  bicAnalysis
  investigatorEmail
  investigatorName
  isCmoRequest
  labHeadEmail
  labHeadName
  libraryType
  otherContactEmails
  piEmail
  projectManagerName
  qcAccessEmails
  smileRequestId
}

fragment SampleParts on Sample {
  datasource
  revisable
  sampleCategory
  sampleClass
  smileSampleId
}

fragment SampleMetadataParts on SampleMetadata {
  additionalProperties
  baitSet
  cfDNA2dBarcode
  cmoInfoIgoId
  cmoPatientId
  cmoSampleIdFields
  cmoSampleName
  collectionYear
  genePanel
  igoComplete
  igoRequestId
  importDate
  investigatorSampleId
  libraries
  oncotreeCode
  preservation
  primaryId
  qcReports
  sampleClass
  sampleName
  sampleOrigin
  sampleType
  sex
  species
  tissueLocation
  tubeId
  tumorOrNormal
}

query Samples(
  $where: SampleWhere
  $hasMetadataSampleMetadataWhere2: SampleMetadataWhere
  $hasMetadataSampleMetadataOptions2: SampleMetadataOptions
) {
  samples(where: $where) {
    smileSampleId
    revisable
    sampleCategory
    sampleClass
    datasource
    hasMetadataSampleMetadata(
      where: $hasMetadataSampleMetadataWhere2
      options: $hasMetadataSampleMetadataOptions2
    ) {
      ...SampleMetadataParts
    }
  }
}

mutation UpdateSamples(
  $where: SampleWhere
  $update: SampleUpdateInput
  $connect: SampleConnectInput
) {
  updateSamples(where: $where, update: $update, connect: $connect) {
    samples {
      smileSampleId
      revisable
      datasource
      sampleCategory
      sampleClass
      hasMetadataSampleMetadata {
        ...SampleMetadataParts
      }
    }
  }
}

query GetPatientIdsTriplets($patientIds: [String!]!) {
  patientIdsTriplets(patientIds: $patientIds) {
    CMO_ID
    DMP_ID
    PT_MRN
  }
}

query CohortsList(
  $where: CohortWhere
  $options: CohortOptions
  $cohortsConnectionWhere2: CohortWhere
  $hasCohortCompleteCohortCompletesOptions2: CohortCompleteOptions
) {
  cohortsConnection(where: $cohortsConnectionWhere2) {
    totalCount
  }
  cohorts(where: $where, options: $options) {
    cohortId
    hasCohortCompleteCohortCompletes(
      options: $hasCohortCompleteCohortCompletesOptions2
    ) {
      type
      endUsers
      pmUsers
      projectTitle
      projectSubtitle
      status
      date
    }
    hasCohortSampleSamplesConnection {
      totalCount
    }
    hasCohortSampleSamples {
      smileSampleId
      hasTempoTempos {
        billed
      }
    }
  }
}
