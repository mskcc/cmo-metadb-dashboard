query RequestsList($options: RequestOptions, $where: RequestWhere) {
  requestsConnection(where: $where) {
    totalCount
  }
  requests(where: $where, options: $options) {
    ...RequestParts
    importDate
    totalSampleCount
    hasMetadataRequestMetadata {
      importDate
    }
    hasSampleSamplesConnection {
      totalCount
    }
  }
}

query PatientsList($options: PatientOptions, $where: PatientWhere) {
  patientsConnection(where: $where) {
    totalCount
  }
  patients(where: $where, options: $options) {
    smilePatientId
    cmoPatientId
    dmpPatientId
    totalSampleCount
    cmoSampleIds
    consentPartA
    consentPartC
    hasSampleSamples {
      smileSampleId
      hasMetadataSampleMetadata {
        primaryId
        cmoSampleName
        additionalProperties
      }
    }
    hasSampleSamplesConnection {
      totalCount
    }
    patientAliasesIsAlias {
      namespace
      value
    }
  }
}

query SamplesList(
  $where: SampleWhere
  $options: SampleOptions
  $sampleMetadataOptions: SampleMetadataOptions
  $bamCompletesOptions: BamCompleteOptions
  $mafCompletesOptions: MafCompleteOptions
  $qcCompletesOptions: QcCompleteOptions
) {
  samplesConnection(where: $where) {
    totalCount
  }
  samples(where: $where, options: $options) {
    ...SampleParts
    # SampleMetadata
    additionalProperties
    baitSet
    cfDNA2dBarcode
    cmoInfoIgoId
    cmoPatientId
    cmoSampleIdFields
    cmoSampleName
    collectionYear
    genePanel
    igoComplete
    igoRequestId
    importDate
    investigatorSampleId
    libraries
    oncotreeCode
    preservation
    primaryId
    qcReports
    sampleClass
    sampleName
    sampleOrigin
    sampleType
    sex
    species
    tissueLocation
    tubeId
    tumorOrNormal
    # SampleMetadata Status
    validationReport
    validationStatus
    # Oncotree
    cancerType
    cancerTypeDetailed
    # Tempo
    billed
    costCenter
    billedBy
    custodianInformation
    accessLevel
    # Tempo Custom
    initialPipelineRunDate
    embargoDate
    bamCompleteDate
    bamCompleteStatus
    mafCompleteDate
    mafCompleteNormalPrimaryId
    mafCompleteStatus
    qcCompleteDate
    qcCompleteResult
    qcCompleteReason
    qcCompleteStatus
    hasMetadataSampleMetadata(options: $sampleMetadataOptions) {
      ...SampleMetadataParts
      hasStatusStatuses {
        validationReport
        validationStatus
      }
    }
    requestsHasSample {
      ...RequestParts
    }
    patientsHasSample {
      smilePatientId
      cmoPatientId
      dmpPatientId
      patientAliasesIsAlias {
        namespace
        value
      }
    }
    cohortsHasCohortSample {
      cohortId
      hasCohortCompleteCohortCompletes {
        date
      }
    }
    hasTempoTempos {
      ...TempoParts
      hasEventBamCompletes(options: $bamCompletesOptions) {
        date
        status
      }
      hasEventMafCompletes(options: $mafCompletesOptions) {
        date
        normalPrimaryId
        status
      }
      hasEventQcCompletes(options: $qcCompletesOptions) {
        date
        reason
        result
        status
      }
    }
  }
}

fragment RequestParts on Request {
  igoRequestId
  igoProjectId
  genePanel
  dataAnalystName
  dataAnalystEmail
  dataAccessEmails
  bicAnalysis
  investigatorEmail
  investigatorName
  isCmoRequest
  labHeadEmail
  labHeadName
  libraryType
  otherContactEmails
  piEmail
  projectManagerName
  qcAccessEmails
  smileRequestId
}

fragment SampleParts on Sample {
  datasource
  revisable
  sampleCategory
  sampleClass
  smileSampleId
}

fragment SampleMetadataParts on SampleMetadata {
  additionalProperties
  baitSet
  cfDNA2dBarcode
  cmoInfoIgoId
  cmoPatientId
  cmoSampleIdFields
  cmoSampleName
  collectionYear
  genePanel
  igoComplete
  igoRequestId
  importDate
  investigatorSampleId
  libraries
  oncotreeCode
  preservation
  primaryId
  qcReports
  sampleClass
  sampleName
  sampleOrigin
  sampleType
  sex
  species
  tissueLocation
  tubeId
  tumorOrNormal
}

fragment TempoParts on Tempo {
  smileTempoId
  billed
  billedBy
  costCenter
  custodianInformation
  accessLevel
}

query Samples(
  $where: SampleWhere
  $hasMetadataSampleMetadataWhere2: SampleMetadataWhere
  $hasMetadataSampleMetadataOptions2: SampleMetadataOptions
) {
  samples(where: $where) {
    smileSampleId
    revisable
    sampleCategory
    sampleClass
    datasource
    hasMetadataSampleMetadata(
      where: $hasMetadataSampleMetadataWhere2
      options: $hasMetadataSampleMetadataOptions2
    ) {
      ...SampleMetadataParts
    }
    hasTempoTempos {
      ...TempoParts
    }
  }
}

mutation UpdateSamples(
  $where: SampleWhere
  $update: SampleUpdateInput
  $connect: SampleConnectInput
) {
  updateSamples(where: $where, update: $update, connect: $connect) {
    samples {
      smileSampleId
      revisable
      datasource
      sampleCategory
      sampleClass
      hasMetadataSampleMetadata {
        ...SampleMetadataParts
      }
      hasTempoTempos {
        ...TempoParts
      }
    }
  }
}

query GetPatientIdsTriplets($patientIds: [String!]!) {
  patientIdsTriplets(patientIds: $patientIds) {
    CMO_ID
    DMP_ID
    PT_MRN
  }
}

query CohortsList(
  $where: CohortWhere
  $options: CohortOptions
  $hasCohortCompleteCohortCompletesOptions2: CohortCompleteOptions
) {
  cohortsConnection(where: $where) {
    totalCount
  }
  cohorts(where: $where, options: $options) {
    cohortId
    smileSampleIds
    totalSampleCount
    billed
    initialCohortDeliveryDate
    endUsers
    pmUsers
    projectTitle
    projectSubtitle
    status
    type
    hasCohortCompleteCohortCompletes(
      options: $hasCohortCompleteCohortCompletesOptions2
    ) {
      date
      endUsers
      pmUsers
      projectTitle
      projectSubtitle
      status
      type
    }
    hasCohortSampleSamplesConnection {
      totalCount
    }
    hasCohortSampleSamples {
      smileSampleId
      hasTempoTempos {
        smileTempoId
        billed
      }
    }
  }
}
