type Query {
  patients(where: PatientWhere, options: PatientOptions): [Patient!]!
  patientsAggregate(where: PatientWhere): PatientAggregateSelection!
  patientsConnection(
    first: Int
    after: String
    where: PatientWhere
    sort: [PatientSort]
  ): PatientsConnection!
  patientAliases(
    where: PatientAliasWhere
    options: PatientAliasOptions
  ): [PatientAlias!]!
  patientAliasesAggregate(
    where: PatientAliasWhere
  ): PatientAliasAggregateSelection!
  patientAliasesConnection(
    first: Int
    after: String
    where: PatientAliasWhere
    sort: [PatientAliasSort]
  ): PatientAliasesConnection!
  projects(where: ProjectWhere, options: ProjectOptions): [Project!]!
  projectsAggregate(where: ProjectWhere): ProjectAggregateSelection!
  projectsConnection(
    first: Int
    after: String
    where: ProjectWhere
    sort: [ProjectSort]
  ): ProjectsConnection!
  requests(where: RequestWhere, options: RequestOptions): [Request!]!
  requestsAggregate(where: RequestWhere): RequestAggregateSelection!
  requestsConnection(
    first: Int
    after: String
    where: RequestWhere
    sort: [RequestSort]
  ): RequestsConnection!
  requestMetadata(
    where: RequestMetadataWhere
    options: RequestMetadataOptions
  ): [RequestMetadata!]!
  requestMetadataAggregate(
    where: RequestMetadataWhere
  ): RequestMetadataAggregateSelection!
  requestMetadataConnection(
    first: Int
    after: String
    where: RequestMetadataWhere
    sort: [RequestMetadataSort]
  ): RequestMetadataConnection!
  samples(where: SampleWhere, options: SampleOptions): [Sample!]!
  samplesAggregate(where: SampleWhere): SampleAggregateSelection!
  samplesConnection(
    first: Int
    after: String
    where: SampleWhere
    sort: [SampleSort]
  ): SamplesConnection!
  sampleAliases(
    where: SampleAliasWhere
    options: SampleAliasOptions
  ): [SampleAlias!]!
  sampleAliasesAggregate(
    where: SampleAliasWhere
  ): SampleAliasAggregateSelection!
  sampleAliasesConnection(
    first: Int
    after: String
    where: SampleAliasWhere
    sort: [SampleAliasSort]
  ): SampleAliasesConnection!
  sampleMetadata(
    where: SampleMetadataWhere
    options: SampleMetadataOptions
  ): [SampleMetadata!]!
  sampleMetadataAggregate(
    where: SampleMetadataWhere
  ): SampleMetadataAggregateSelection!
  sampleMetadataConnection(
    first: Int
    after: String
    where: SampleMetadataWhere
    sort: [SampleMetadataSort]
  ): SampleMetadataConnection!
}

enum SortDirection {
  """
  Sort by field values in ascending order.
  """
  ASC

  """
  Sort by field values in descending order.
  """
  DESC
}

"""
Pagination information (Relay)
"""
type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Patient {
  smilePatientId: String!
  hasSampleSamples(
    where: SampleWhere
    options: SampleOptions
    directed: Boolean = true
  ): [Sample!]!
  hasSampleSamplesAggregate(
    where: SampleWhere
    directed: Boolean = true
  ): PatientSampleHasSampleSamplesAggregationSelection
  patientAliasesIsAlias(
    where: PatientAliasWhere
    options: PatientAliasOptions
    directed: Boolean = true
  ): [PatientAlias!]!
  patientAliasesIsAliasAggregate(
    where: PatientAliasWhere
    directed: Boolean = true
  ): PatientPatientAliasPatientAliasesIsAliasAggregationSelection
  hasSampleSamplesConnection(
    where: PatientHasSampleSamplesConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [PatientHasSampleSamplesConnectionSort!]
  ): PatientHasSampleSamplesConnection!
  patientAliasesIsAliasConnection(
    where: PatientPatientAliasesIsAliasConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [PatientPatientAliasesIsAliasConnectionSort!]
  ): PatientPatientAliasesIsAliasConnection!
}

type PatientAggregateSelection {
  count: Int!
  smilePatientId: StringAggregateSelectionNonNullable!
}

type PatientAlias {
  namespace: String!
  value: String!
  isAliasPatients(
    where: PatientWhere
    options: PatientOptions
    directed: Boolean = true
  ): [Patient!]!
  isAliasPatientsAggregate(
    where: PatientWhere
    directed: Boolean = true
  ): PatientAliasPatientIsAliasPatientsAggregationSelection
  isAliasPatientsConnection(
    where: PatientAliasIsAliasPatientsConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [PatientAliasIsAliasPatientsConnectionSort!]
  ): PatientAliasIsAliasPatientsConnection!
}

type PatientAliasAggregateSelection {
  count: Int!
  namespace: StringAggregateSelectionNonNullable!
  value: StringAggregateSelectionNonNullable!
}

type PatientAliasEdge {
  cursor: String!
  node: PatientAlias!
}

type PatientAliasesConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [PatientAliasEdge!]!
}

type PatientAliasIsAliasPatientsConnection {
  edges: [PatientAliasIsAliasPatientsRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type PatientAliasIsAliasPatientsRelationship {
  cursor: String!
  node: Patient!
}

type PatientAliasPatientIsAliasPatientsAggregationSelection {
  count: Int!
  node: PatientAliasPatientIsAliasPatientsNodeAggregateSelection
}

type PatientAliasPatientIsAliasPatientsNodeAggregateSelection {
  smilePatientId: StringAggregateSelectionNonNullable!
}

type PatientEdge {
  cursor: String!
  node: Patient!
}

type PatientHasSampleSamplesConnection {
  edges: [PatientHasSampleSamplesRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type PatientHasSampleSamplesRelationship {
  cursor: String!
  node: Sample!
}

type PatientPatientAliasesIsAliasConnection {
  edges: [PatientPatientAliasesIsAliasRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type PatientPatientAliasesIsAliasRelationship {
  cursor: String!
  node: PatientAlias!
}

type PatientPatientAliasPatientAliasesIsAliasAggregationSelection {
  count: Int!
  node: PatientPatientAliasPatientAliasesIsAliasNodeAggregateSelection
}

type PatientPatientAliasPatientAliasesIsAliasNodeAggregateSelection {
  namespace: StringAggregateSelectionNonNullable!
  value: StringAggregateSelectionNonNullable!
}

type PatientSampleHasSampleSamplesAggregationSelection {
  count: Int!
  node: PatientSampleHasSampleSamplesNodeAggregateSelection
}

type PatientSampleHasSampleSamplesNodeAggregateSelection {
  datasource: StringAggregateSelectionNonNullable!
  sampleCategory: StringAggregateSelectionNonNullable!
  sampleClass: StringAggregateSelectionNonNullable!
  smileSampleId: StringAggregateSelectionNonNullable!
}

type PatientsConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [PatientEdge!]!
}

type Project {
  igoProjectId: String!
  namespace: String!
  hasRequestRequests(
    where: RequestWhere
    options: RequestOptions
    directed: Boolean = true
  ): [Request!]!
  hasRequestRequestsAggregate(
    where: RequestWhere
    directed: Boolean = true
  ): ProjectRequestHasRequestRequestsAggregationSelection
  hasRequestRequestsConnection(
    where: ProjectHasRequestRequestsConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [ProjectHasRequestRequestsConnectionSort!]
  ): ProjectHasRequestRequestsConnection!
}

type ProjectAggregateSelection {
  count: Int!
  igoProjectId: StringAggregateSelectionNonNullable!
  namespace: StringAggregateSelectionNonNullable!
}

type ProjectEdge {
  cursor: String!
  node: Project!
}

type ProjectHasRequestRequestsConnection {
  edges: [ProjectHasRequestRequestsRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type ProjectHasRequestRequestsRelationship {
  cursor: String!
  node: Request!
}

type ProjectRequestHasRequestRequestsAggregationSelection {
  count: Int!
  node: ProjectRequestHasRequestRequestsNodeAggregateSelection
}

type ProjectRequestHasRequestRequestsNodeAggregateSelection {
  dataAccessEmails: StringAggregateSelectionNonNullable!
  dataAnalystEmail: StringAggregateSelectionNonNullable!
  dataAnalystName: StringAggregateSelectionNonNullable!
  genePanel: StringAggregateSelectionNonNullable!
  igoProjectId: StringAggregateSelectionNonNullable!
  igoRequestId: StringAggregateSelectionNonNullable!
  investigatorEmail: StringAggregateSelectionNonNullable!
  investigatorName: StringAggregateSelectionNonNullable!
  labHeadEmail: StringAggregateSelectionNonNullable!
  labHeadName: StringAggregateSelectionNonNullable!
  namespace: StringAggregateSelectionNonNullable!
  otherContactEmails: StringAggregateSelectionNonNullable!
  piEmail: StringAggregateSelectionNonNullable!
  projectManagerName: StringAggregateSelectionNonNullable!
  qcAccessEmails: StringAggregateSelectionNonNullable!
  requestJson: StringAggregateSelectionNonNullable!
  smileRequestId: StringAggregateSelectionNonNullable!
}

type ProjectsConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [ProjectEdge!]!
}

type Request {
  bicAnalysis: Boolean!
  dataAccessEmails: String!
  dataAnalystEmail: String!
  dataAnalystName: String!
  genePanel: String!
  igoProjectId: String!
  igoRequestId: String!
  investigatorEmail: String!
  investigatorName: String!
  isCmoRequest: Boolean!
  labHeadEmail: String!
  labHeadName: String!
  namespace: String!
  otherContactEmails: String!
  piEmail: String!
  pooledNormals: [String]!
  projectManagerName: String!
  qcAccessEmails: String!
  requestJson: String!
  smileRequestId: String!
  hasMetadataRequestMetadata(
    where: RequestMetadataWhere
    options: RequestMetadataOptions
    directed: Boolean = true
  ): [RequestMetadata!]!
  hasMetadataRequestMetadataAggregate(
    where: RequestMetadataWhere
    directed: Boolean = true
  ): RequestRequestMetadataHasMetadataRequestMetadataAggregationSelection
  hasSampleSamples(
    where: SampleWhere
    options: SampleOptions
    directed: Boolean = true
  ): [Sample!]!
  hasSampleSamplesAggregate(
    where: SampleWhere
    directed: Boolean = true
  ): RequestSampleHasSampleSamplesAggregationSelection
  projectsHasRequest(
    where: ProjectWhere
    options: ProjectOptions
    directed: Boolean = true
  ): [Project!]!
  projectsHasRequestAggregate(
    where: ProjectWhere
    directed: Boolean = true
  ): RequestProjectProjectsHasRequestAggregationSelection
  hasMetadataRequestMetadataConnection(
    where: RequestHasMetadataRequestMetadataConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [RequestHasMetadataRequestMetadataConnectionSort!]
  ): RequestHasMetadataRequestMetadataConnection!
  hasSampleSamplesConnection(
    where: RequestHasSampleSamplesConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [RequestHasSampleSamplesConnectionSort!]
  ): RequestHasSampleSamplesConnection!
  projectsHasRequestConnection(
    where: RequestProjectsHasRequestConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [RequestProjectsHasRequestConnectionSort!]
  ): RequestProjectsHasRequestConnection!
}

type RequestAggregateSelection {
  count: Int!
  dataAccessEmails: StringAggregateSelectionNonNullable!
  dataAnalystEmail: StringAggregateSelectionNonNullable!
  dataAnalystName: StringAggregateSelectionNonNullable!
  genePanel: StringAggregateSelectionNonNullable!
  igoProjectId: StringAggregateSelectionNonNullable!
  igoRequestId: StringAggregateSelectionNonNullable!
  investigatorEmail: StringAggregateSelectionNonNullable!
  investigatorName: StringAggregateSelectionNonNullable!
  labHeadEmail: StringAggregateSelectionNonNullable!
  labHeadName: StringAggregateSelectionNonNullable!
  namespace: StringAggregateSelectionNonNullable!
  otherContactEmails: StringAggregateSelectionNonNullable!
  piEmail: StringAggregateSelectionNonNullable!
  projectManagerName: StringAggregateSelectionNonNullable!
  qcAccessEmails: StringAggregateSelectionNonNullable!
  requestJson: StringAggregateSelectionNonNullable!
  smileRequestId: StringAggregateSelectionNonNullable!
}

type RequestEdge {
  cursor: String!
  node: Request!
}

type RequestHasMetadataRequestMetadataConnection {
  edges: [RequestHasMetadataRequestMetadataRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type RequestHasMetadataRequestMetadataRelationship {
  cursor: String!
  node: RequestMetadata!
}

type RequestHasSampleSamplesConnection {
  edges: [RequestHasSampleSamplesRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type RequestHasSampleSamplesRelationship {
  cursor: String!
  node: Sample!
}

type RequestMetadata {
  igoRequestId: String!
  importDate: String!
  requestMetadataJson: String!
  requestsHasMetadata(
    where: RequestWhere
    options: RequestOptions
    directed: Boolean = true
  ): [Request!]!
  requestsHasMetadataAggregate(
    where: RequestWhere
    directed: Boolean = true
  ): RequestMetadataRequestRequestsHasMetadataAggregationSelection
  requestsHasMetadataConnection(
    where: RequestMetadataRequestsHasMetadataConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [RequestMetadataRequestsHasMetadataConnectionSort!]
  ): RequestMetadataRequestsHasMetadataConnection!
}

type RequestMetadataAggregateSelection {
  count: Int!
  igoRequestId: StringAggregateSelectionNonNullable!
  importDate: StringAggregateSelectionNonNullable!
  requestMetadataJson: StringAggregateSelectionNonNullable!
}

type RequestMetadataConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [RequestMetadataEdge!]!
}

type RequestMetadataEdge {
  cursor: String!
  node: RequestMetadata!
}

type RequestMetadataRequestRequestsHasMetadataAggregationSelection {
  count: Int!
  node: RequestMetadataRequestRequestsHasMetadataNodeAggregateSelection
}

type RequestMetadataRequestRequestsHasMetadataNodeAggregateSelection {
  dataAccessEmails: StringAggregateSelectionNonNullable!
  dataAnalystEmail: StringAggregateSelectionNonNullable!
  dataAnalystName: StringAggregateSelectionNonNullable!
  genePanel: StringAggregateSelectionNonNullable!
  igoProjectId: StringAggregateSelectionNonNullable!
  igoRequestId: StringAggregateSelectionNonNullable!
  investigatorEmail: StringAggregateSelectionNonNullable!
  investigatorName: StringAggregateSelectionNonNullable!
  labHeadEmail: StringAggregateSelectionNonNullable!
  labHeadName: StringAggregateSelectionNonNullable!
  namespace: StringAggregateSelectionNonNullable!
  otherContactEmails: StringAggregateSelectionNonNullable!
  piEmail: StringAggregateSelectionNonNullable!
  projectManagerName: StringAggregateSelectionNonNullable!
  qcAccessEmails: StringAggregateSelectionNonNullable!
  requestJson: StringAggregateSelectionNonNullable!
  smileRequestId: StringAggregateSelectionNonNullable!
}

type RequestMetadataRequestsHasMetadataConnection {
  edges: [RequestMetadataRequestsHasMetadataRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type RequestMetadataRequestsHasMetadataRelationship {
  cursor: String!
  node: Request!
}

type RequestProjectProjectsHasRequestAggregationSelection {
  count: Int!
  node: RequestProjectProjectsHasRequestNodeAggregateSelection
}

type RequestProjectProjectsHasRequestNodeAggregateSelection {
  igoProjectId: StringAggregateSelectionNonNullable!
  namespace: StringAggregateSelectionNonNullable!
}

type RequestProjectsHasRequestConnection {
  edges: [RequestProjectsHasRequestRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type RequestProjectsHasRequestRelationship {
  cursor: String!
  node: Project!
}

type RequestRequestMetadataHasMetadataRequestMetadataAggregationSelection {
  count: Int!
  node: RequestRequestMetadataHasMetadataRequestMetadataNodeAggregateSelection
}

type RequestRequestMetadataHasMetadataRequestMetadataNodeAggregateSelection {
  igoRequestId: StringAggregateSelectionNonNullable!
  importDate: StringAggregateSelectionNonNullable!
  requestMetadataJson: StringAggregateSelectionNonNullable!
}

type RequestSampleHasSampleSamplesAggregationSelection {
  count: Int!
  node: RequestSampleHasSampleSamplesNodeAggregateSelection
}

type RequestSampleHasSampleSamplesNodeAggregateSelection {
  datasource: StringAggregateSelectionNonNullable!
  sampleCategory: StringAggregateSelectionNonNullable!
  sampleClass: StringAggregateSelectionNonNullable!
  smileSampleId: StringAggregateSelectionNonNullable!
}

type RequestsConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [RequestEdge!]!
}

type Sample {
  datasource: String!
  sampleCategory: String!
  sampleClass: String!
  smileSampleId: String!
  hasMetadataSampleMetadata(
    where: SampleMetadataWhere
    options: SampleMetadataOptions
    directed: Boolean = true
  ): [SampleMetadata!]!
  hasMetadataSampleMetadataAggregate(
    where: SampleMetadataWhere
    directed: Boolean = true
  ): SampleSampleMetadataHasMetadataSampleMetadataAggregationSelection
  patientsHasSample(
    where: PatientWhere
    options: PatientOptions
    directed: Boolean = true
  ): [Patient!]!
  patientsHasSampleAggregate(
    where: PatientWhere
    directed: Boolean = true
  ): SamplePatientPatientsHasSampleAggregationSelection
  requestsHasSample(
    where: RequestWhere
    options: RequestOptions
    directed: Boolean = true
  ): [Request!]!
  requestsHasSampleAggregate(
    where: RequestWhere
    directed: Boolean = true
  ): SampleRequestRequestsHasSampleAggregationSelection
  sampleAliasesIsAlias(
    where: SampleAliasWhere
    options: SampleAliasOptions
    directed: Boolean = true
  ): [SampleAlias!]!
  sampleAliasesIsAliasAggregate(
    where: SampleAliasWhere
    directed: Boolean = true
  ): SampleSampleAliasSampleAliasesIsAliasAggregationSelection
  hasMetadataSampleMetadataConnection(
    where: SampleHasMetadataSampleMetadataConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [SampleHasMetadataSampleMetadataConnectionSort!]
  ): SampleHasMetadataSampleMetadataConnection!
  patientsHasSampleConnection(
    where: SamplePatientsHasSampleConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [SamplePatientsHasSampleConnectionSort!]
  ): SamplePatientsHasSampleConnection!
  requestsHasSampleConnection(
    where: SampleRequestsHasSampleConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [SampleRequestsHasSampleConnectionSort!]
  ): SampleRequestsHasSampleConnection!
  sampleAliasesIsAliasConnection(
    where: SampleSampleAliasesIsAliasConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [SampleSampleAliasesIsAliasConnectionSort!]
  ): SampleSampleAliasesIsAliasConnection!
}

type SampleAggregateSelection {
  count: Int!
  datasource: StringAggregateSelectionNonNullable!
  sampleCategory: StringAggregateSelectionNonNullable!
  sampleClass: StringAggregateSelectionNonNullable!
  smileSampleId: StringAggregateSelectionNonNullable!
}

type SampleAlias {
  namespace: String!
  value: String!
  isAliasSamples(
    where: SampleWhere
    options: SampleOptions
    directed: Boolean = true
  ): [Sample!]!
  isAliasSamplesAggregate(
    where: SampleWhere
    directed: Boolean = true
  ): SampleAliasSampleIsAliasSamplesAggregationSelection
  isAliasSamplesConnection(
    where: SampleAliasIsAliasSamplesConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [SampleAliasIsAliasSamplesConnectionSort!]
  ): SampleAliasIsAliasSamplesConnection!
}

type SampleAliasAggregateSelection {
  count: Int!
  namespace: StringAggregateSelectionNonNullable!
  value: StringAggregateSelectionNonNullable!
}

type SampleAliasEdge {
  cursor: String!
  node: SampleAlias!
}

type SampleAliasesConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [SampleAliasEdge!]!
}

type SampleAliasIsAliasSamplesConnection {
  edges: [SampleAliasIsAliasSamplesRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type SampleAliasIsAliasSamplesRelationship {
  cursor: String!
  node: Sample!
}

type SampleAliasSampleIsAliasSamplesAggregationSelection {
  count: Int!
  node: SampleAliasSampleIsAliasSamplesNodeAggregateSelection
}

type SampleAliasSampleIsAliasSamplesNodeAggregateSelection {
  datasource: StringAggregateSelectionNonNullable!
  sampleCategory: StringAggregateSelectionNonNullable!
  sampleClass: StringAggregateSelectionNonNullable!
  smileSampleId: StringAggregateSelectionNonNullable!
}

type SampleEdge {
  cursor: String!
  node: Sample!
}

type SampleHasMetadataSampleMetadataConnection {
  edges: [SampleHasMetadataSampleMetadataRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type SampleHasMetadataSampleMetadataRelationship {
  cursor: String!
  node: SampleMetadata!
}

type SampleMetadata {
  additionalProperties: String!
  baitSet: String!
  cmoPatientId: String!
  cmoSampleIdFields: String!
  cmoSampleName: String
  collectionYear: String!
  genePanel: String!
  igoComplete: Boolean
  igoRequestId: String
  importDate: String!
  investigatorSampleId: String
  libraries: String!
  oncotreeCode: String
  preservation: String
  primaryId: String!
  qcReports: String!
  sampleClass: String!
  sampleName: String
  sampleOrigin: String
  sampleType: String!
  sex: String!
  species: String!
  tissueLocation: String
  tubeId: String
  tumorOrNormal: String!
  samplesHasMetadata(
    where: SampleWhere
    options: SampleOptions
    directed: Boolean = true
  ): [Sample!]!
  samplesHasMetadataAggregate(
    where: SampleWhere
    directed: Boolean = true
  ): SampleMetadataSampleSamplesHasMetadataAggregationSelection
  samplesHasMetadataConnection(
    where: SampleMetadataSamplesHasMetadataConnectionWhere
    first: Int
    after: String
    directed: Boolean = true
    sort: [SampleMetadataSamplesHasMetadataConnectionSort!]
  ): SampleMetadataSamplesHasMetadataConnection!
}

type SampleMetadataAggregateSelection {
  count: Int!
  additionalProperties: StringAggregateSelectionNonNullable!
  baitSet: StringAggregateSelectionNonNullable!
  cmoPatientId: StringAggregateSelectionNonNullable!
  cmoSampleIdFields: StringAggregateSelectionNonNullable!
  cmoSampleName: StringAggregateSelectionNullable!
  collectionYear: StringAggregateSelectionNonNullable!
  genePanel: StringAggregateSelectionNonNullable!
  igoRequestId: StringAggregateSelectionNullable!
  importDate: StringAggregateSelectionNonNullable!
  investigatorSampleId: StringAggregateSelectionNullable!
  libraries: StringAggregateSelectionNonNullable!
  oncotreeCode: StringAggregateSelectionNullable!
  preservation: StringAggregateSelectionNullable!
  primaryId: StringAggregateSelectionNonNullable!
  qcReports: StringAggregateSelectionNonNullable!
  sampleClass: StringAggregateSelectionNonNullable!
  sampleName: StringAggregateSelectionNullable!
  sampleOrigin: StringAggregateSelectionNullable!
  sampleType: StringAggregateSelectionNonNullable!
  sex: StringAggregateSelectionNonNullable!
  species: StringAggregateSelectionNonNullable!
  tissueLocation: StringAggregateSelectionNullable!
  tubeId: StringAggregateSelectionNullable!
  tumorOrNormal: StringAggregateSelectionNonNullable!
}

type SampleMetadataConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [SampleMetadataEdge!]!
}

type SampleMetadataEdge {
  cursor: String!
  node: SampleMetadata!
}

type SampleMetadataSampleSamplesHasMetadataAggregationSelection {
  count: Int!
  node: SampleMetadataSampleSamplesHasMetadataNodeAggregateSelection
}

type SampleMetadataSampleSamplesHasMetadataNodeAggregateSelection {
  datasource: StringAggregateSelectionNonNullable!
  sampleCategory: StringAggregateSelectionNonNullable!
  sampleClass: StringAggregateSelectionNonNullable!
  smileSampleId: StringAggregateSelectionNonNullable!
}

type SampleMetadataSamplesHasMetadataConnection {
  edges: [SampleMetadataSamplesHasMetadataRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type SampleMetadataSamplesHasMetadataRelationship {
  cursor: String!
  node: Sample!
}

type SamplePatientPatientsHasSampleAggregationSelection {
  count: Int!
  node: SamplePatientPatientsHasSampleNodeAggregateSelection
}

type SamplePatientPatientsHasSampleNodeAggregateSelection {
  smilePatientId: StringAggregateSelectionNonNullable!
}

type SamplePatientsHasSampleConnection {
  edges: [SamplePatientsHasSampleRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type SamplePatientsHasSampleRelationship {
  cursor: String!
  node: Patient!
}

type SampleRequestRequestsHasSampleAggregationSelection {
  count: Int!
  node: SampleRequestRequestsHasSampleNodeAggregateSelection
}

type SampleRequestRequestsHasSampleNodeAggregateSelection {
  dataAccessEmails: StringAggregateSelectionNonNullable!
  dataAnalystEmail: StringAggregateSelectionNonNullable!
  dataAnalystName: StringAggregateSelectionNonNullable!
  genePanel: StringAggregateSelectionNonNullable!
  igoProjectId: StringAggregateSelectionNonNullable!
  igoRequestId: StringAggregateSelectionNonNullable!
  investigatorEmail: StringAggregateSelectionNonNullable!
  investigatorName: StringAggregateSelectionNonNullable!
  labHeadEmail: StringAggregateSelectionNonNullable!
  labHeadName: StringAggregateSelectionNonNullable!
  namespace: StringAggregateSelectionNonNullable!
  otherContactEmails: StringAggregateSelectionNonNullable!
  piEmail: StringAggregateSelectionNonNullable!
  projectManagerName: StringAggregateSelectionNonNullable!
  qcAccessEmails: StringAggregateSelectionNonNullable!
  requestJson: StringAggregateSelectionNonNullable!
  smileRequestId: StringAggregateSelectionNonNullable!
}

type SampleRequestsHasSampleConnection {
  edges: [SampleRequestsHasSampleRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type SampleRequestsHasSampleRelationship {
  cursor: String!
  node: Request!
}

type SampleSampleAliasesIsAliasConnection {
  edges: [SampleSampleAliasesIsAliasRelationship!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type SampleSampleAliasesIsAliasRelationship {
  cursor: String!
  node: SampleAlias!
}

type SampleSampleAliasSampleAliasesIsAliasAggregationSelection {
  count: Int!
  node: SampleSampleAliasSampleAliasesIsAliasNodeAggregateSelection
}

type SampleSampleAliasSampleAliasesIsAliasNodeAggregateSelection {
  namespace: StringAggregateSelectionNonNullable!
  value: StringAggregateSelectionNonNullable!
}

type SampleSampleMetadataHasMetadataSampleMetadataAggregationSelection {
  count: Int!
  node: SampleSampleMetadataHasMetadataSampleMetadataNodeAggregateSelection
}

type SampleSampleMetadataHasMetadataSampleMetadataNodeAggregateSelection {
  additionalProperties: StringAggregateSelectionNonNullable!
  baitSet: StringAggregateSelectionNonNullable!
  cmoPatientId: StringAggregateSelectionNonNullable!
  cmoSampleIdFields: StringAggregateSelectionNonNullable!
  cmoSampleName: StringAggregateSelectionNullable!
  collectionYear: StringAggregateSelectionNonNullable!
  genePanel: StringAggregateSelectionNonNullable!
  igoRequestId: StringAggregateSelectionNullable!
  importDate: StringAggregateSelectionNonNullable!
  investigatorSampleId: StringAggregateSelectionNullable!
  libraries: StringAggregateSelectionNonNullable!
  oncotreeCode: StringAggregateSelectionNullable!
  preservation: StringAggregateSelectionNullable!
  primaryId: StringAggregateSelectionNonNullable!
  qcReports: StringAggregateSelectionNonNullable!
  sampleClass: StringAggregateSelectionNonNullable!
  sampleName: StringAggregateSelectionNullable!
  sampleOrigin: StringAggregateSelectionNullable!
  sampleType: StringAggregateSelectionNonNullable!
  sex: StringAggregateSelectionNonNullable!
  species: StringAggregateSelectionNonNullable!
  tissueLocation: StringAggregateSelectionNullable!
  tubeId: StringAggregateSelectionNullable!
  tumorOrNormal: StringAggregateSelectionNonNullable!
}

type SamplesConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [SampleEdge!]!
}

type StringAggregateSelectionNonNullable {
  shortest: String!
  longest: String!
}

type StringAggregateSelectionNullable {
  shortest: String
  longest: String
}

input PatientAliasIsAliasPatientsAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [PatientAliasIsAliasPatientsAggregateInput!]
  OR: [PatientAliasIsAliasPatientsAggregateInput!]
  node: PatientAliasIsAliasPatientsNodeAggregationWhereInput
}

input PatientAliasIsAliasPatientsConnectionSort {
  node: PatientSort
}

input PatientAliasIsAliasPatientsConnectionWhere {
  AND: [PatientAliasIsAliasPatientsConnectionWhere!]
  OR: [PatientAliasIsAliasPatientsConnectionWhere!]
  node: PatientWhere
  node_NOT: PatientWhere
}

input PatientAliasIsAliasPatientsNodeAggregationWhereInput {
  AND: [PatientAliasIsAliasPatientsNodeAggregationWhereInput!]
  OR: [PatientAliasIsAliasPatientsNodeAggregationWhereInput!]
  smilePatientId_EQUAL: String
  smilePatientId_AVERAGE_EQUAL: Float
  smilePatientId_LONGEST_EQUAL: Int
  smilePatientId_SHORTEST_EQUAL: Int
  smilePatientId_GT: Int
  smilePatientId_AVERAGE_GT: Float
  smilePatientId_LONGEST_GT: Int
  smilePatientId_SHORTEST_GT: Int
  smilePatientId_GTE: Int
  smilePatientId_AVERAGE_GTE: Float
  smilePatientId_LONGEST_GTE: Int
  smilePatientId_SHORTEST_GTE: Int
  smilePatientId_LT: Int
  smilePatientId_AVERAGE_LT: Float
  smilePatientId_LONGEST_LT: Int
  smilePatientId_SHORTEST_LT: Int
  smilePatientId_LTE: Int
  smilePatientId_AVERAGE_LTE: Float
  smilePatientId_LONGEST_LTE: Int
  smilePatientId_SHORTEST_LTE: Int
}

input PatientAliasOptions {
  """
  Specify one or more PatientAliasSort objects to sort PatientAliases by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [PatientAliasSort!]
  limit: Int
  offset: Int
}

"""
Fields to sort PatientAliases by. The order in which sorts are applied is not guaranteed when specifying many fields in one PatientAliasSort object.
"""
input PatientAliasSort {
  namespace: SortDirection
  value: SortDirection
}

input PatientAliasWhere {
  OR: [PatientAliasWhere!]
  AND: [PatientAliasWhere!]
  namespace: String
  namespace_NOT: String
  namespace_IN: [String!]
  namespace_NOT_IN: [String!]
  namespace_CONTAINS: String
  namespace_NOT_CONTAINS: String
  namespace_STARTS_WITH: String
  namespace_NOT_STARTS_WITH: String
  namespace_ENDS_WITH: String
  namespace_NOT_ENDS_WITH: String
  value: String
  value_NOT: String
  value_IN: [String!]
  value_NOT_IN: [String!]
  value_CONTAINS: String
  value_NOT_CONTAINS: String
  value_STARTS_WITH: String
  value_NOT_STARTS_WITH: String
  value_ENDS_WITH: String
  value_NOT_ENDS_WITH: String
  isAliasPatients: PatientWhere
    @deprecated(reason: "Use `isAliasPatients_SOME` instead.")
  isAliasPatients_NOT: PatientWhere
    @deprecated(reason: "Use `isAliasPatients_NONE` instead.")
  isAliasPatientsAggregate: PatientAliasIsAliasPatientsAggregateInput

  """
  Return PatientAliases where all of the related Patients match this filter
  """
  isAliasPatients_ALL: PatientWhere

  """
  Return PatientAliases where none of the related Patients match this filter
  """
  isAliasPatients_NONE: PatientWhere

  """
  Return PatientAliases where one of the related Patients match this filter
  """
  isAliasPatients_SINGLE: PatientWhere

  """
  Return PatientAliases where some of the related Patients match this filter
  """
  isAliasPatients_SOME: PatientWhere
  isAliasPatientsConnection: PatientAliasIsAliasPatientsConnectionWhere
    @deprecated(reason: "Use `isAliasPatientsConnection_SOME` instead.")
  isAliasPatientsConnection_NOT: PatientAliasIsAliasPatientsConnectionWhere
    @deprecated(reason: "Use `isAliasPatientsConnection_NONE` instead.")
  isAliasPatientsConnection_ALL: PatientAliasIsAliasPatientsConnectionWhere
  isAliasPatientsConnection_NONE: PatientAliasIsAliasPatientsConnectionWhere
  isAliasPatientsConnection_SINGLE: PatientAliasIsAliasPatientsConnectionWhere
  isAliasPatientsConnection_SOME: PatientAliasIsAliasPatientsConnectionWhere
}

input PatientHasSampleSamplesAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [PatientHasSampleSamplesAggregateInput!]
  OR: [PatientHasSampleSamplesAggregateInput!]
  node: PatientHasSampleSamplesNodeAggregationWhereInput
}

input PatientHasSampleSamplesConnectionSort {
  node: SampleSort
}

input PatientHasSampleSamplesConnectionWhere {
  AND: [PatientHasSampleSamplesConnectionWhere!]
  OR: [PatientHasSampleSamplesConnectionWhere!]
  node: SampleWhere
  node_NOT: SampleWhere
}

input PatientHasSampleSamplesNodeAggregationWhereInput {
  AND: [PatientHasSampleSamplesNodeAggregationWhereInput!]
  OR: [PatientHasSampleSamplesNodeAggregationWhereInput!]
  datasource_EQUAL: String
  datasource_AVERAGE_EQUAL: Float
  datasource_LONGEST_EQUAL: Int
  datasource_SHORTEST_EQUAL: Int
  datasource_GT: Int
  datasource_AVERAGE_GT: Float
  datasource_LONGEST_GT: Int
  datasource_SHORTEST_GT: Int
  datasource_GTE: Int
  datasource_AVERAGE_GTE: Float
  datasource_LONGEST_GTE: Int
  datasource_SHORTEST_GTE: Int
  datasource_LT: Int
  datasource_AVERAGE_LT: Float
  datasource_LONGEST_LT: Int
  datasource_SHORTEST_LT: Int
  datasource_LTE: Int
  datasource_AVERAGE_LTE: Float
  datasource_LONGEST_LTE: Int
  datasource_SHORTEST_LTE: Int
  sampleCategory_EQUAL: String
  sampleCategory_AVERAGE_EQUAL: Float
  sampleCategory_LONGEST_EQUAL: Int
  sampleCategory_SHORTEST_EQUAL: Int
  sampleCategory_GT: Int
  sampleCategory_AVERAGE_GT: Float
  sampleCategory_LONGEST_GT: Int
  sampleCategory_SHORTEST_GT: Int
  sampleCategory_GTE: Int
  sampleCategory_AVERAGE_GTE: Float
  sampleCategory_LONGEST_GTE: Int
  sampleCategory_SHORTEST_GTE: Int
  sampleCategory_LT: Int
  sampleCategory_AVERAGE_LT: Float
  sampleCategory_LONGEST_LT: Int
  sampleCategory_SHORTEST_LT: Int
  sampleCategory_LTE: Int
  sampleCategory_AVERAGE_LTE: Float
  sampleCategory_LONGEST_LTE: Int
  sampleCategory_SHORTEST_LTE: Int
  sampleClass_EQUAL: String
  sampleClass_AVERAGE_EQUAL: Float
  sampleClass_LONGEST_EQUAL: Int
  sampleClass_SHORTEST_EQUAL: Int
  sampleClass_GT: Int
  sampleClass_AVERAGE_GT: Float
  sampleClass_LONGEST_GT: Int
  sampleClass_SHORTEST_GT: Int
  sampleClass_GTE: Int
  sampleClass_AVERAGE_GTE: Float
  sampleClass_LONGEST_GTE: Int
  sampleClass_SHORTEST_GTE: Int
  sampleClass_LT: Int
  sampleClass_AVERAGE_LT: Float
  sampleClass_LONGEST_LT: Int
  sampleClass_SHORTEST_LT: Int
  sampleClass_LTE: Int
  sampleClass_AVERAGE_LTE: Float
  sampleClass_LONGEST_LTE: Int
  sampleClass_SHORTEST_LTE: Int
  smileSampleId_EQUAL: String
  smileSampleId_AVERAGE_EQUAL: Float
  smileSampleId_LONGEST_EQUAL: Int
  smileSampleId_SHORTEST_EQUAL: Int
  smileSampleId_GT: Int
  smileSampleId_AVERAGE_GT: Float
  smileSampleId_LONGEST_GT: Int
  smileSampleId_SHORTEST_GT: Int
  smileSampleId_GTE: Int
  smileSampleId_AVERAGE_GTE: Float
  smileSampleId_LONGEST_GTE: Int
  smileSampleId_SHORTEST_GTE: Int
  smileSampleId_LT: Int
  smileSampleId_AVERAGE_LT: Float
  smileSampleId_LONGEST_LT: Int
  smileSampleId_SHORTEST_LT: Int
  smileSampleId_LTE: Int
  smileSampleId_AVERAGE_LTE: Float
  smileSampleId_LONGEST_LTE: Int
  smileSampleId_SHORTEST_LTE: Int
}

input PatientOptions {
  """
  Specify one or more PatientSort objects to sort Patients by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [PatientSort!]
  limit: Int
  offset: Int
}

input PatientPatientAliasesIsAliasAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [PatientPatientAliasesIsAliasAggregateInput!]
  OR: [PatientPatientAliasesIsAliasAggregateInput!]
  node: PatientPatientAliasesIsAliasNodeAggregationWhereInput
}

input PatientPatientAliasesIsAliasConnectionSort {
  node: PatientAliasSort
}

input PatientPatientAliasesIsAliasConnectionWhere {
  AND: [PatientPatientAliasesIsAliasConnectionWhere!]
  OR: [PatientPatientAliasesIsAliasConnectionWhere!]
  node: PatientAliasWhere
  node_NOT: PatientAliasWhere
}

input PatientPatientAliasesIsAliasNodeAggregationWhereInput {
  AND: [PatientPatientAliasesIsAliasNodeAggregationWhereInput!]
  OR: [PatientPatientAliasesIsAliasNodeAggregationWhereInput!]
  namespace_EQUAL: String
  namespace_AVERAGE_EQUAL: Float
  namespace_LONGEST_EQUAL: Int
  namespace_SHORTEST_EQUAL: Int
  namespace_GT: Int
  namespace_AVERAGE_GT: Float
  namespace_LONGEST_GT: Int
  namespace_SHORTEST_GT: Int
  namespace_GTE: Int
  namespace_AVERAGE_GTE: Float
  namespace_LONGEST_GTE: Int
  namespace_SHORTEST_GTE: Int
  namespace_LT: Int
  namespace_AVERAGE_LT: Float
  namespace_LONGEST_LT: Int
  namespace_SHORTEST_LT: Int
  namespace_LTE: Int
  namespace_AVERAGE_LTE: Float
  namespace_LONGEST_LTE: Int
  namespace_SHORTEST_LTE: Int
  value_EQUAL: String
  value_AVERAGE_EQUAL: Float
  value_LONGEST_EQUAL: Int
  value_SHORTEST_EQUAL: Int
  value_GT: Int
  value_AVERAGE_GT: Float
  value_LONGEST_GT: Int
  value_SHORTEST_GT: Int
  value_GTE: Int
  value_AVERAGE_GTE: Float
  value_LONGEST_GTE: Int
  value_SHORTEST_GTE: Int
  value_LT: Int
  value_AVERAGE_LT: Float
  value_LONGEST_LT: Int
  value_SHORTEST_LT: Int
  value_LTE: Int
  value_AVERAGE_LTE: Float
  value_LONGEST_LTE: Int
  value_SHORTEST_LTE: Int
}

"""
Fields to sort Patients by. The order in which sorts are applied is not guaranteed when specifying many fields in one PatientSort object.
"""
input PatientSort {
  smilePatientId: SortDirection
}

input PatientWhere {
  OR: [PatientWhere!]
  AND: [PatientWhere!]
  smilePatientId: String
  smilePatientId_NOT: String
  smilePatientId_IN: [String!]
  smilePatientId_NOT_IN: [String!]
  smilePatientId_CONTAINS: String
  smilePatientId_NOT_CONTAINS: String
  smilePatientId_STARTS_WITH: String
  smilePatientId_NOT_STARTS_WITH: String
  smilePatientId_ENDS_WITH: String
  smilePatientId_NOT_ENDS_WITH: String
  hasSampleSamples: SampleWhere
    @deprecated(reason: "Use `hasSampleSamples_SOME` instead.")
  hasSampleSamples_NOT: SampleWhere
    @deprecated(reason: "Use `hasSampleSamples_NONE` instead.")
  hasSampleSamplesAggregate: PatientHasSampleSamplesAggregateInput

  """
  Return Patients where all of the related Samples match this filter
  """
  hasSampleSamples_ALL: SampleWhere

  """
  Return Patients where none of the related Samples match this filter
  """
  hasSampleSamples_NONE: SampleWhere

  """
  Return Patients where one of the related Samples match this filter
  """
  hasSampleSamples_SINGLE: SampleWhere

  """
  Return Patients where some of the related Samples match this filter
  """
  hasSampleSamples_SOME: SampleWhere
  patientAliasesIsAlias: PatientAliasWhere
    @deprecated(reason: "Use `patientAliasesIsAlias_SOME` instead.")
  patientAliasesIsAlias_NOT: PatientAliasWhere
    @deprecated(reason: "Use `patientAliasesIsAlias_NONE` instead.")
  patientAliasesIsAliasAggregate: PatientPatientAliasesIsAliasAggregateInput

  """
  Return Patients where all of the related PatientAliases match this filter
  """
  patientAliasesIsAlias_ALL: PatientAliasWhere

  """
  Return Patients where none of the related PatientAliases match this filter
  """
  patientAliasesIsAlias_NONE: PatientAliasWhere

  """
  Return Patients where one of the related PatientAliases match this filter
  """
  patientAliasesIsAlias_SINGLE: PatientAliasWhere

  """
  Return Patients where some of the related PatientAliases match this filter
  """
  patientAliasesIsAlias_SOME: PatientAliasWhere
  hasSampleSamplesConnection: PatientHasSampleSamplesConnectionWhere
    @deprecated(reason: "Use `hasSampleSamplesConnection_SOME` instead.")
  hasSampleSamplesConnection_NOT: PatientHasSampleSamplesConnectionWhere
    @deprecated(reason: "Use `hasSampleSamplesConnection_NONE` instead.")
  hasSampleSamplesConnection_ALL: PatientHasSampleSamplesConnectionWhere
  hasSampleSamplesConnection_NONE: PatientHasSampleSamplesConnectionWhere
  hasSampleSamplesConnection_SINGLE: PatientHasSampleSamplesConnectionWhere
  hasSampleSamplesConnection_SOME: PatientHasSampleSamplesConnectionWhere
  patientAliasesIsAliasConnection: PatientPatientAliasesIsAliasConnectionWhere
    @deprecated(reason: "Use `patientAliasesIsAliasConnection_SOME` instead.")
  patientAliasesIsAliasConnection_NOT: PatientPatientAliasesIsAliasConnectionWhere
    @deprecated(reason: "Use `patientAliasesIsAliasConnection_NONE` instead.")
  patientAliasesIsAliasConnection_ALL: PatientPatientAliasesIsAliasConnectionWhere
  patientAliasesIsAliasConnection_NONE: PatientPatientAliasesIsAliasConnectionWhere
  patientAliasesIsAliasConnection_SINGLE: PatientPatientAliasesIsAliasConnectionWhere
  patientAliasesIsAliasConnection_SOME: PatientPatientAliasesIsAliasConnectionWhere
}

input ProjectHasRequestRequestsAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [ProjectHasRequestRequestsAggregateInput!]
  OR: [ProjectHasRequestRequestsAggregateInput!]
  node: ProjectHasRequestRequestsNodeAggregationWhereInput
}

input ProjectHasRequestRequestsConnectionSort {
  node: RequestSort
}

input ProjectHasRequestRequestsConnectionWhere {
  AND: [ProjectHasRequestRequestsConnectionWhere!]
  OR: [ProjectHasRequestRequestsConnectionWhere!]
  node: RequestWhere
  node_NOT: RequestWhere
}

input ProjectHasRequestRequestsNodeAggregationWhereInput {
  AND: [ProjectHasRequestRequestsNodeAggregationWhereInput!]
  OR: [ProjectHasRequestRequestsNodeAggregationWhereInput!]
  dataAccessEmails_EQUAL: String
  dataAccessEmails_AVERAGE_EQUAL: Float
  dataAccessEmails_LONGEST_EQUAL: Int
  dataAccessEmails_SHORTEST_EQUAL: Int
  dataAccessEmails_GT: Int
  dataAccessEmails_AVERAGE_GT: Float
  dataAccessEmails_LONGEST_GT: Int
  dataAccessEmails_SHORTEST_GT: Int
  dataAccessEmails_GTE: Int
  dataAccessEmails_AVERAGE_GTE: Float
  dataAccessEmails_LONGEST_GTE: Int
  dataAccessEmails_SHORTEST_GTE: Int
  dataAccessEmails_LT: Int
  dataAccessEmails_AVERAGE_LT: Float
  dataAccessEmails_LONGEST_LT: Int
  dataAccessEmails_SHORTEST_LT: Int
  dataAccessEmails_LTE: Int
  dataAccessEmails_AVERAGE_LTE: Float
  dataAccessEmails_LONGEST_LTE: Int
  dataAccessEmails_SHORTEST_LTE: Int
  dataAnalystEmail_EQUAL: String
  dataAnalystEmail_AVERAGE_EQUAL: Float
  dataAnalystEmail_LONGEST_EQUAL: Int
  dataAnalystEmail_SHORTEST_EQUAL: Int
  dataAnalystEmail_GT: Int
  dataAnalystEmail_AVERAGE_GT: Float
  dataAnalystEmail_LONGEST_GT: Int
  dataAnalystEmail_SHORTEST_GT: Int
  dataAnalystEmail_GTE: Int
  dataAnalystEmail_AVERAGE_GTE: Float
  dataAnalystEmail_LONGEST_GTE: Int
  dataAnalystEmail_SHORTEST_GTE: Int
  dataAnalystEmail_LT: Int
  dataAnalystEmail_AVERAGE_LT: Float
  dataAnalystEmail_LONGEST_LT: Int
  dataAnalystEmail_SHORTEST_LT: Int
  dataAnalystEmail_LTE: Int
  dataAnalystEmail_AVERAGE_LTE: Float
  dataAnalystEmail_LONGEST_LTE: Int
  dataAnalystEmail_SHORTEST_LTE: Int
  dataAnalystName_EQUAL: String
  dataAnalystName_AVERAGE_EQUAL: Float
  dataAnalystName_LONGEST_EQUAL: Int
  dataAnalystName_SHORTEST_EQUAL: Int
  dataAnalystName_GT: Int
  dataAnalystName_AVERAGE_GT: Float
  dataAnalystName_LONGEST_GT: Int
  dataAnalystName_SHORTEST_GT: Int
  dataAnalystName_GTE: Int
  dataAnalystName_AVERAGE_GTE: Float
  dataAnalystName_LONGEST_GTE: Int
  dataAnalystName_SHORTEST_GTE: Int
  dataAnalystName_LT: Int
  dataAnalystName_AVERAGE_LT: Float
  dataAnalystName_LONGEST_LT: Int
  dataAnalystName_SHORTEST_LT: Int
  dataAnalystName_LTE: Int
  dataAnalystName_AVERAGE_LTE: Float
  dataAnalystName_LONGEST_LTE: Int
  dataAnalystName_SHORTEST_LTE: Int
  genePanel_EQUAL: String
  genePanel_AVERAGE_EQUAL: Float
  genePanel_LONGEST_EQUAL: Int
  genePanel_SHORTEST_EQUAL: Int
  genePanel_GT: Int
  genePanel_AVERAGE_GT: Float
  genePanel_LONGEST_GT: Int
  genePanel_SHORTEST_GT: Int
  genePanel_GTE: Int
  genePanel_AVERAGE_GTE: Float
  genePanel_LONGEST_GTE: Int
  genePanel_SHORTEST_GTE: Int
  genePanel_LT: Int
  genePanel_AVERAGE_LT: Float
  genePanel_LONGEST_LT: Int
  genePanel_SHORTEST_LT: Int
  genePanel_LTE: Int
  genePanel_AVERAGE_LTE: Float
  genePanel_LONGEST_LTE: Int
  genePanel_SHORTEST_LTE: Int
  igoProjectId_EQUAL: String
  igoProjectId_AVERAGE_EQUAL: Float
  igoProjectId_LONGEST_EQUAL: Int
  igoProjectId_SHORTEST_EQUAL: Int
  igoProjectId_GT: Int
  igoProjectId_AVERAGE_GT: Float
  igoProjectId_LONGEST_GT: Int
  igoProjectId_SHORTEST_GT: Int
  igoProjectId_GTE: Int
  igoProjectId_AVERAGE_GTE: Float
  igoProjectId_LONGEST_GTE: Int
  igoProjectId_SHORTEST_GTE: Int
  igoProjectId_LT: Int
  igoProjectId_AVERAGE_LT: Float
  igoProjectId_LONGEST_LT: Int
  igoProjectId_SHORTEST_LT: Int
  igoProjectId_LTE: Int
  igoProjectId_AVERAGE_LTE: Float
  igoProjectId_LONGEST_LTE: Int
  igoProjectId_SHORTEST_LTE: Int
  igoRequestId_EQUAL: String
  igoRequestId_AVERAGE_EQUAL: Float
  igoRequestId_LONGEST_EQUAL: Int
  igoRequestId_SHORTEST_EQUAL: Int
  igoRequestId_GT: Int
  igoRequestId_AVERAGE_GT: Float
  igoRequestId_LONGEST_GT: Int
  igoRequestId_SHORTEST_GT: Int
  igoRequestId_GTE: Int
  igoRequestId_AVERAGE_GTE: Float
  igoRequestId_LONGEST_GTE: Int
  igoRequestId_SHORTEST_GTE: Int
  igoRequestId_LT: Int
  igoRequestId_AVERAGE_LT: Float
  igoRequestId_LONGEST_LT: Int
  igoRequestId_SHORTEST_LT: Int
  igoRequestId_LTE: Int
  igoRequestId_AVERAGE_LTE: Float
  igoRequestId_LONGEST_LTE: Int
  igoRequestId_SHORTEST_LTE: Int
  investigatorEmail_EQUAL: String
  investigatorEmail_AVERAGE_EQUAL: Float
  investigatorEmail_LONGEST_EQUAL: Int
  investigatorEmail_SHORTEST_EQUAL: Int
  investigatorEmail_GT: Int
  investigatorEmail_AVERAGE_GT: Float
  investigatorEmail_LONGEST_GT: Int
  investigatorEmail_SHORTEST_GT: Int
  investigatorEmail_GTE: Int
  investigatorEmail_AVERAGE_GTE: Float
  investigatorEmail_LONGEST_GTE: Int
  investigatorEmail_SHORTEST_GTE: Int
  investigatorEmail_LT: Int
  investigatorEmail_AVERAGE_LT: Float
  investigatorEmail_LONGEST_LT: Int
  investigatorEmail_SHORTEST_LT: Int
  investigatorEmail_LTE: Int
  investigatorEmail_AVERAGE_LTE: Float
  investigatorEmail_LONGEST_LTE: Int
  investigatorEmail_SHORTEST_LTE: Int
  investigatorName_EQUAL: String
  investigatorName_AVERAGE_EQUAL: Float
  investigatorName_LONGEST_EQUAL: Int
  investigatorName_SHORTEST_EQUAL: Int
  investigatorName_GT: Int
  investigatorName_AVERAGE_GT: Float
  investigatorName_LONGEST_GT: Int
  investigatorName_SHORTEST_GT: Int
  investigatorName_GTE: Int
  investigatorName_AVERAGE_GTE: Float
  investigatorName_LONGEST_GTE: Int
  investigatorName_SHORTEST_GTE: Int
  investigatorName_LT: Int
  investigatorName_AVERAGE_LT: Float
  investigatorName_LONGEST_LT: Int
  investigatorName_SHORTEST_LT: Int
  investigatorName_LTE: Int
  investigatorName_AVERAGE_LTE: Float
  investigatorName_LONGEST_LTE: Int
  investigatorName_SHORTEST_LTE: Int
  labHeadEmail_EQUAL: String
  labHeadEmail_AVERAGE_EQUAL: Float
  labHeadEmail_LONGEST_EQUAL: Int
  labHeadEmail_SHORTEST_EQUAL: Int
  labHeadEmail_GT: Int
  labHeadEmail_AVERAGE_GT: Float
  labHeadEmail_LONGEST_GT: Int
  labHeadEmail_SHORTEST_GT: Int
  labHeadEmail_GTE: Int
  labHeadEmail_AVERAGE_GTE: Float
  labHeadEmail_LONGEST_GTE: Int
  labHeadEmail_SHORTEST_GTE: Int
  labHeadEmail_LT: Int
  labHeadEmail_AVERAGE_LT: Float
  labHeadEmail_LONGEST_LT: Int
  labHeadEmail_SHORTEST_LT: Int
  labHeadEmail_LTE: Int
  labHeadEmail_AVERAGE_LTE: Float
  labHeadEmail_LONGEST_LTE: Int
  labHeadEmail_SHORTEST_LTE: Int
  labHeadName_EQUAL: String
  labHeadName_AVERAGE_EQUAL: Float
  labHeadName_LONGEST_EQUAL: Int
  labHeadName_SHORTEST_EQUAL: Int
  labHeadName_GT: Int
  labHeadName_AVERAGE_GT: Float
  labHeadName_LONGEST_GT: Int
  labHeadName_SHORTEST_GT: Int
  labHeadName_GTE: Int
  labHeadName_AVERAGE_GTE: Float
  labHeadName_LONGEST_GTE: Int
  labHeadName_SHORTEST_GTE: Int
  labHeadName_LT: Int
  labHeadName_AVERAGE_LT: Float
  labHeadName_LONGEST_LT: Int
  labHeadName_SHORTEST_LT: Int
  labHeadName_LTE: Int
  labHeadName_AVERAGE_LTE: Float
  labHeadName_LONGEST_LTE: Int
  labHeadName_SHORTEST_LTE: Int
  namespace_EQUAL: String
  namespace_AVERAGE_EQUAL: Float
  namespace_LONGEST_EQUAL: Int
  namespace_SHORTEST_EQUAL: Int
  namespace_GT: Int
  namespace_AVERAGE_GT: Float
  namespace_LONGEST_GT: Int
  namespace_SHORTEST_GT: Int
  namespace_GTE: Int
  namespace_AVERAGE_GTE: Float
  namespace_LONGEST_GTE: Int
  namespace_SHORTEST_GTE: Int
  namespace_LT: Int
  namespace_AVERAGE_LT: Float
  namespace_LONGEST_LT: Int
  namespace_SHORTEST_LT: Int
  namespace_LTE: Int
  namespace_AVERAGE_LTE: Float
  namespace_LONGEST_LTE: Int
  namespace_SHORTEST_LTE: Int
  otherContactEmails_EQUAL: String
  otherContactEmails_AVERAGE_EQUAL: Float
  otherContactEmails_LONGEST_EQUAL: Int
  otherContactEmails_SHORTEST_EQUAL: Int
  otherContactEmails_GT: Int
  otherContactEmails_AVERAGE_GT: Float
  otherContactEmails_LONGEST_GT: Int
  otherContactEmails_SHORTEST_GT: Int
  otherContactEmails_GTE: Int
  otherContactEmails_AVERAGE_GTE: Float
  otherContactEmails_LONGEST_GTE: Int
  otherContactEmails_SHORTEST_GTE: Int
  otherContactEmails_LT: Int
  otherContactEmails_AVERAGE_LT: Float
  otherContactEmails_LONGEST_LT: Int
  otherContactEmails_SHORTEST_LT: Int
  otherContactEmails_LTE: Int
  otherContactEmails_AVERAGE_LTE: Float
  otherContactEmails_LONGEST_LTE: Int
  otherContactEmails_SHORTEST_LTE: Int
  piEmail_EQUAL: String
  piEmail_AVERAGE_EQUAL: Float
  piEmail_LONGEST_EQUAL: Int
  piEmail_SHORTEST_EQUAL: Int
  piEmail_GT: Int
  piEmail_AVERAGE_GT: Float
  piEmail_LONGEST_GT: Int
  piEmail_SHORTEST_GT: Int
  piEmail_GTE: Int
  piEmail_AVERAGE_GTE: Float
  piEmail_LONGEST_GTE: Int
  piEmail_SHORTEST_GTE: Int
  piEmail_LT: Int
  piEmail_AVERAGE_LT: Float
  piEmail_LONGEST_LT: Int
  piEmail_SHORTEST_LT: Int
  piEmail_LTE: Int
  piEmail_AVERAGE_LTE: Float
  piEmail_LONGEST_LTE: Int
  piEmail_SHORTEST_LTE: Int
  projectManagerName_EQUAL: String
  projectManagerName_AVERAGE_EQUAL: Float
  projectManagerName_LONGEST_EQUAL: Int
  projectManagerName_SHORTEST_EQUAL: Int
  projectManagerName_GT: Int
  projectManagerName_AVERAGE_GT: Float
  projectManagerName_LONGEST_GT: Int
  projectManagerName_SHORTEST_GT: Int
  projectManagerName_GTE: Int
  projectManagerName_AVERAGE_GTE: Float
  projectManagerName_LONGEST_GTE: Int
  projectManagerName_SHORTEST_GTE: Int
  projectManagerName_LT: Int
  projectManagerName_AVERAGE_LT: Float
  projectManagerName_LONGEST_LT: Int
  projectManagerName_SHORTEST_LT: Int
  projectManagerName_LTE: Int
  projectManagerName_AVERAGE_LTE: Float
  projectManagerName_LONGEST_LTE: Int
  projectManagerName_SHORTEST_LTE: Int
  qcAccessEmails_EQUAL: String
  qcAccessEmails_AVERAGE_EQUAL: Float
  qcAccessEmails_LONGEST_EQUAL: Int
  qcAccessEmails_SHORTEST_EQUAL: Int
  qcAccessEmails_GT: Int
  qcAccessEmails_AVERAGE_GT: Float
  qcAccessEmails_LONGEST_GT: Int
  qcAccessEmails_SHORTEST_GT: Int
  qcAccessEmails_GTE: Int
  qcAccessEmails_AVERAGE_GTE: Float
  qcAccessEmails_LONGEST_GTE: Int
  qcAccessEmails_SHORTEST_GTE: Int
  qcAccessEmails_LT: Int
  qcAccessEmails_AVERAGE_LT: Float
  qcAccessEmails_LONGEST_LT: Int
  qcAccessEmails_SHORTEST_LT: Int
  qcAccessEmails_LTE: Int
  qcAccessEmails_AVERAGE_LTE: Float
  qcAccessEmails_LONGEST_LTE: Int
  qcAccessEmails_SHORTEST_LTE: Int
  requestJson_EQUAL: String
  requestJson_AVERAGE_EQUAL: Float
  requestJson_LONGEST_EQUAL: Int
  requestJson_SHORTEST_EQUAL: Int
  requestJson_GT: Int
  requestJson_AVERAGE_GT: Float
  requestJson_LONGEST_GT: Int
  requestJson_SHORTEST_GT: Int
  requestJson_GTE: Int
  requestJson_AVERAGE_GTE: Float
  requestJson_LONGEST_GTE: Int
  requestJson_SHORTEST_GTE: Int
  requestJson_LT: Int
  requestJson_AVERAGE_LT: Float
  requestJson_LONGEST_LT: Int
  requestJson_SHORTEST_LT: Int
  requestJson_LTE: Int
  requestJson_AVERAGE_LTE: Float
  requestJson_LONGEST_LTE: Int
  requestJson_SHORTEST_LTE: Int
  smileRequestId_EQUAL: String
  smileRequestId_AVERAGE_EQUAL: Float
  smileRequestId_LONGEST_EQUAL: Int
  smileRequestId_SHORTEST_EQUAL: Int
  smileRequestId_GT: Int
  smileRequestId_AVERAGE_GT: Float
  smileRequestId_LONGEST_GT: Int
  smileRequestId_SHORTEST_GT: Int
  smileRequestId_GTE: Int
  smileRequestId_AVERAGE_GTE: Float
  smileRequestId_LONGEST_GTE: Int
  smileRequestId_SHORTEST_GTE: Int
  smileRequestId_LT: Int
  smileRequestId_AVERAGE_LT: Float
  smileRequestId_LONGEST_LT: Int
  smileRequestId_SHORTEST_LT: Int
  smileRequestId_LTE: Int
  smileRequestId_AVERAGE_LTE: Float
  smileRequestId_LONGEST_LTE: Int
  smileRequestId_SHORTEST_LTE: Int
}

input ProjectOptions {
  """
  Specify one or more ProjectSort objects to sort Projects by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [ProjectSort!]
  limit: Int
  offset: Int
}

"""
Fields to sort Projects by. The order in which sorts are applied is not guaranteed when specifying many fields in one ProjectSort object.
"""
input ProjectSort {
  igoProjectId: SortDirection
  namespace: SortDirection
}

input ProjectWhere {
  OR: [ProjectWhere!]
  AND: [ProjectWhere!]
  igoProjectId: String
  igoProjectId_NOT: String
  igoProjectId_IN: [String!]
  igoProjectId_NOT_IN: [String!]
  igoProjectId_CONTAINS: String
  igoProjectId_NOT_CONTAINS: String
  igoProjectId_STARTS_WITH: String
  igoProjectId_NOT_STARTS_WITH: String
  igoProjectId_ENDS_WITH: String
  igoProjectId_NOT_ENDS_WITH: String
  namespace: String
  namespace_NOT: String
  namespace_IN: [String!]
  namespace_NOT_IN: [String!]
  namespace_CONTAINS: String
  namespace_NOT_CONTAINS: String
  namespace_STARTS_WITH: String
  namespace_NOT_STARTS_WITH: String
  namespace_ENDS_WITH: String
  namespace_NOT_ENDS_WITH: String
  hasRequestRequests: RequestWhere
    @deprecated(reason: "Use `hasRequestRequests_SOME` instead.")
  hasRequestRequests_NOT: RequestWhere
    @deprecated(reason: "Use `hasRequestRequests_NONE` instead.")
  hasRequestRequestsAggregate: ProjectHasRequestRequestsAggregateInput

  """
  Return Projects where all of the related Requests match this filter
  """
  hasRequestRequests_ALL: RequestWhere

  """
  Return Projects where none of the related Requests match this filter
  """
  hasRequestRequests_NONE: RequestWhere

  """
  Return Projects where one of the related Requests match this filter
  """
  hasRequestRequests_SINGLE: RequestWhere

  """
  Return Projects where some of the related Requests match this filter
  """
  hasRequestRequests_SOME: RequestWhere
  hasRequestRequestsConnection: ProjectHasRequestRequestsConnectionWhere
    @deprecated(reason: "Use `hasRequestRequestsConnection_SOME` instead.")
  hasRequestRequestsConnection_NOT: ProjectHasRequestRequestsConnectionWhere
    @deprecated(reason: "Use `hasRequestRequestsConnection_NONE` instead.")
  hasRequestRequestsConnection_ALL: ProjectHasRequestRequestsConnectionWhere
  hasRequestRequestsConnection_NONE: ProjectHasRequestRequestsConnectionWhere
  hasRequestRequestsConnection_SINGLE: ProjectHasRequestRequestsConnectionWhere
  hasRequestRequestsConnection_SOME: ProjectHasRequestRequestsConnectionWhere
}

input RequestHasMetadataRequestMetadataAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [RequestHasMetadataRequestMetadataAggregateInput!]
  OR: [RequestHasMetadataRequestMetadataAggregateInput!]
  node: RequestHasMetadataRequestMetadataNodeAggregationWhereInput
}

input RequestHasMetadataRequestMetadataConnectionSort {
  node: RequestMetadataSort
}

input RequestHasMetadataRequestMetadataConnectionWhere {
  AND: [RequestHasMetadataRequestMetadataConnectionWhere!]
  OR: [RequestHasMetadataRequestMetadataConnectionWhere!]
  node: RequestMetadataWhere
  node_NOT: RequestMetadataWhere
}

input RequestHasMetadataRequestMetadataNodeAggregationWhereInput {
  AND: [RequestHasMetadataRequestMetadataNodeAggregationWhereInput!]
  OR: [RequestHasMetadataRequestMetadataNodeAggregationWhereInput!]
  igoRequestId_EQUAL: String
  igoRequestId_AVERAGE_EQUAL: Float
  igoRequestId_LONGEST_EQUAL: Int
  igoRequestId_SHORTEST_EQUAL: Int
  igoRequestId_GT: Int
  igoRequestId_AVERAGE_GT: Float
  igoRequestId_LONGEST_GT: Int
  igoRequestId_SHORTEST_GT: Int
  igoRequestId_GTE: Int
  igoRequestId_AVERAGE_GTE: Float
  igoRequestId_LONGEST_GTE: Int
  igoRequestId_SHORTEST_GTE: Int
  igoRequestId_LT: Int
  igoRequestId_AVERAGE_LT: Float
  igoRequestId_LONGEST_LT: Int
  igoRequestId_SHORTEST_LT: Int
  igoRequestId_LTE: Int
  igoRequestId_AVERAGE_LTE: Float
  igoRequestId_LONGEST_LTE: Int
  igoRequestId_SHORTEST_LTE: Int
  importDate_EQUAL: String
  importDate_AVERAGE_EQUAL: Float
  importDate_LONGEST_EQUAL: Int
  importDate_SHORTEST_EQUAL: Int
  importDate_GT: Int
  importDate_AVERAGE_GT: Float
  importDate_LONGEST_GT: Int
  importDate_SHORTEST_GT: Int
  importDate_GTE: Int
  importDate_AVERAGE_GTE: Float
  importDate_LONGEST_GTE: Int
  importDate_SHORTEST_GTE: Int
  importDate_LT: Int
  importDate_AVERAGE_LT: Float
  importDate_LONGEST_LT: Int
  importDate_SHORTEST_LT: Int
  importDate_LTE: Int
  importDate_AVERAGE_LTE: Float
  importDate_LONGEST_LTE: Int
  importDate_SHORTEST_LTE: Int
  requestMetadataJson_EQUAL: String
  requestMetadataJson_AVERAGE_EQUAL: Float
  requestMetadataJson_LONGEST_EQUAL: Int
  requestMetadataJson_SHORTEST_EQUAL: Int
  requestMetadataJson_GT: Int
  requestMetadataJson_AVERAGE_GT: Float
  requestMetadataJson_LONGEST_GT: Int
  requestMetadataJson_SHORTEST_GT: Int
  requestMetadataJson_GTE: Int
  requestMetadataJson_AVERAGE_GTE: Float
  requestMetadataJson_LONGEST_GTE: Int
  requestMetadataJson_SHORTEST_GTE: Int
  requestMetadataJson_LT: Int
  requestMetadataJson_AVERAGE_LT: Float
  requestMetadataJson_LONGEST_LT: Int
  requestMetadataJson_SHORTEST_LT: Int
  requestMetadataJson_LTE: Int
  requestMetadataJson_AVERAGE_LTE: Float
  requestMetadataJson_LONGEST_LTE: Int
  requestMetadataJson_SHORTEST_LTE: Int
}

input RequestHasSampleSamplesAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [RequestHasSampleSamplesAggregateInput!]
  OR: [RequestHasSampleSamplesAggregateInput!]
  node: RequestHasSampleSamplesNodeAggregationWhereInput
}

input RequestHasSampleSamplesConnectionSort {
  node: SampleSort
}

input RequestHasSampleSamplesConnectionWhere {
  AND: [RequestHasSampleSamplesConnectionWhere!]
  OR: [RequestHasSampleSamplesConnectionWhere!]
  node: SampleWhere
  node_NOT: SampleWhere
}

input RequestHasSampleSamplesNodeAggregationWhereInput {
  AND: [RequestHasSampleSamplesNodeAggregationWhereInput!]
  OR: [RequestHasSampleSamplesNodeAggregationWhereInput!]
  datasource_EQUAL: String
  datasource_AVERAGE_EQUAL: Float
  datasource_LONGEST_EQUAL: Int
  datasource_SHORTEST_EQUAL: Int
  datasource_GT: Int
  datasource_AVERAGE_GT: Float
  datasource_LONGEST_GT: Int
  datasource_SHORTEST_GT: Int
  datasource_GTE: Int
  datasource_AVERAGE_GTE: Float
  datasource_LONGEST_GTE: Int
  datasource_SHORTEST_GTE: Int
  datasource_LT: Int
  datasource_AVERAGE_LT: Float
  datasource_LONGEST_LT: Int
  datasource_SHORTEST_LT: Int
  datasource_LTE: Int
  datasource_AVERAGE_LTE: Float
  datasource_LONGEST_LTE: Int
  datasource_SHORTEST_LTE: Int
  sampleCategory_EQUAL: String
  sampleCategory_AVERAGE_EQUAL: Float
  sampleCategory_LONGEST_EQUAL: Int
  sampleCategory_SHORTEST_EQUAL: Int
  sampleCategory_GT: Int
  sampleCategory_AVERAGE_GT: Float
  sampleCategory_LONGEST_GT: Int
  sampleCategory_SHORTEST_GT: Int
  sampleCategory_GTE: Int
  sampleCategory_AVERAGE_GTE: Float
  sampleCategory_LONGEST_GTE: Int
  sampleCategory_SHORTEST_GTE: Int
  sampleCategory_LT: Int
  sampleCategory_AVERAGE_LT: Float
  sampleCategory_LONGEST_LT: Int
  sampleCategory_SHORTEST_LT: Int
  sampleCategory_LTE: Int
  sampleCategory_AVERAGE_LTE: Float
  sampleCategory_LONGEST_LTE: Int
  sampleCategory_SHORTEST_LTE: Int
  sampleClass_EQUAL: String
  sampleClass_AVERAGE_EQUAL: Float
  sampleClass_LONGEST_EQUAL: Int
  sampleClass_SHORTEST_EQUAL: Int
  sampleClass_GT: Int
  sampleClass_AVERAGE_GT: Float
  sampleClass_LONGEST_GT: Int
  sampleClass_SHORTEST_GT: Int
  sampleClass_GTE: Int
  sampleClass_AVERAGE_GTE: Float
  sampleClass_LONGEST_GTE: Int
  sampleClass_SHORTEST_GTE: Int
  sampleClass_LT: Int
  sampleClass_AVERAGE_LT: Float
  sampleClass_LONGEST_LT: Int
  sampleClass_SHORTEST_LT: Int
  sampleClass_LTE: Int
  sampleClass_AVERAGE_LTE: Float
  sampleClass_LONGEST_LTE: Int
  sampleClass_SHORTEST_LTE: Int
  smileSampleId_EQUAL: String
  smileSampleId_AVERAGE_EQUAL: Float
  smileSampleId_LONGEST_EQUAL: Int
  smileSampleId_SHORTEST_EQUAL: Int
  smileSampleId_GT: Int
  smileSampleId_AVERAGE_GT: Float
  smileSampleId_LONGEST_GT: Int
  smileSampleId_SHORTEST_GT: Int
  smileSampleId_GTE: Int
  smileSampleId_AVERAGE_GTE: Float
  smileSampleId_LONGEST_GTE: Int
  smileSampleId_SHORTEST_GTE: Int
  smileSampleId_LT: Int
  smileSampleId_AVERAGE_LT: Float
  smileSampleId_LONGEST_LT: Int
  smileSampleId_SHORTEST_LT: Int
  smileSampleId_LTE: Int
  smileSampleId_AVERAGE_LTE: Float
  smileSampleId_LONGEST_LTE: Int
  smileSampleId_SHORTEST_LTE: Int
}

input RequestMetadataOptions {
  """
  Specify one or more RequestMetadataSort objects to sort RequestMetadata by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [RequestMetadataSort!]
  limit: Int
  offset: Int
}

input RequestMetadataRequestsHasMetadataAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [RequestMetadataRequestsHasMetadataAggregateInput!]
  OR: [RequestMetadataRequestsHasMetadataAggregateInput!]
  node: RequestMetadataRequestsHasMetadataNodeAggregationWhereInput
}

input RequestMetadataRequestsHasMetadataConnectionSort {
  node: RequestSort
}

input RequestMetadataRequestsHasMetadataConnectionWhere {
  AND: [RequestMetadataRequestsHasMetadataConnectionWhere!]
  OR: [RequestMetadataRequestsHasMetadataConnectionWhere!]
  node: RequestWhere
  node_NOT: RequestWhere
}

input RequestMetadataRequestsHasMetadataNodeAggregationWhereInput {
  AND: [RequestMetadataRequestsHasMetadataNodeAggregationWhereInput!]
  OR: [RequestMetadataRequestsHasMetadataNodeAggregationWhereInput!]
  dataAccessEmails_EQUAL: String
  dataAccessEmails_AVERAGE_EQUAL: Float
  dataAccessEmails_LONGEST_EQUAL: Int
  dataAccessEmails_SHORTEST_EQUAL: Int
  dataAccessEmails_GT: Int
  dataAccessEmails_AVERAGE_GT: Float
  dataAccessEmails_LONGEST_GT: Int
  dataAccessEmails_SHORTEST_GT: Int
  dataAccessEmails_GTE: Int
  dataAccessEmails_AVERAGE_GTE: Float
  dataAccessEmails_LONGEST_GTE: Int
  dataAccessEmails_SHORTEST_GTE: Int
  dataAccessEmails_LT: Int
  dataAccessEmails_AVERAGE_LT: Float
  dataAccessEmails_LONGEST_LT: Int
  dataAccessEmails_SHORTEST_LT: Int
  dataAccessEmails_LTE: Int
  dataAccessEmails_AVERAGE_LTE: Float
  dataAccessEmails_LONGEST_LTE: Int
  dataAccessEmails_SHORTEST_LTE: Int
  dataAnalystEmail_EQUAL: String
  dataAnalystEmail_AVERAGE_EQUAL: Float
  dataAnalystEmail_LONGEST_EQUAL: Int
  dataAnalystEmail_SHORTEST_EQUAL: Int
  dataAnalystEmail_GT: Int
  dataAnalystEmail_AVERAGE_GT: Float
  dataAnalystEmail_LONGEST_GT: Int
  dataAnalystEmail_SHORTEST_GT: Int
  dataAnalystEmail_GTE: Int
  dataAnalystEmail_AVERAGE_GTE: Float
  dataAnalystEmail_LONGEST_GTE: Int
  dataAnalystEmail_SHORTEST_GTE: Int
  dataAnalystEmail_LT: Int
  dataAnalystEmail_AVERAGE_LT: Float
  dataAnalystEmail_LONGEST_LT: Int
  dataAnalystEmail_SHORTEST_LT: Int
  dataAnalystEmail_LTE: Int
  dataAnalystEmail_AVERAGE_LTE: Float
  dataAnalystEmail_LONGEST_LTE: Int
  dataAnalystEmail_SHORTEST_LTE: Int
  dataAnalystName_EQUAL: String
  dataAnalystName_AVERAGE_EQUAL: Float
  dataAnalystName_LONGEST_EQUAL: Int
  dataAnalystName_SHORTEST_EQUAL: Int
  dataAnalystName_GT: Int
  dataAnalystName_AVERAGE_GT: Float
  dataAnalystName_LONGEST_GT: Int
  dataAnalystName_SHORTEST_GT: Int
  dataAnalystName_GTE: Int
  dataAnalystName_AVERAGE_GTE: Float
  dataAnalystName_LONGEST_GTE: Int
  dataAnalystName_SHORTEST_GTE: Int
  dataAnalystName_LT: Int
  dataAnalystName_AVERAGE_LT: Float
  dataAnalystName_LONGEST_LT: Int
  dataAnalystName_SHORTEST_LT: Int
  dataAnalystName_LTE: Int
  dataAnalystName_AVERAGE_LTE: Float
  dataAnalystName_LONGEST_LTE: Int
  dataAnalystName_SHORTEST_LTE: Int
  genePanel_EQUAL: String
  genePanel_AVERAGE_EQUAL: Float
  genePanel_LONGEST_EQUAL: Int
  genePanel_SHORTEST_EQUAL: Int
  genePanel_GT: Int
  genePanel_AVERAGE_GT: Float
  genePanel_LONGEST_GT: Int
  genePanel_SHORTEST_GT: Int
  genePanel_GTE: Int
  genePanel_AVERAGE_GTE: Float
  genePanel_LONGEST_GTE: Int
  genePanel_SHORTEST_GTE: Int
  genePanel_LT: Int
  genePanel_AVERAGE_LT: Float
  genePanel_LONGEST_LT: Int
  genePanel_SHORTEST_LT: Int
  genePanel_LTE: Int
  genePanel_AVERAGE_LTE: Float
  genePanel_LONGEST_LTE: Int
  genePanel_SHORTEST_LTE: Int
  igoProjectId_EQUAL: String
  igoProjectId_AVERAGE_EQUAL: Float
  igoProjectId_LONGEST_EQUAL: Int
  igoProjectId_SHORTEST_EQUAL: Int
  igoProjectId_GT: Int
  igoProjectId_AVERAGE_GT: Float
  igoProjectId_LONGEST_GT: Int
  igoProjectId_SHORTEST_GT: Int
  igoProjectId_GTE: Int
  igoProjectId_AVERAGE_GTE: Float
  igoProjectId_LONGEST_GTE: Int
  igoProjectId_SHORTEST_GTE: Int
  igoProjectId_LT: Int
  igoProjectId_AVERAGE_LT: Float
  igoProjectId_LONGEST_LT: Int
  igoProjectId_SHORTEST_LT: Int
  igoProjectId_LTE: Int
  igoProjectId_AVERAGE_LTE: Float
  igoProjectId_LONGEST_LTE: Int
  igoProjectId_SHORTEST_LTE: Int
  igoRequestId_EQUAL: String
  igoRequestId_AVERAGE_EQUAL: Float
  igoRequestId_LONGEST_EQUAL: Int
  igoRequestId_SHORTEST_EQUAL: Int
  igoRequestId_GT: Int
  igoRequestId_AVERAGE_GT: Float
  igoRequestId_LONGEST_GT: Int
  igoRequestId_SHORTEST_GT: Int
  igoRequestId_GTE: Int
  igoRequestId_AVERAGE_GTE: Float
  igoRequestId_LONGEST_GTE: Int
  igoRequestId_SHORTEST_GTE: Int
  igoRequestId_LT: Int
  igoRequestId_AVERAGE_LT: Float
  igoRequestId_LONGEST_LT: Int
  igoRequestId_SHORTEST_LT: Int
  igoRequestId_LTE: Int
  igoRequestId_AVERAGE_LTE: Float
  igoRequestId_LONGEST_LTE: Int
  igoRequestId_SHORTEST_LTE: Int
  investigatorEmail_EQUAL: String
  investigatorEmail_AVERAGE_EQUAL: Float
  investigatorEmail_LONGEST_EQUAL: Int
  investigatorEmail_SHORTEST_EQUAL: Int
  investigatorEmail_GT: Int
  investigatorEmail_AVERAGE_GT: Float
  investigatorEmail_LONGEST_GT: Int
  investigatorEmail_SHORTEST_GT: Int
  investigatorEmail_GTE: Int
  investigatorEmail_AVERAGE_GTE: Float
  investigatorEmail_LONGEST_GTE: Int
  investigatorEmail_SHORTEST_GTE: Int
  investigatorEmail_LT: Int
  investigatorEmail_AVERAGE_LT: Float
  investigatorEmail_LONGEST_LT: Int
  investigatorEmail_SHORTEST_LT: Int
  investigatorEmail_LTE: Int
  investigatorEmail_AVERAGE_LTE: Float
  investigatorEmail_LONGEST_LTE: Int
  investigatorEmail_SHORTEST_LTE: Int
  investigatorName_EQUAL: String
  investigatorName_AVERAGE_EQUAL: Float
  investigatorName_LONGEST_EQUAL: Int
  investigatorName_SHORTEST_EQUAL: Int
  investigatorName_GT: Int
  investigatorName_AVERAGE_GT: Float
  investigatorName_LONGEST_GT: Int
  investigatorName_SHORTEST_GT: Int
  investigatorName_GTE: Int
  investigatorName_AVERAGE_GTE: Float
  investigatorName_LONGEST_GTE: Int
  investigatorName_SHORTEST_GTE: Int
  investigatorName_LT: Int
  investigatorName_AVERAGE_LT: Float
  investigatorName_LONGEST_LT: Int
  investigatorName_SHORTEST_LT: Int
  investigatorName_LTE: Int
  investigatorName_AVERAGE_LTE: Float
  investigatorName_LONGEST_LTE: Int
  investigatorName_SHORTEST_LTE: Int
  labHeadEmail_EQUAL: String
  labHeadEmail_AVERAGE_EQUAL: Float
  labHeadEmail_LONGEST_EQUAL: Int
  labHeadEmail_SHORTEST_EQUAL: Int
  labHeadEmail_GT: Int
  labHeadEmail_AVERAGE_GT: Float
  labHeadEmail_LONGEST_GT: Int
  labHeadEmail_SHORTEST_GT: Int
  labHeadEmail_GTE: Int
  labHeadEmail_AVERAGE_GTE: Float
  labHeadEmail_LONGEST_GTE: Int
  labHeadEmail_SHORTEST_GTE: Int
  labHeadEmail_LT: Int
  labHeadEmail_AVERAGE_LT: Float
  labHeadEmail_LONGEST_LT: Int
  labHeadEmail_SHORTEST_LT: Int
  labHeadEmail_LTE: Int
  labHeadEmail_AVERAGE_LTE: Float
  labHeadEmail_LONGEST_LTE: Int
  labHeadEmail_SHORTEST_LTE: Int
  labHeadName_EQUAL: String
  labHeadName_AVERAGE_EQUAL: Float
  labHeadName_LONGEST_EQUAL: Int
  labHeadName_SHORTEST_EQUAL: Int
  labHeadName_GT: Int
  labHeadName_AVERAGE_GT: Float
  labHeadName_LONGEST_GT: Int
  labHeadName_SHORTEST_GT: Int
  labHeadName_GTE: Int
  labHeadName_AVERAGE_GTE: Float
  labHeadName_LONGEST_GTE: Int
  labHeadName_SHORTEST_GTE: Int
  labHeadName_LT: Int
  labHeadName_AVERAGE_LT: Float
  labHeadName_LONGEST_LT: Int
  labHeadName_SHORTEST_LT: Int
  labHeadName_LTE: Int
  labHeadName_AVERAGE_LTE: Float
  labHeadName_LONGEST_LTE: Int
  labHeadName_SHORTEST_LTE: Int
  namespace_EQUAL: String
  namespace_AVERAGE_EQUAL: Float
  namespace_LONGEST_EQUAL: Int
  namespace_SHORTEST_EQUAL: Int
  namespace_GT: Int
  namespace_AVERAGE_GT: Float
  namespace_LONGEST_GT: Int
  namespace_SHORTEST_GT: Int
  namespace_GTE: Int
  namespace_AVERAGE_GTE: Float
  namespace_LONGEST_GTE: Int
  namespace_SHORTEST_GTE: Int
  namespace_LT: Int
  namespace_AVERAGE_LT: Float
  namespace_LONGEST_LT: Int
  namespace_SHORTEST_LT: Int
  namespace_LTE: Int
  namespace_AVERAGE_LTE: Float
  namespace_LONGEST_LTE: Int
  namespace_SHORTEST_LTE: Int
  otherContactEmails_EQUAL: String
  otherContactEmails_AVERAGE_EQUAL: Float
  otherContactEmails_LONGEST_EQUAL: Int
  otherContactEmails_SHORTEST_EQUAL: Int
  otherContactEmails_GT: Int
  otherContactEmails_AVERAGE_GT: Float
  otherContactEmails_LONGEST_GT: Int
  otherContactEmails_SHORTEST_GT: Int
  otherContactEmails_GTE: Int
  otherContactEmails_AVERAGE_GTE: Float
  otherContactEmails_LONGEST_GTE: Int
  otherContactEmails_SHORTEST_GTE: Int
  otherContactEmails_LT: Int
  otherContactEmails_AVERAGE_LT: Float
  otherContactEmails_LONGEST_LT: Int
  otherContactEmails_SHORTEST_LT: Int
  otherContactEmails_LTE: Int
  otherContactEmails_AVERAGE_LTE: Float
  otherContactEmails_LONGEST_LTE: Int
  otherContactEmails_SHORTEST_LTE: Int
  piEmail_EQUAL: String
  piEmail_AVERAGE_EQUAL: Float
  piEmail_LONGEST_EQUAL: Int
  piEmail_SHORTEST_EQUAL: Int
  piEmail_GT: Int
  piEmail_AVERAGE_GT: Float
  piEmail_LONGEST_GT: Int
  piEmail_SHORTEST_GT: Int
  piEmail_GTE: Int
  piEmail_AVERAGE_GTE: Float
  piEmail_LONGEST_GTE: Int
  piEmail_SHORTEST_GTE: Int
  piEmail_LT: Int
  piEmail_AVERAGE_LT: Float
  piEmail_LONGEST_LT: Int
  piEmail_SHORTEST_LT: Int
  piEmail_LTE: Int
  piEmail_AVERAGE_LTE: Float
  piEmail_LONGEST_LTE: Int
  piEmail_SHORTEST_LTE: Int
  projectManagerName_EQUAL: String
  projectManagerName_AVERAGE_EQUAL: Float
  projectManagerName_LONGEST_EQUAL: Int
  projectManagerName_SHORTEST_EQUAL: Int
  projectManagerName_GT: Int
  projectManagerName_AVERAGE_GT: Float
  projectManagerName_LONGEST_GT: Int
  projectManagerName_SHORTEST_GT: Int
  projectManagerName_GTE: Int
  projectManagerName_AVERAGE_GTE: Float
  projectManagerName_LONGEST_GTE: Int
  projectManagerName_SHORTEST_GTE: Int
  projectManagerName_LT: Int
  projectManagerName_AVERAGE_LT: Float
  projectManagerName_LONGEST_LT: Int
  projectManagerName_SHORTEST_LT: Int
  projectManagerName_LTE: Int
  projectManagerName_AVERAGE_LTE: Float
  projectManagerName_LONGEST_LTE: Int
  projectManagerName_SHORTEST_LTE: Int
  qcAccessEmails_EQUAL: String
  qcAccessEmails_AVERAGE_EQUAL: Float
  qcAccessEmails_LONGEST_EQUAL: Int
  qcAccessEmails_SHORTEST_EQUAL: Int
  qcAccessEmails_GT: Int
  qcAccessEmails_AVERAGE_GT: Float
  qcAccessEmails_LONGEST_GT: Int
  qcAccessEmails_SHORTEST_GT: Int
  qcAccessEmails_GTE: Int
  qcAccessEmails_AVERAGE_GTE: Float
  qcAccessEmails_LONGEST_GTE: Int
  qcAccessEmails_SHORTEST_GTE: Int
  qcAccessEmails_LT: Int
  qcAccessEmails_AVERAGE_LT: Float
  qcAccessEmails_LONGEST_LT: Int
  qcAccessEmails_SHORTEST_LT: Int
  qcAccessEmails_LTE: Int
  qcAccessEmails_AVERAGE_LTE: Float
  qcAccessEmails_LONGEST_LTE: Int
  qcAccessEmails_SHORTEST_LTE: Int
  requestJson_EQUAL: String
  requestJson_AVERAGE_EQUAL: Float
  requestJson_LONGEST_EQUAL: Int
  requestJson_SHORTEST_EQUAL: Int
  requestJson_GT: Int
  requestJson_AVERAGE_GT: Float
  requestJson_LONGEST_GT: Int
  requestJson_SHORTEST_GT: Int
  requestJson_GTE: Int
  requestJson_AVERAGE_GTE: Float
  requestJson_LONGEST_GTE: Int
  requestJson_SHORTEST_GTE: Int
  requestJson_LT: Int
  requestJson_AVERAGE_LT: Float
  requestJson_LONGEST_LT: Int
  requestJson_SHORTEST_LT: Int
  requestJson_LTE: Int
  requestJson_AVERAGE_LTE: Float
  requestJson_LONGEST_LTE: Int
  requestJson_SHORTEST_LTE: Int
  smileRequestId_EQUAL: String
  smileRequestId_AVERAGE_EQUAL: Float
  smileRequestId_LONGEST_EQUAL: Int
  smileRequestId_SHORTEST_EQUAL: Int
  smileRequestId_GT: Int
  smileRequestId_AVERAGE_GT: Float
  smileRequestId_LONGEST_GT: Int
  smileRequestId_SHORTEST_GT: Int
  smileRequestId_GTE: Int
  smileRequestId_AVERAGE_GTE: Float
  smileRequestId_LONGEST_GTE: Int
  smileRequestId_SHORTEST_GTE: Int
  smileRequestId_LT: Int
  smileRequestId_AVERAGE_LT: Float
  smileRequestId_LONGEST_LT: Int
  smileRequestId_SHORTEST_LT: Int
  smileRequestId_LTE: Int
  smileRequestId_AVERAGE_LTE: Float
  smileRequestId_LONGEST_LTE: Int
  smileRequestId_SHORTEST_LTE: Int
}

"""
Fields to sort RequestMetadata by. The order in which sorts are applied is not guaranteed when specifying many fields in one RequestMetadataSort object.
"""
input RequestMetadataSort {
  igoRequestId: SortDirection
  importDate: SortDirection
  requestMetadataJson: SortDirection
}

input RequestMetadataWhere {
  OR: [RequestMetadataWhere!]
  AND: [RequestMetadataWhere!]
  igoRequestId: String
  igoRequestId_NOT: String
  igoRequestId_IN: [String!]
  igoRequestId_NOT_IN: [String!]
  igoRequestId_CONTAINS: String
  igoRequestId_NOT_CONTAINS: String
  igoRequestId_STARTS_WITH: String
  igoRequestId_NOT_STARTS_WITH: String
  igoRequestId_ENDS_WITH: String
  igoRequestId_NOT_ENDS_WITH: String
  importDate: String
  importDate_NOT: String
  importDate_IN: [String!]
  importDate_NOT_IN: [String!]
  importDate_CONTAINS: String
  importDate_NOT_CONTAINS: String
  importDate_STARTS_WITH: String
  importDate_NOT_STARTS_WITH: String
  importDate_ENDS_WITH: String
  importDate_NOT_ENDS_WITH: String
  requestMetadataJson: String
  requestMetadataJson_NOT: String
  requestMetadataJson_IN: [String!]
  requestMetadataJson_NOT_IN: [String!]
  requestMetadataJson_CONTAINS: String
  requestMetadataJson_NOT_CONTAINS: String
  requestMetadataJson_STARTS_WITH: String
  requestMetadataJson_NOT_STARTS_WITH: String
  requestMetadataJson_ENDS_WITH: String
  requestMetadataJson_NOT_ENDS_WITH: String
  requestsHasMetadata: RequestWhere
    @deprecated(reason: "Use `requestsHasMetadata_SOME` instead.")
  requestsHasMetadata_NOT: RequestWhere
    @deprecated(reason: "Use `requestsHasMetadata_NONE` instead.")
  requestsHasMetadataAggregate: RequestMetadataRequestsHasMetadataAggregateInput

  """
  Return RequestMetadata where all of the related Requests match this filter
  """
  requestsHasMetadata_ALL: RequestWhere

  """
  Return RequestMetadata where none of the related Requests match this filter
  """
  requestsHasMetadata_NONE: RequestWhere

  """
  Return RequestMetadata where one of the related Requests match this filter
  """
  requestsHasMetadata_SINGLE: RequestWhere

  """
  Return RequestMetadata where some of the related Requests match this filter
  """
  requestsHasMetadata_SOME: RequestWhere
  requestsHasMetadataConnection: RequestMetadataRequestsHasMetadataConnectionWhere
    @deprecated(reason: "Use `requestsHasMetadataConnection_SOME` instead.")
  requestsHasMetadataConnection_NOT: RequestMetadataRequestsHasMetadataConnectionWhere
    @deprecated(reason: "Use `requestsHasMetadataConnection_NONE` instead.")
  requestsHasMetadataConnection_ALL: RequestMetadataRequestsHasMetadataConnectionWhere
  requestsHasMetadataConnection_NONE: RequestMetadataRequestsHasMetadataConnectionWhere
  requestsHasMetadataConnection_SINGLE: RequestMetadataRequestsHasMetadataConnectionWhere
  requestsHasMetadataConnection_SOME: RequestMetadataRequestsHasMetadataConnectionWhere
}

input RequestOptions {
  """
  Specify one or more RequestSort objects to sort Requests by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [RequestSort!]
  limit: Int
  offset: Int
}

input RequestProjectsHasRequestAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [RequestProjectsHasRequestAggregateInput!]
  OR: [RequestProjectsHasRequestAggregateInput!]
  node: RequestProjectsHasRequestNodeAggregationWhereInput
}

input RequestProjectsHasRequestConnectionSort {
  node: ProjectSort
}

input RequestProjectsHasRequestConnectionWhere {
  AND: [RequestProjectsHasRequestConnectionWhere!]
  OR: [RequestProjectsHasRequestConnectionWhere!]
  node: ProjectWhere
  node_NOT: ProjectWhere
}

input RequestProjectsHasRequestNodeAggregationWhereInput {
  AND: [RequestProjectsHasRequestNodeAggregationWhereInput!]
  OR: [RequestProjectsHasRequestNodeAggregationWhereInput!]
  igoProjectId_EQUAL: String
  igoProjectId_AVERAGE_EQUAL: Float
  igoProjectId_LONGEST_EQUAL: Int
  igoProjectId_SHORTEST_EQUAL: Int
  igoProjectId_GT: Int
  igoProjectId_AVERAGE_GT: Float
  igoProjectId_LONGEST_GT: Int
  igoProjectId_SHORTEST_GT: Int
  igoProjectId_GTE: Int
  igoProjectId_AVERAGE_GTE: Float
  igoProjectId_LONGEST_GTE: Int
  igoProjectId_SHORTEST_GTE: Int
  igoProjectId_LT: Int
  igoProjectId_AVERAGE_LT: Float
  igoProjectId_LONGEST_LT: Int
  igoProjectId_SHORTEST_LT: Int
  igoProjectId_LTE: Int
  igoProjectId_AVERAGE_LTE: Float
  igoProjectId_LONGEST_LTE: Int
  igoProjectId_SHORTEST_LTE: Int
  namespace_EQUAL: String
  namespace_AVERAGE_EQUAL: Float
  namespace_LONGEST_EQUAL: Int
  namespace_SHORTEST_EQUAL: Int
  namespace_GT: Int
  namespace_AVERAGE_GT: Float
  namespace_LONGEST_GT: Int
  namespace_SHORTEST_GT: Int
  namespace_GTE: Int
  namespace_AVERAGE_GTE: Float
  namespace_LONGEST_GTE: Int
  namespace_SHORTEST_GTE: Int
  namespace_LT: Int
  namespace_AVERAGE_LT: Float
  namespace_LONGEST_LT: Int
  namespace_SHORTEST_LT: Int
  namespace_LTE: Int
  namespace_AVERAGE_LTE: Float
  namespace_LONGEST_LTE: Int
  namespace_SHORTEST_LTE: Int
}

"""
Fields to sort Requests by. The order in which sorts are applied is not guaranteed when specifying many fields in one RequestSort object.
"""
input RequestSort {
  bicAnalysis: SortDirection
  dataAccessEmails: SortDirection
  dataAnalystEmail: SortDirection
  dataAnalystName: SortDirection
  genePanel: SortDirection
  igoProjectId: SortDirection
  igoRequestId: SortDirection
  investigatorEmail: SortDirection
  investigatorName: SortDirection
  isCmoRequest: SortDirection
  labHeadEmail: SortDirection
  labHeadName: SortDirection
  namespace: SortDirection
  otherContactEmails: SortDirection
  piEmail: SortDirection
  projectManagerName: SortDirection
  qcAccessEmails: SortDirection
  requestJson: SortDirection
  smileRequestId: SortDirection
}

input RequestWhere {
  OR: [RequestWhere!]
  AND: [RequestWhere!]
  bicAnalysis: Boolean
  bicAnalysis_NOT: Boolean
  dataAccessEmails: String
  dataAccessEmails_NOT: String
  dataAccessEmails_IN: [String!]
  dataAccessEmails_NOT_IN: [String!]
  dataAccessEmails_CONTAINS: String
  dataAccessEmails_NOT_CONTAINS: String
  dataAccessEmails_STARTS_WITH: String
  dataAccessEmails_NOT_STARTS_WITH: String
  dataAccessEmails_ENDS_WITH: String
  dataAccessEmails_NOT_ENDS_WITH: String
  dataAnalystEmail: String
  dataAnalystEmail_NOT: String
  dataAnalystEmail_IN: [String!]
  dataAnalystEmail_NOT_IN: [String!]
  dataAnalystEmail_CONTAINS: String
  dataAnalystEmail_NOT_CONTAINS: String
  dataAnalystEmail_STARTS_WITH: String
  dataAnalystEmail_NOT_STARTS_WITH: String
  dataAnalystEmail_ENDS_WITH: String
  dataAnalystEmail_NOT_ENDS_WITH: String
  dataAnalystName: String
  dataAnalystName_NOT: String
  dataAnalystName_IN: [String!]
  dataAnalystName_NOT_IN: [String!]
  dataAnalystName_CONTAINS: String
  dataAnalystName_NOT_CONTAINS: String
  dataAnalystName_STARTS_WITH: String
  dataAnalystName_NOT_STARTS_WITH: String
  dataAnalystName_ENDS_WITH: String
  dataAnalystName_NOT_ENDS_WITH: String
  genePanel: String
  genePanel_NOT: String
  genePanel_IN: [String!]
  genePanel_NOT_IN: [String!]
  genePanel_CONTAINS: String
  genePanel_NOT_CONTAINS: String
  genePanel_STARTS_WITH: String
  genePanel_NOT_STARTS_WITH: String
  genePanel_ENDS_WITH: String
  genePanel_NOT_ENDS_WITH: String
  igoProjectId: String
  igoProjectId_NOT: String
  igoProjectId_IN: [String!]
  igoProjectId_NOT_IN: [String!]
  igoProjectId_CONTAINS: String
  igoProjectId_NOT_CONTAINS: String
  igoProjectId_STARTS_WITH: String
  igoProjectId_NOT_STARTS_WITH: String
  igoProjectId_ENDS_WITH: String
  igoProjectId_NOT_ENDS_WITH: String
  igoRequestId: String
  igoRequestId_NOT: String
  igoRequestId_IN: [String!]
  igoRequestId_NOT_IN: [String!]
  igoRequestId_CONTAINS: String
  igoRequestId_NOT_CONTAINS: String
  igoRequestId_STARTS_WITH: String
  igoRequestId_NOT_STARTS_WITH: String
  igoRequestId_ENDS_WITH: String
  igoRequestId_NOT_ENDS_WITH: String
  investigatorEmail: String
  investigatorEmail_NOT: String
  investigatorEmail_IN: [String!]
  investigatorEmail_NOT_IN: [String!]
  investigatorEmail_CONTAINS: String
  investigatorEmail_NOT_CONTAINS: String
  investigatorEmail_STARTS_WITH: String
  investigatorEmail_NOT_STARTS_WITH: String
  investigatorEmail_ENDS_WITH: String
  investigatorEmail_NOT_ENDS_WITH: String
  investigatorName: String
  investigatorName_NOT: String
  investigatorName_IN: [String!]
  investigatorName_NOT_IN: [String!]
  investigatorName_CONTAINS: String
  investigatorName_NOT_CONTAINS: String
  investigatorName_STARTS_WITH: String
  investigatorName_NOT_STARTS_WITH: String
  investigatorName_ENDS_WITH: String
  investigatorName_NOT_ENDS_WITH: String
  isCmoRequest: Boolean
  isCmoRequest_NOT: Boolean
  labHeadEmail: String
  labHeadEmail_NOT: String
  labHeadEmail_IN: [String!]
  labHeadEmail_NOT_IN: [String!]
  labHeadEmail_CONTAINS: String
  labHeadEmail_NOT_CONTAINS: String
  labHeadEmail_STARTS_WITH: String
  labHeadEmail_NOT_STARTS_WITH: String
  labHeadEmail_ENDS_WITH: String
  labHeadEmail_NOT_ENDS_WITH: String
  labHeadName: String
  labHeadName_NOT: String
  labHeadName_IN: [String!]
  labHeadName_NOT_IN: [String!]
  labHeadName_CONTAINS: String
  labHeadName_NOT_CONTAINS: String
  labHeadName_STARTS_WITH: String
  labHeadName_NOT_STARTS_WITH: String
  labHeadName_ENDS_WITH: String
  labHeadName_NOT_ENDS_WITH: String
  namespace: String
  namespace_NOT: String
  namespace_IN: [String!]
  namespace_NOT_IN: [String!]
  namespace_CONTAINS: String
  namespace_NOT_CONTAINS: String
  namespace_STARTS_WITH: String
  namespace_NOT_STARTS_WITH: String
  namespace_ENDS_WITH: String
  namespace_NOT_ENDS_WITH: String
  otherContactEmails: String
  otherContactEmails_NOT: String
  otherContactEmails_IN: [String!]
  otherContactEmails_NOT_IN: [String!]
  otherContactEmails_CONTAINS: String
  otherContactEmails_NOT_CONTAINS: String
  otherContactEmails_STARTS_WITH: String
  otherContactEmails_NOT_STARTS_WITH: String
  otherContactEmails_ENDS_WITH: String
  otherContactEmails_NOT_ENDS_WITH: String
  piEmail: String
  piEmail_NOT: String
  piEmail_IN: [String!]
  piEmail_NOT_IN: [String!]
  piEmail_CONTAINS: String
  piEmail_NOT_CONTAINS: String
  piEmail_STARTS_WITH: String
  piEmail_NOT_STARTS_WITH: String
  piEmail_ENDS_WITH: String
  piEmail_NOT_ENDS_WITH: String
  pooledNormals: [String]
  pooledNormals_NOT: [String]
  pooledNormals_INCLUDES: String
  pooledNormals_NOT_INCLUDES: String
  projectManagerName: String
  projectManagerName_NOT: String
  projectManagerName_IN: [String!]
  projectManagerName_NOT_IN: [String!]
  projectManagerName_CONTAINS: String
  projectManagerName_NOT_CONTAINS: String
  projectManagerName_STARTS_WITH: String
  projectManagerName_NOT_STARTS_WITH: String
  projectManagerName_ENDS_WITH: String
  projectManagerName_NOT_ENDS_WITH: String
  qcAccessEmails: String
  qcAccessEmails_NOT: String
  qcAccessEmails_IN: [String!]
  qcAccessEmails_NOT_IN: [String!]
  qcAccessEmails_CONTAINS: String
  qcAccessEmails_NOT_CONTAINS: String
  qcAccessEmails_STARTS_WITH: String
  qcAccessEmails_NOT_STARTS_WITH: String
  qcAccessEmails_ENDS_WITH: String
  qcAccessEmails_NOT_ENDS_WITH: String
  requestJson: String
  requestJson_NOT: String
  requestJson_IN: [String!]
  requestJson_NOT_IN: [String!]
  requestJson_CONTAINS: String
  requestJson_NOT_CONTAINS: String
  requestJson_STARTS_WITH: String
  requestJson_NOT_STARTS_WITH: String
  requestJson_ENDS_WITH: String
  requestJson_NOT_ENDS_WITH: String
  smileRequestId: String
  smileRequestId_NOT: String
  smileRequestId_IN: [String!]
  smileRequestId_NOT_IN: [String!]
  smileRequestId_CONTAINS: String
  smileRequestId_NOT_CONTAINS: String
  smileRequestId_STARTS_WITH: String
  smileRequestId_NOT_STARTS_WITH: String
  smileRequestId_ENDS_WITH: String
  smileRequestId_NOT_ENDS_WITH: String
  hasMetadataRequestMetadata: RequestMetadataWhere
    @deprecated(reason: "Use `hasMetadataRequestMetadata_SOME` instead.")
  hasMetadataRequestMetadata_NOT: RequestMetadataWhere
    @deprecated(reason: "Use `hasMetadataRequestMetadata_NONE` instead.")
  hasMetadataRequestMetadataAggregate: RequestHasMetadataRequestMetadataAggregateInput

  """
  Return Requests where all of the related RequestMetadata match this filter
  """
  hasMetadataRequestMetadata_ALL: RequestMetadataWhere

  """
  Return Requests where none of the related RequestMetadata match this filter
  """
  hasMetadataRequestMetadata_NONE: RequestMetadataWhere

  """
  Return Requests where one of the related RequestMetadata match this filter
  """
  hasMetadataRequestMetadata_SINGLE: RequestMetadataWhere

  """
  Return Requests where some of the related RequestMetadata match this filter
  """
  hasMetadataRequestMetadata_SOME: RequestMetadataWhere
  hasSampleSamples: SampleWhere
    @deprecated(reason: "Use `hasSampleSamples_SOME` instead.")
  hasSampleSamples_NOT: SampleWhere
    @deprecated(reason: "Use `hasSampleSamples_NONE` instead.")
  hasSampleSamplesAggregate: RequestHasSampleSamplesAggregateInput

  """
  Return Requests where all of the related Samples match this filter
  """
  hasSampleSamples_ALL: SampleWhere

  """
  Return Requests where none of the related Samples match this filter
  """
  hasSampleSamples_NONE: SampleWhere

  """
  Return Requests where one of the related Samples match this filter
  """
  hasSampleSamples_SINGLE: SampleWhere

  """
  Return Requests where some of the related Samples match this filter
  """
  hasSampleSamples_SOME: SampleWhere
  projectsHasRequest: ProjectWhere
    @deprecated(reason: "Use `projectsHasRequest_SOME` instead.")
  projectsHasRequest_NOT: ProjectWhere
    @deprecated(reason: "Use `projectsHasRequest_NONE` instead.")
  projectsHasRequestAggregate: RequestProjectsHasRequestAggregateInput

  """
  Return Requests where all of the related Projects match this filter
  """
  projectsHasRequest_ALL: ProjectWhere

  """
  Return Requests where none of the related Projects match this filter
  """
  projectsHasRequest_NONE: ProjectWhere

  """
  Return Requests where one of the related Projects match this filter
  """
  projectsHasRequest_SINGLE: ProjectWhere

  """
  Return Requests where some of the related Projects match this filter
  """
  projectsHasRequest_SOME: ProjectWhere
  hasMetadataRequestMetadataConnection: RequestHasMetadataRequestMetadataConnectionWhere
    @deprecated(
      reason: "Use `hasMetadataRequestMetadataConnection_SOME` instead."
    )
  hasMetadataRequestMetadataConnection_NOT: RequestHasMetadataRequestMetadataConnectionWhere
    @deprecated(
      reason: "Use `hasMetadataRequestMetadataConnection_NONE` instead."
    )
  hasMetadataRequestMetadataConnection_ALL: RequestHasMetadataRequestMetadataConnectionWhere
  hasMetadataRequestMetadataConnection_NONE: RequestHasMetadataRequestMetadataConnectionWhere
  hasMetadataRequestMetadataConnection_SINGLE: RequestHasMetadataRequestMetadataConnectionWhere
  hasMetadataRequestMetadataConnection_SOME: RequestHasMetadataRequestMetadataConnectionWhere
  hasSampleSamplesConnection: RequestHasSampleSamplesConnectionWhere
    @deprecated(reason: "Use `hasSampleSamplesConnection_SOME` instead.")
  hasSampleSamplesConnection_NOT: RequestHasSampleSamplesConnectionWhere
    @deprecated(reason: "Use `hasSampleSamplesConnection_NONE` instead.")
  hasSampleSamplesConnection_ALL: RequestHasSampleSamplesConnectionWhere
  hasSampleSamplesConnection_NONE: RequestHasSampleSamplesConnectionWhere
  hasSampleSamplesConnection_SINGLE: RequestHasSampleSamplesConnectionWhere
  hasSampleSamplesConnection_SOME: RequestHasSampleSamplesConnectionWhere
  projectsHasRequestConnection: RequestProjectsHasRequestConnectionWhere
    @deprecated(reason: "Use `projectsHasRequestConnection_SOME` instead.")
  projectsHasRequestConnection_NOT: RequestProjectsHasRequestConnectionWhere
    @deprecated(reason: "Use `projectsHasRequestConnection_NONE` instead.")
  projectsHasRequestConnection_ALL: RequestProjectsHasRequestConnectionWhere
  projectsHasRequestConnection_NONE: RequestProjectsHasRequestConnectionWhere
  projectsHasRequestConnection_SINGLE: RequestProjectsHasRequestConnectionWhere
  projectsHasRequestConnection_SOME: RequestProjectsHasRequestConnectionWhere
}

input SampleAliasIsAliasSamplesAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [SampleAliasIsAliasSamplesAggregateInput!]
  OR: [SampleAliasIsAliasSamplesAggregateInput!]
  node: SampleAliasIsAliasSamplesNodeAggregationWhereInput
}

input SampleAliasIsAliasSamplesConnectionSort {
  node: SampleSort
}

input SampleAliasIsAliasSamplesConnectionWhere {
  AND: [SampleAliasIsAliasSamplesConnectionWhere!]
  OR: [SampleAliasIsAliasSamplesConnectionWhere!]
  node: SampleWhere
  node_NOT: SampleWhere
}

input SampleAliasIsAliasSamplesNodeAggregationWhereInput {
  AND: [SampleAliasIsAliasSamplesNodeAggregationWhereInput!]
  OR: [SampleAliasIsAliasSamplesNodeAggregationWhereInput!]
  datasource_EQUAL: String
  datasource_AVERAGE_EQUAL: Float
  datasource_LONGEST_EQUAL: Int
  datasource_SHORTEST_EQUAL: Int
  datasource_GT: Int
  datasource_AVERAGE_GT: Float
  datasource_LONGEST_GT: Int
  datasource_SHORTEST_GT: Int
  datasource_GTE: Int
  datasource_AVERAGE_GTE: Float
  datasource_LONGEST_GTE: Int
  datasource_SHORTEST_GTE: Int
  datasource_LT: Int
  datasource_AVERAGE_LT: Float
  datasource_LONGEST_LT: Int
  datasource_SHORTEST_LT: Int
  datasource_LTE: Int
  datasource_AVERAGE_LTE: Float
  datasource_LONGEST_LTE: Int
  datasource_SHORTEST_LTE: Int
  sampleCategory_EQUAL: String
  sampleCategory_AVERAGE_EQUAL: Float
  sampleCategory_LONGEST_EQUAL: Int
  sampleCategory_SHORTEST_EQUAL: Int
  sampleCategory_GT: Int
  sampleCategory_AVERAGE_GT: Float
  sampleCategory_LONGEST_GT: Int
  sampleCategory_SHORTEST_GT: Int
  sampleCategory_GTE: Int
  sampleCategory_AVERAGE_GTE: Float
  sampleCategory_LONGEST_GTE: Int
  sampleCategory_SHORTEST_GTE: Int
  sampleCategory_LT: Int
  sampleCategory_AVERAGE_LT: Float
  sampleCategory_LONGEST_LT: Int
  sampleCategory_SHORTEST_LT: Int
  sampleCategory_LTE: Int
  sampleCategory_AVERAGE_LTE: Float
  sampleCategory_LONGEST_LTE: Int
  sampleCategory_SHORTEST_LTE: Int
  sampleClass_EQUAL: String
  sampleClass_AVERAGE_EQUAL: Float
  sampleClass_LONGEST_EQUAL: Int
  sampleClass_SHORTEST_EQUAL: Int
  sampleClass_GT: Int
  sampleClass_AVERAGE_GT: Float
  sampleClass_LONGEST_GT: Int
  sampleClass_SHORTEST_GT: Int
  sampleClass_GTE: Int
  sampleClass_AVERAGE_GTE: Float
  sampleClass_LONGEST_GTE: Int
  sampleClass_SHORTEST_GTE: Int
  sampleClass_LT: Int
  sampleClass_AVERAGE_LT: Float
  sampleClass_LONGEST_LT: Int
  sampleClass_SHORTEST_LT: Int
  sampleClass_LTE: Int
  sampleClass_AVERAGE_LTE: Float
  sampleClass_LONGEST_LTE: Int
  sampleClass_SHORTEST_LTE: Int
  smileSampleId_EQUAL: String
  smileSampleId_AVERAGE_EQUAL: Float
  smileSampleId_LONGEST_EQUAL: Int
  smileSampleId_SHORTEST_EQUAL: Int
  smileSampleId_GT: Int
  smileSampleId_AVERAGE_GT: Float
  smileSampleId_LONGEST_GT: Int
  smileSampleId_SHORTEST_GT: Int
  smileSampleId_GTE: Int
  smileSampleId_AVERAGE_GTE: Float
  smileSampleId_LONGEST_GTE: Int
  smileSampleId_SHORTEST_GTE: Int
  smileSampleId_LT: Int
  smileSampleId_AVERAGE_LT: Float
  smileSampleId_LONGEST_LT: Int
  smileSampleId_SHORTEST_LT: Int
  smileSampleId_LTE: Int
  smileSampleId_AVERAGE_LTE: Float
  smileSampleId_LONGEST_LTE: Int
  smileSampleId_SHORTEST_LTE: Int
}

input SampleAliasOptions {
  """
  Specify one or more SampleAliasSort objects to sort SampleAliases by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [SampleAliasSort!]
  limit: Int
  offset: Int
}

"""
Fields to sort SampleAliases by. The order in which sorts are applied is not guaranteed when specifying many fields in one SampleAliasSort object.
"""
input SampleAliasSort {
  namespace: SortDirection
  value: SortDirection
}

input SampleAliasWhere {
  OR: [SampleAliasWhere!]
  AND: [SampleAliasWhere!]
  namespace: String
  namespace_NOT: String
  namespace_IN: [String!]
  namespace_NOT_IN: [String!]
  namespace_CONTAINS: String
  namespace_NOT_CONTAINS: String
  namespace_STARTS_WITH: String
  namespace_NOT_STARTS_WITH: String
  namespace_ENDS_WITH: String
  namespace_NOT_ENDS_WITH: String
  value: String
  value_NOT: String
  value_IN: [String!]
  value_NOT_IN: [String!]
  value_CONTAINS: String
  value_NOT_CONTAINS: String
  value_STARTS_WITH: String
  value_NOT_STARTS_WITH: String
  value_ENDS_WITH: String
  value_NOT_ENDS_WITH: String
  isAliasSamples: SampleWhere
    @deprecated(reason: "Use `isAliasSamples_SOME` instead.")
  isAliasSamples_NOT: SampleWhere
    @deprecated(reason: "Use `isAliasSamples_NONE` instead.")
  isAliasSamplesAggregate: SampleAliasIsAliasSamplesAggregateInput

  """
  Return SampleAliases where all of the related Samples match this filter
  """
  isAliasSamples_ALL: SampleWhere

  """
  Return SampleAliases where none of the related Samples match this filter
  """
  isAliasSamples_NONE: SampleWhere

  """
  Return SampleAliases where one of the related Samples match this filter
  """
  isAliasSamples_SINGLE: SampleWhere

  """
  Return SampleAliases where some of the related Samples match this filter
  """
  isAliasSamples_SOME: SampleWhere
  isAliasSamplesConnection: SampleAliasIsAliasSamplesConnectionWhere
    @deprecated(reason: "Use `isAliasSamplesConnection_SOME` instead.")
  isAliasSamplesConnection_NOT: SampleAliasIsAliasSamplesConnectionWhere
    @deprecated(reason: "Use `isAliasSamplesConnection_NONE` instead.")
  isAliasSamplesConnection_ALL: SampleAliasIsAliasSamplesConnectionWhere
  isAliasSamplesConnection_NONE: SampleAliasIsAliasSamplesConnectionWhere
  isAliasSamplesConnection_SINGLE: SampleAliasIsAliasSamplesConnectionWhere
  isAliasSamplesConnection_SOME: SampleAliasIsAliasSamplesConnectionWhere
}

input SampleHasMetadataSampleMetadataAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [SampleHasMetadataSampleMetadataAggregateInput!]
  OR: [SampleHasMetadataSampleMetadataAggregateInput!]
  node: SampleHasMetadataSampleMetadataNodeAggregationWhereInput
}

input SampleHasMetadataSampleMetadataConnectionSort {
  node: SampleMetadataSort
}

input SampleHasMetadataSampleMetadataConnectionWhere {
  AND: [SampleHasMetadataSampleMetadataConnectionWhere!]
  OR: [SampleHasMetadataSampleMetadataConnectionWhere!]
  node: SampleMetadataWhere
  node_NOT: SampleMetadataWhere
}

input SampleHasMetadataSampleMetadataNodeAggregationWhereInput {
  AND: [SampleHasMetadataSampleMetadataNodeAggregationWhereInput!]
  OR: [SampleHasMetadataSampleMetadataNodeAggregationWhereInput!]
  additionalProperties_EQUAL: String
  additionalProperties_AVERAGE_EQUAL: Float
  additionalProperties_LONGEST_EQUAL: Int
  additionalProperties_SHORTEST_EQUAL: Int
  additionalProperties_GT: Int
  additionalProperties_AVERAGE_GT: Float
  additionalProperties_LONGEST_GT: Int
  additionalProperties_SHORTEST_GT: Int
  additionalProperties_GTE: Int
  additionalProperties_AVERAGE_GTE: Float
  additionalProperties_LONGEST_GTE: Int
  additionalProperties_SHORTEST_GTE: Int
  additionalProperties_LT: Int
  additionalProperties_AVERAGE_LT: Float
  additionalProperties_LONGEST_LT: Int
  additionalProperties_SHORTEST_LT: Int
  additionalProperties_LTE: Int
  additionalProperties_AVERAGE_LTE: Float
  additionalProperties_LONGEST_LTE: Int
  additionalProperties_SHORTEST_LTE: Int
  baitSet_EQUAL: String
  baitSet_AVERAGE_EQUAL: Float
  baitSet_LONGEST_EQUAL: Int
  baitSet_SHORTEST_EQUAL: Int
  baitSet_GT: Int
  baitSet_AVERAGE_GT: Float
  baitSet_LONGEST_GT: Int
  baitSet_SHORTEST_GT: Int
  baitSet_GTE: Int
  baitSet_AVERAGE_GTE: Float
  baitSet_LONGEST_GTE: Int
  baitSet_SHORTEST_GTE: Int
  baitSet_LT: Int
  baitSet_AVERAGE_LT: Float
  baitSet_LONGEST_LT: Int
  baitSet_SHORTEST_LT: Int
  baitSet_LTE: Int
  baitSet_AVERAGE_LTE: Float
  baitSet_LONGEST_LTE: Int
  baitSet_SHORTEST_LTE: Int
  cmoPatientId_EQUAL: String
  cmoPatientId_AVERAGE_EQUAL: Float
  cmoPatientId_LONGEST_EQUAL: Int
  cmoPatientId_SHORTEST_EQUAL: Int
  cmoPatientId_GT: Int
  cmoPatientId_AVERAGE_GT: Float
  cmoPatientId_LONGEST_GT: Int
  cmoPatientId_SHORTEST_GT: Int
  cmoPatientId_GTE: Int
  cmoPatientId_AVERAGE_GTE: Float
  cmoPatientId_LONGEST_GTE: Int
  cmoPatientId_SHORTEST_GTE: Int
  cmoPatientId_LT: Int
  cmoPatientId_AVERAGE_LT: Float
  cmoPatientId_LONGEST_LT: Int
  cmoPatientId_SHORTEST_LT: Int
  cmoPatientId_LTE: Int
  cmoPatientId_AVERAGE_LTE: Float
  cmoPatientId_LONGEST_LTE: Int
  cmoPatientId_SHORTEST_LTE: Int
  cmoSampleIdFields_EQUAL: String
  cmoSampleIdFields_AVERAGE_EQUAL: Float
  cmoSampleIdFields_LONGEST_EQUAL: Int
  cmoSampleIdFields_SHORTEST_EQUAL: Int
  cmoSampleIdFields_GT: Int
  cmoSampleIdFields_AVERAGE_GT: Float
  cmoSampleIdFields_LONGEST_GT: Int
  cmoSampleIdFields_SHORTEST_GT: Int
  cmoSampleIdFields_GTE: Int
  cmoSampleIdFields_AVERAGE_GTE: Float
  cmoSampleIdFields_LONGEST_GTE: Int
  cmoSampleIdFields_SHORTEST_GTE: Int
  cmoSampleIdFields_LT: Int
  cmoSampleIdFields_AVERAGE_LT: Float
  cmoSampleIdFields_LONGEST_LT: Int
  cmoSampleIdFields_SHORTEST_LT: Int
  cmoSampleIdFields_LTE: Int
  cmoSampleIdFields_AVERAGE_LTE: Float
  cmoSampleIdFields_LONGEST_LTE: Int
  cmoSampleIdFields_SHORTEST_LTE: Int
  cmoSampleName_EQUAL: String
  cmoSampleName_AVERAGE_EQUAL: Float
  cmoSampleName_LONGEST_EQUAL: Int
  cmoSampleName_SHORTEST_EQUAL: Int
  cmoSampleName_GT: Int
  cmoSampleName_AVERAGE_GT: Float
  cmoSampleName_LONGEST_GT: Int
  cmoSampleName_SHORTEST_GT: Int
  cmoSampleName_GTE: Int
  cmoSampleName_AVERAGE_GTE: Float
  cmoSampleName_LONGEST_GTE: Int
  cmoSampleName_SHORTEST_GTE: Int
  cmoSampleName_LT: Int
  cmoSampleName_AVERAGE_LT: Float
  cmoSampleName_LONGEST_LT: Int
  cmoSampleName_SHORTEST_LT: Int
  cmoSampleName_LTE: Int
  cmoSampleName_AVERAGE_LTE: Float
  cmoSampleName_LONGEST_LTE: Int
  cmoSampleName_SHORTEST_LTE: Int
  collectionYear_EQUAL: String
  collectionYear_AVERAGE_EQUAL: Float
  collectionYear_LONGEST_EQUAL: Int
  collectionYear_SHORTEST_EQUAL: Int
  collectionYear_GT: Int
  collectionYear_AVERAGE_GT: Float
  collectionYear_LONGEST_GT: Int
  collectionYear_SHORTEST_GT: Int
  collectionYear_GTE: Int
  collectionYear_AVERAGE_GTE: Float
  collectionYear_LONGEST_GTE: Int
  collectionYear_SHORTEST_GTE: Int
  collectionYear_LT: Int
  collectionYear_AVERAGE_LT: Float
  collectionYear_LONGEST_LT: Int
  collectionYear_SHORTEST_LT: Int
  collectionYear_LTE: Int
  collectionYear_AVERAGE_LTE: Float
  collectionYear_LONGEST_LTE: Int
  collectionYear_SHORTEST_LTE: Int
  genePanel_EQUAL: String
  genePanel_AVERAGE_EQUAL: Float
  genePanel_LONGEST_EQUAL: Int
  genePanel_SHORTEST_EQUAL: Int
  genePanel_GT: Int
  genePanel_AVERAGE_GT: Float
  genePanel_LONGEST_GT: Int
  genePanel_SHORTEST_GT: Int
  genePanel_GTE: Int
  genePanel_AVERAGE_GTE: Float
  genePanel_LONGEST_GTE: Int
  genePanel_SHORTEST_GTE: Int
  genePanel_LT: Int
  genePanel_AVERAGE_LT: Float
  genePanel_LONGEST_LT: Int
  genePanel_SHORTEST_LT: Int
  genePanel_LTE: Int
  genePanel_AVERAGE_LTE: Float
  genePanel_LONGEST_LTE: Int
  genePanel_SHORTEST_LTE: Int
  igoRequestId_EQUAL: String
  igoRequestId_AVERAGE_EQUAL: Float
  igoRequestId_LONGEST_EQUAL: Int
  igoRequestId_SHORTEST_EQUAL: Int
  igoRequestId_GT: Int
  igoRequestId_AVERAGE_GT: Float
  igoRequestId_LONGEST_GT: Int
  igoRequestId_SHORTEST_GT: Int
  igoRequestId_GTE: Int
  igoRequestId_AVERAGE_GTE: Float
  igoRequestId_LONGEST_GTE: Int
  igoRequestId_SHORTEST_GTE: Int
  igoRequestId_LT: Int
  igoRequestId_AVERAGE_LT: Float
  igoRequestId_LONGEST_LT: Int
  igoRequestId_SHORTEST_LT: Int
  igoRequestId_LTE: Int
  igoRequestId_AVERAGE_LTE: Float
  igoRequestId_LONGEST_LTE: Int
  igoRequestId_SHORTEST_LTE: Int
  importDate_EQUAL: String
  importDate_AVERAGE_EQUAL: Float
  importDate_LONGEST_EQUAL: Int
  importDate_SHORTEST_EQUAL: Int
  importDate_GT: Int
  importDate_AVERAGE_GT: Float
  importDate_LONGEST_GT: Int
  importDate_SHORTEST_GT: Int
  importDate_GTE: Int
  importDate_AVERAGE_GTE: Float
  importDate_LONGEST_GTE: Int
  importDate_SHORTEST_GTE: Int
  importDate_LT: Int
  importDate_AVERAGE_LT: Float
  importDate_LONGEST_LT: Int
  importDate_SHORTEST_LT: Int
  importDate_LTE: Int
  importDate_AVERAGE_LTE: Float
  importDate_LONGEST_LTE: Int
  importDate_SHORTEST_LTE: Int
  investigatorSampleId_EQUAL: String
  investigatorSampleId_AVERAGE_EQUAL: Float
  investigatorSampleId_LONGEST_EQUAL: Int
  investigatorSampleId_SHORTEST_EQUAL: Int
  investigatorSampleId_GT: Int
  investigatorSampleId_AVERAGE_GT: Float
  investigatorSampleId_LONGEST_GT: Int
  investigatorSampleId_SHORTEST_GT: Int
  investigatorSampleId_GTE: Int
  investigatorSampleId_AVERAGE_GTE: Float
  investigatorSampleId_LONGEST_GTE: Int
  investigatorSampleId_SHORTEST_GTE: Int
  investigatorSampleId_LT: Int
  investigatorSampleId_AVERAGE_LT: Float
  investigatorSampleId_LONGEST_LT: Int
  investigatorSampleId_SHORTEST_LT: Int
  investigatorSampleId_LTE: Int
  investigatorSampleId_AVERAGE_LTE: Float
  investigatorSampleId_LONGEST_LTE: Int
  investigatorSampleId_SHORTEST_LTE: Int
  libraries_EQUAL: String
  libraries_AVERAGE_EQUAL: Float
  libraries_LONGEST_EQUAL: Int
  libraries_SHORTEST_EQUAL: Int
  libraries_GT: Int
  libraries_AVERAGE_GT: Float
  libraries_LONGEST_GT: Int
  libraries_SHORTEST_GT: Int
  libraries_GTE: Int
  libraries_AVERAGE_GTE: Float
  libraries_LONGEST_GTE: Int
  libraries_SHORTEST_GTE: Int
  libraries_LT: Int
  libraries_AVERAGE_LT: Float
  libraries_LONGEST_LT: Int
  libraries_SHORTEST_LT: Int
  libraries_LTE: Int
  libraries_AVERAGE_LTE: Float
  libraries_LONGEST_LTE: Int
  libraries_SHORTEST_LTE: Int
  oncotreeCode_EQUAL: String
  oncotreeCode_AVERAGE_EQUAL: Float
  oncotreeCode_LONGEST_EQUAL: Int
  oncotreeCode_SHORTEST_EQUAL: Int
  oncotreeCode_GT: Int
  oncotreeCode_AVERAGE_GT: Float
  oncotreeCode_LONGEST_GT: Int
  oncotreeCode_SHORTEST_GT: Int
  oncotreeCode_GTE: Int
  oncotreeCode_AVERAGE_GTE: Float
  oncotreeCode_LONGEST_GTE: Int
  oncotreeCode_SHORTEST_GTE: Int
  oncotreeCode_LT: Int
  oncotreeCode_AVERAGE_LT: Float
  oncotreeCode_LONGEST_LT: Int
  oncotreeCode_SHORTEST_LT: Int
  oncotreeCode_LTE: Int
  oncotreeCode_AVERAGE_LTE: Float
  oncotreeCode_LONGEST_LTE: Int
  oncotreeCode_SHORTEST_LTE: Int
  preservation_EQUAL: String
  preservation_AVERAGE_EQUAL: Float
  preservation_LONGEST_EQUAL: Int
  preservation_SHORTEST_EQUAL: Int
  preservation_GT: Int
  preservation_AVERAGE_GT: Float
  preservation_LONGEST_GT: Int
  preservation_SHORTEST_GT: Int
  preservation_GTE: Int
  preservation_AVERAGE_GTE: Float
  preservation_LONGEST_GTE: Int
  preservation_SHORTEST_GTE: Int
  preservation_LT: Int
  preservation_AVERAGE_LT: Float
  preservation_LONGEST_LT: Int
  preservation_SHORTEST_LT: Int
  preservation_LTE: Int
  preservation_AVERAGE_LTE: Float
  preservation_LONGEST_LTE: Int
  preservation_SHORTEST_LTE: Int
  primaryId_EQUAL: String
  primaryId_AVERAGE_EQUAL: Float
  primaryId_LONGEST_EQUAL: Int
  primaryId_SHORTEST_EQUAL: Int
  primaryId_GT: Int
  primaryId_AVERAGE_GT: Float
  primaryId_LONGEST_GT: Int
  primaryId_SHORTEST_GT: Int
  primaryId_GTE: Int
  primaryId_AVERAGE_GTE: Float
  primaryId_LONGEST_GTE: Int
  primaryId_SHORTEST_GTE: Int
  primaryId_LT: Int
  primaryId_AVERAGE_LT: Float
  primaryId_LONGEST_LT: Int
  primaryId_SHORTEST_LT: Int
  primaryId_LTE: Int
  primaryId_AVERAGE_LTE: Float
  primaryId_LONGEST_LTE: Int
  primaryId_SHORTEST_LTE: Int
  qcReports_EQUAL: String
  qcReports_AVERAGE_EQUAL: Float
  qcReports_LONGEST_EQUAL: Int
  qcReports_SHORTEST_EQUAL: Int
  qcReports_GT: Int
  qcReports_AVERAGE_GT: Float
  qcReports_LONGEST_GT: Int
  qcReports_SHORTEST_GT: Int
  qcReports_GTE: Int
  qcReports_AVERAGE_GTE: Float
  qcReports_LONGEST_GTE: Int
  qcReports_SHORTEST_GTE: Int
  qcReports_LT: Int
  qcReports_AVERAGE_LT: Float
  qcReports_LONGEST_LT: Int
  qcReports_SHORTEST_LT: Int
  qcReports_LTE: Int
  qcReports_AVERAGE_LTE: Float
  qcReports_LONGEST_LTE: Int
  qcReports_SHORTEST_LTE: Int
  sampleClass_EQUAL: String
  sampleClass_AVERAGE_EQUAL: Float
  sampleClass_LONGEST_EQUAL: Int
  sampleClass_SHORTEST_EQUAL: Int
  sampleClass_GT: Int
  sampleClass_AVERAGE_GT: Float
  sampleClass_LONGEST_GT: Int
  sampleClass_SHORTEST_GT: Int
  sampleClass_GTE: Int
  sampleClass_AVERAGE_GTE: Float
  sampleClass_LONGEST_GTE: Int
  sampleClass_SHORTEST_GTE: Int
  sampleClass_LT: Int
  sampleClass_AVERAGE_LT: Float
  sampleClass_LONGEST_LT: Int
  sampleClass_SHORTEST_LT: Int
  sampleClass_LTE: Int
  sampleClass_AVERAGE_LTE: Float
  sampleClass_LONGEST_LTE: Int
  sampleClass_SHORTEST_LTE: Int
  sampleName_EQUAL: String
  sampleName_AVERAGE_EQUAL: Float
  sampleName_LONGEST_EQUAL: Int
  sampleName_SHORTEST_EQUAL: Int
  sampleName_GT: Int
  sampleName_AVERAGE_GT: Float
  sampleName_LONGEST_GT: Int
  sampleName_SHORTEST_GT: Int
  sampleName_GTE: Int
  sampleName_AVERAGE_GTE: Float
  sampleName_LONGEST_GTE: Int
  sampleName_SHORTEST_GTE: Int
  sampleName_LT: Int
  sampleName_AVERAGE_LT: Float
  sampleName_LONGEST_LT: Int
  sampleName_SHORTEST_LT: Int
  sampleName_LTE: Int
  sampleName_AVERAGE_LTE: Float
  sampleName_LONGEST_LTE: Int
  sampleName_SHORTEST_LTE: Int
  sampleOrigin_EQUAL: String
  sampleOrigin_AVERAGE_EQUAL: Float
  sampleOrigin_LONGEST_EQUAL: Int
  sampleOrigin_SHORTEST_EQUAL: Int
  sampleOrigin_GT: Int
  sampleOrigin_AVERAGE_GT: Float
  sampleOrigin_LONGEST_GT: Int
  sampleOrigin_SHORTEST_GT: Int
  sampleOrigin_GTE: Int
  sampleOrigin_AVERAGE_GTE: Float
  sampleOrigin_LONGEST_GTE: Int
  sampleOrigin_SHORTEST_GTE: Int
  sampleOrigin_LT: Int
  sampleOrigin_AVERAGE_LT: Float
  sampleOrigin_LONGEST_LT: Int
  sampleOrigin_SHORTEST_LT: Int
  sampleOrigin_LTE: Int
  sampleOrigin_AVERAGE_LTE: Float
  sampleOrigin_LONGEST_LTE: Int
  sampleOrigin_SHORTEST_LTE: Int
  sampleType_EQUAL: String
  sampleType_AVERAGE_EQUAL: Float
  sampleType_LONGEST_EQUAL: Int
  sampleType_SHORTEST_EQUAL: Int
  sampleType_GT: Int
  sampleType_AVERAGE_GT: Float
  sampleType_LONGEST_GT: Int
  sampleType_SHORTEST_GT: Int
  sampleType_GTE: Int
  sampleType_AVERAGE_GTE: Float
  sampleType_LONGEST_GTE: Int
  sampleType_SHORTEST_GTE: Int
  sampleType_LT: Int
  sampleType_AVERAGE_LT: Float
  sampleType_LONGEST_LT: Int
  sampleType_SHORTEST_LT: Int
  sampleType_LTE: Int
  sampleType_AVERAGE_LTE: Float
  sampleType_LONGEST_LTE: Int
  sampleType_SHORTEST_LTE: Int
  sex_EQUAL: String
  sex_AVERAGE_EQUAL: Float
  sex_LONGEST_EQUAL: Int
  sex_SHORTEST_EQUAL: Int
  sex_GT: Int
  sex_AVERAGE_GT: Float
  sex_LONGEST_GT: Int
  sex_SHORTEST_GT: Int
  sex_GTE: Int
  sex_AVERAGE_GTE: Float
  sex_LONGEST_GTE: Int
  sex_SHORTEST_GTE: Int
  sex_LT: Int
  sex_AVERAGE_LT: Float
  sex_LONGEST_LT: Int
  sex_SHORTEST_LT: Int
  sex_LTE: Int
  sex_AVERAGE_LTE: Float
  sex_LONGEST_LTE: Int
  sex_SHORTEST_LTE: Int
  species_EQUAL: String
  species_AVERAGE_EQUAL: Float
  species_LONGEST_EQUAL: Int
  species_SHORTEST_EQUAL: Int
  species_GT: Int
  species_AVERAGE_GT: Float
  species_LONGEST_GT: Int
  species_SHORTEST_GT: Int
  species_GTE: Int
  species_AVERAGE_GTE: Float
  species_LONGEST_GTE: Int
  species_SHORTEST_GTE: Int
  species_LT: Int
  species_AVERAGE_LT: Float
  species_LONGEST_LT: Int
  species_SHORTEST_LT: Int
  species_LTE: Int
  species_AVERAGE_LTE: Float
  species_LONGEST_LTE: Int
  species_SHORTEST_LTE: Int
  tissueLocation_EQUAL: String
  tissueLocation_AVERAGE_EQUAL: Float
  tissueLocation_LONGEST_EQUAL: Int
  tissueLocation_SHORTEST_EQUAL: Int
  tissueLocation_GT: Int
  tissueLocation_AVERAGE_GT: Float
  tissueLocation_LONGEST_GT: Int
  tissueLocation_SHORTEST_GT: Int
  tissueLocation_GTE: Int
  tissueLocation_AVERAGE_GTE: Float
  tissueLocation_LONGEST_GTE: Int
  tissueLocation_SHORTEST_GTE: Int
  tissueLocation_LT: Int
  tissueLocation_AVERAGE_LT: Float
  tissueLocation_LONGEST_LT: Int
  tissueLocation_SHORTEST_LT: Int
  tissueLocation_LTE: Int
  tissueLocation_AVERAGE_LTE: Float
  tissueLocation_LONGEST_LTE: Int
  tissueLocation_SHORTEST_LTE: Int
  tubeId_EQUAL: String
  tubeId_AVERAGE_EQUAL: Float
  tubeId_LONGEST_EQUAL: Int
  tubeId_SHORTEST_EQUAL: Int
  tubeId_GT: Int
  tubeId_AVERAGE_GT: Float
  tubeId_LONGEST_GT: Int
  tubeId_SHORTEST_GT: Int
  tubeId_GTE: Int
  tubeId_AVERAGE_GTE: Float
  tubeId_LONGEST_GTE: Int
  tubeId_SHORTEST_GTE: Int
  tubeId_LT: Int
  tubeId_AVERAGE_LT: Float
  tubeId_LONGEST_LT: Int
  tubeId_SHORTEST_LT: Int
  tubeId_LTE: Int
  tubeId_AVERAGE_LTE: Float
  tubeId_LONGEST_LTE: Int
  tubeId_SHORTEST_LTE: Int
  tumorOrNormal_EQUAL: String
  tumorOrNormal_AVERAGE_EQUAL: Float
  tumorOrNormal_LONGEST_EQUAL: Int
  tumorOrNormal_SHORTEST_EQUAL: Int
  tumorOrNormal_GT: Int
  tumorOrNormal_AVERAGE_GT: Float
  tumorOrNormal_LONGEST_GT: Int
  tumorOrNormal_SHORTEST_GT: Int
  tumorOrNormal_GTE: Int
  tumorOrNormal_AVERAGE_GTE: Float
  tumorOrNormal_LONGEST_GTE: Int
  tumorOrNormal_SHORTEST_GTE: Int
  tumorOrNormal_LT: Int
  tumorOrNormal_AVERAGE_LT: Float
  tumorOrNormal_LONGEST_LT: Int
  tumorOrNormal_SHORTEST_LT: Int
  tumorOrNormal_LTE: Int
  tumorOrNormal_AVERAGE_LTE: Float
  tumorOrNormal_LONGEST_LTE: Int
  tumorOrNormal_SHORTEST_LTE: Int
}

input SampleMetadataOptions {
  """
  Specify one or more SampleMetadataSort objects to sort SampleMetadata by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [SampleMetadataSort!]
  limit: Int
  offset: Int
}

input SampleMetadataSamplesHasMetadataAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [SampleMetadataSamplesHasMetadataAggregateInput!]
  OR: [SampleMetadataSamplesHasMetadataAggregateInput!]
  node: SampleMetadataSamplesHasMetadataNodeAggregationWhereInput
}

input SampleMetadataSamplesHasMetadataConnectionSort {
  node: SampleSort
}

input SampleMetadataSamplesHasMetadataConnectionWhere {
  AND: [SampleMetadataSamplesHasMetadataConnectionWhere!]
  OR: [SampleMetadataSamplesHasMetadataConnectionWhere!]
  node: SampleWhere
  node_NOT: SampleWhere
}

input SampleMetadataSamplesHasMetadataNodeAggregationWhereInput {
  AND: [SampleMetadataSamplesHasMetadataNodeAggregationWhereInput!]
  OR: [SampleMetadataSamplesHasMetadataNodeAggregationWhereInput!]
  datasource_EQUAL: String
  datasource_AVERAGE_EQUAL: Float
  datasource_LONGEST_EQUAL: Int
  datasource_SHORTEST_EQUAL: Int
  datasource_GT: Int
  datasource_AVERAGE_GT: Float
  datasource_LONGEST_GT: Int
  datasource_SHORTEST_GT: Int
  datasource_GTE: Int
  datasource_AVERAGE_GTE: Float
  datasource_LONGEST_GTE: Int
  datasource_SHORTEST_GTE: Int
  datasource_LT: Int
  datasource_AVERAGE_LT: Float
  datasource_LONGEST_LT: Int
  datasource_SHORTEST_LT: Int
  datasource_LTE: Int
  datasource_AVERAGE_LTE: Float
  datasource_LONGEST_LTE: Int
  datasource_SHORTEST_LTE: Int
  sampleCategory_EQUAL: String
  sampleCategory_AVERAGE_EQUAL: Float
  sampleCategory_LONGEST_EQUAL: Int
  sampleCategory_SHORTEST_EQUAL: Int
  sampleCategory_GT: Int
  sampleCategory_AVERAGE_GT: Float
  sampleCategory_LONGEST_GT: Int
  sampleCategory_SHORTEST_GT: Int
  sampleCategory_GTE: Int
  sampleCategory_AVERAGE_GTE: Float
  sampleCategory_LONGEST_GTE: Int
  sampleCategory_SHORTEST_GTE: Int
  sampleCategory_LT: Int
  sampleCategory_AVERAGE_LT: Float
  sampleCategory_LONGEST_LT: Int
  sampleCategory_SHORTEST_LT: Int
  sampleCategory_LTE: Int
  sampleCategory_AVERAGE_LTE: Float
  sampleCategory_LONGEST_LTE: Int
  sampleCategory_SHORTEST_LTE: Int
  sampleClass_EQUAL: String
  sampleClass_AVERAGE_EQUAL: Float
  sampleClass_LONGEST_EQUAL: Int
  sampleClass_SHORTEST_EQUAL: Int
  sampleClass_GT: Int
  sampleClass_AVERAGE_GT: Float
  sampleClass_LONGEST_GT: Int
  sampleClass_SHORTEST_GT: Int
  sampleClass_GTE: Int
  sampleClass_AVERAGE_GTE: Float
  sampleClass_LONGEST_GTE: Int
  sampleClass_SHORTEST_GTE: Int
  sampleClass_LT: Int
  sampleClass_AVERAGE_LT: Float
  sampleClass_LONGEST_LT: Int
  sampleClass_SHORTEST_LT: Int
  sampleClass_LTE: Int
  sampleClass_AVERAGE_LTE: Float
  sampleClass_LONGEST_LTE: Int
  sampleClass_SHORTEST_LTE: Int
  smileSampleId_EQUAL: String
  smileSampleId_AVERAGE_EQUAL: Float
  smileSampleId_LONGEST_EQUAL: Int
  smileSampleId_SHORTEST_EQUAL: Int
  smileSampleId_GT: Int
  smileSampleId_AVERAGE_GT: Float
  smileSampleId_LONGEST_GT: Int
  smileSampleId_SHORTEST_GT: Int
  smileSampleId_GTE: Int
  smileSampleId_AVERAGE_GTE: Float
  smileSampleId_LONGEST_GTE: Int
  smileSampleId_SHORTEST_GTE: Int
  smileSampleId_LT: Int
  smileSampleId_AVERAGE_LT: Float
  smileSampleId_LONGEST_LT: Int
  smileSampleId_SHORTEST_LT: Int
  smileSampleId_LTE: Int
  smileSampleId_AVERAGE_LTE: Float
  smileSampleId_LONGEST_LTE: Int
  smileSampleId_SHORTEST_LTE: Int
}

"""
Fields to sort SampleMetadata by. The order in which sorts are applied is not guaranteed when specifying many fields in one SampleMetadataSort object.
"""
input SampleMetadataSort {
  additionalProperties: SortDirection
  baitSet: SortDirection
  cmoPatientId: SortDirection
  cmoSampleIdFields: SortDirection
  cmoSampleName: SortDirection
  collectionYear: SortDirection
  genePanel: SortDirection
  igoComplete: SortDirection
  igoRequestId: SortDirection
  importDate: SortDirection
  investigatorSampleId: SortDirection
  libraries: SortDirection
  oncotreeCode: SortDirection
  preservation: SortDirection
  primaryId: SortDirection
  qcReports: SortDirection
  sampleClass: SortDirection
  sampleName: SortDirection
  sampleOrigin: SortDirection
  sampleType: SortDirection
  sex: SortDirection
  species: SortDirection
  tissueLocation: SortDirection
  tubeId: SortDirection
  tumorOrNormal: SortDirection
}

input SampleMetadataWhere {
  OR: [SampleMetadataWhere!]
  AND: [SampleMetadataWhere!]
  additionalProperties: String
  additionalProperties_NOT: String
  additionalProperties_IN: [String!]
  additionalProperties_NOT_IN: [String!]
  additionalProperties_CONTAINS: String
  additionalProperties_NOT_CONTAINS: String
  additionalProperties_STARTS_WITH: String
  additionalProperties_NOT_STARTS_WITH: String
  additionalProperties_ENDS_WITH: String
  additionalProperties_NOT_ENDS_WITH: String
  baitSet: String
  baitSet_NOT: String
  baitSet_IN: [String!]
  baitSet_NOT_IN: [String!]
  baitSet_CONTAINS: String
  baitSet_NOT_CONTAINS: String
  baitSet_STARTS_WITH: String
  baitSet_NOT_STARTS_WITH: String
  baitSet_ENDS_WITH: String
  baitSet_NOT_ENDS_WITH: String
  cmoPatientId: String
  cmoPatientId_NOT: String
  cmoPatientId_IN: [String!]
  cmoPatientId_NOT_IN: [String!]
  cmoPatientId_CONTAINS: String
  cmoPatientId_NOT_CONTAINS: String
  cmoPatientId_STARTS_WITH: String
  cmoPatientId_NOT_STARTS_WITH: String
  cmoPatientId_ENDS_WITH: String
  cmoPatientId_NOT_ENDS_WITH: String
  cmoSampleIdFields: String
  cmoSampleIdFields_NOT: String
  cmoSampleIdFields_IN: [String!]
  cmoSampleIdFields_NOT_IN: [String!]
  cmoSampleIdFields_CONTAINS: String
  cmoSampleIdFields_NOT_CONTAINS: String
  cmoSampleIdFields_STARTS_WITH: String
  cmoSampleIdFields_NOT_STARTS_WITH: String
  cmoSampleIdFields_ENDS_WITH: String
  cmoSampleIdFields_NOT_ENDS_WITH: String
  cmoSampleName: String
  cmoSampleName_NOT: String
  cmoSampleName_IN: [String]
  cmoSampleName_NOT_IN: [String]
  cmoSampleName_CONTAINS: String
  cmoSampleName_NOT_CONTAINS: String
  cmoSampleName_STARTS_WITH: String
  cmoSampleName_NOT_STARTS_WITH: String
  cmoSampleName_ENDS_WITH: String
  cmoSampleName_NOT_ENDS_WITH: String
  collectionYear: String
  collectionYear_NOT: String
  collectionYear_IN: [String!]
  collectionYear_NOT_IN: [String!]
  collectionYear_CONTAINS: String
  collectionYear_NOT_CONTAINS: String
  collectionYear_STARTS_WITH: String
  collectionYear_NOT_STARTS_WITH: String
  collectionYear_ENDS_WITH: String
  collectionYear_NOT_ENDS_WITH: String
  genePanel: String
  genePanel_NOT: String
  genePanel_IN: [String!]
  genePanel_NOT_IN: [String!]
  genePanel_CONTAINS: String
  genePanel_NOT_CONTAINS: String
  genePanel_STARTS_WITH: String
  genePanel_NOT_STARTS_WITH: String
  genePanel_ENDS_WITH: String
  genePanel_NOT_ENDS_WITH: String
  igoComplete: Boolean
  igoComplete_NOT: Boolean
  igoRequestId: String
  igoRequestId_NOT: String
  igoRequestId_IN: [String]
  igoRequestId_NOT_IN: [String]
  igoRequestId_CONTAINS: String
  igoRequestId_NOT_CONTAINS: String
  igoRequestId_STARTS_WITH: String
  igoRequestId_NOT_STARTS_WITH: String
  igoRequestId_ENDS_WITH: String
  igoRequestId_NOT_ENDS_WITH: String
  importDate: String
  importDate_NOT: String
  importDate_IN: [String!]
  importDate_NOT_IN: [String!]
  importDate_CONTAINS: String
  importDate_NOT_CONTAINS: String
  importDate_STARTS_WITH: String
  importDate_NOT_STARTS_WITH: String
  importDate_ENDS_WITH: String
  importDate_NOT_ENDS_WITH: String
  investigatorSampleId: String
  investigatorSampleId_NOT: String
  investigatorSampleId_IN: [String]
  investigatorSampleId_NOT_IN: [String]
  investigatorSampleId_CONTAINS: String
  investigatorSampleId_NOT_CONTAINS: String
  investigatorSampleId_STARTS_WITH: String
  investigatorSampleId_NOT_STARTS_WITH: String
  investigatorSampleId_ENDS_WITH: String
  investigatorSampleId_NOT_ENDS_WITH: String
  libraries: String
  libraries_NOT: String
  libraries_IN: [String!]
  libraries_NOT_IN: [String!]
  libraries_CONTAINS: String
  libraries_NOT_CONTAINS: String
  libraries_STARTS_WITH: String
  libraries_NOT_STARTS_WITH: String
  libraries_ENDS_WITH: String
  libraries_NOT_ENDS_WITH: String
  oncotreeCode: String
  oncotreeCode_NOT: String
  oncotreeCode_IN: [String]
  oncotreeCode_NOT_IN: [String]
  oncotreeCode_CONTAINS: String
  oncotreeCode_NOT_CONTAINS: String
  oncotreeCode_STARTS_WITH: String
  oncotreeCode_NOT_STARTS_WITH: String
  oncotreeCode_ENDS_WITH: String
  oncotreeCode_NOT_ENDS_WITH: String
  preservation: String
  preservation_NOT: String
  preservation_IN: [String]
  preservation_NOT_IN: [String]
  preservation_CONTAINS: String
  preservation_NOT_CONTAINS: String
  preservation_STARTS_WITH: String
  preservation_NOT_STARTS_WITH: String
  preservation_ENDS_WITH: String
  preservation_NOT_ENDS_WITH: String
  primaryId: String
  primaryId_NOT: String
  primaryId_IN: [String!]
  primaryId_NOT_IN: [String!]
  primaryId_CONTAINS: String
  primaryId_NOT_CONTAINS: String
  primaryId_STARTS_WITH: String
  primaryId_NOT_STARTS_WITH: String
  primaryId_ENDS_WITH: String
  primaryId_NOT_ENDS_WITH: String
  qcReports: String
  qcReports_NOT: String
  qcReports_IN: [String!]
  qcReports_NOT_IN: [String!]
  qcReports_CONTAINS: String
  qcReports_NOT_CONTAINS: String
  qcReports_STARTS_WITH: String
  qcReports_NOT_STARTS_WITH: String
  qcReports_ENDS_WITH: String
  qcReports_NOT_ENDS_WITH: String
  sampleClass: String
  sampleClass_NOT: String
  sampleClass_IN: [String!]
  sampleClass_NOT_IN: [String!]
  sampleClass_CONTAINS: String
  sampleClass_NOT_CONTAINS: String
  sampleClass_STARTS_WITH: String
  sampleClass_NOT_STARTS_WITH: String
  sampleClass_ENDS_WITH: String
  sampleClass_NOT_ENDS_WITH: String
  sampleName: String
  sampleName_NOT: String
  sampleName_IN: [String]
  sampleName_NOT_IN: [String]
  sampleName_CONTAINS: String
  sampleName_NOT_CONTAINS: String
  sampleName_STARTS_WITH: String
  sampleName_NOT_STARTS_WITH: String
  sampleName_ENDS_WITH: String
  sampleName_NOT_ENDS_WITH: String
  sampleOrigin: String
  sampleOrigin_NOT: String
  sampleOrigin_IN: [String]
  sampleOrigin_NOT_IN: [String]
  sampleOrigin_CONTAINS: String
  sampleOrigin_NOT_CONTAINS: String
  sampleOrigin_STARTS_WITH: String
  sampleOrigin_NOT_STARTS_WITH: String
  sampleOrigin_ENDS_WITH: String
  sampleOrigin_NOT_ENDS_WITH: String
  sampleType: String
  sampleType_NOT: String
  sampleType_IN: [String!]
  sampleType_NOT_IN: [String!]
  sampleType_CONTAINS: String
  sampleType_NOT_CONTAINS: String
  sampleType_STARTS_WITH: String
  sampleType_NOT_STARTS_WITH: String
  sampleType_ENDS_WITH: String
  sampleType_NOT_ENDS_WITH: String
  sex: String
  sex_NOT: String
  sex_IN: [String!]
  sex_NOT_IN: [String!]
  sex_CONTAINS: String
  sex_NOT_CONTAINS: String
  sex_STARTS_WITH: String
  sex_NOT_STARTS_WITH: String
  sex_ENDS_WITH: String
  sex_NOT_ENDS_WITH: String
  species: String
  species_NOT: String
  species_IN: [String!]
  species_NOT_IN: [String!]
  species_CONTAINS: String
  species_NOT_CONTAINS: String
  species_STARTS_WITH: String
  species_NOT_STARTS_WITH: String
  species_ENDS_WITH: String
  species_NOT_ENDS_WITH: String
  tissueLocation: String
  tissueLocation_NOT: String
  tissueLocation_IN: [String]
  tissueLocation_NOT_IN: [String]
  tissueLocation_CONTAINS: String
  tissueLocation_NOT_CONTAINS: String
  tissueLocation_STARTS_WITH: String
  tissueLocation_NOT_STARTS_WITH: String
  tissueLocation_ENDS_WITH: String
  tissueLocation_NOT_ENDS_WITH: String
  tubeId: String
  tubeId_NOT: String
  tubeId_IN: [String]
  tubeId_NOT_IN: [String]
  tubeId_CONTAINS: String
  tubeId_NOT_CONTAINS: String
  tubeId_STARTS_WITH: String
  tubeId_NOT_STARTS_WITH: String
  tubeId_ENDS_WITH: String
  tubeId_NOT_ENDS_WITH: String
  tumorOrNormal: String
  tumorOrNormal_NOT: String
  tumorOrNormal_IN: [String!]
  tumorOrNormal_NOT_IN: [String!]
  tumorOrNormal_CONTAINS: String
  tumorOrNormal_NOT_CONTAINS: String
  tumorOrNormal_STARTS_WITH: String
  tumorOrNormal_NOT_STARTS_WITH: String
  tumorOrNormal_ENDS_WITH: String
  tumorOrNormal_NOT_ENDS_WITH: String
  samplesHasMetadata: SampleWhere
    @deprecated(reason: "Use `samplesHasMetadata_SOME` instead.")
  samplesHasMetadata_NOT: SampleWhere
    @deprecated(reason: "Use `samplesHasMetadata_NONE` instead.")
  samplesHasMetadataAggregate: SampleMetadataSamplesHasMetadataAggregateInput

  """
  Return SampleMetadata where all of the related Samples match this filter
  """
  samplesHasMetadata_ALL: SampleWhere

  """
  Return SampleMetadata where none of the related Samples match this filter
  """
  samplesHasMetadata_NONE: SampleWhere

  """
  Return SampleMetadata where one of the related Samples match this filter
  """
  samplesHasMetadata_SINGLE: SampleWhere

  """
  Return SampleMetadata where some of the related Samples match this filter
  """
  samplesHasMetadata_SOME: SampleWhere
  samplesHasMetadataConnection: SampleMetadataSamplesHasMetadataConnectionWhere
    @deprecated(reason: "Use `samplesHasMetadataConnection_SOME` instead.")
  samplesHasMetadataConnection_NOT: SampleMetadataSamplesHasMetadataConnectionWhere
    @deprecated(reason: "Use `samplesHasMetadataConnection_NONE` instead.")
  samplesHasMetadataConnection_ALL: SampleMetadataSamplesHasMetadataConnectionWhere
  samplesHasMetadataConnection_NONE: SampleMetadataSamplesHasMetadataConnectionWhere
  samplesHasMetadataConnection_SINGLE: SampleMetadataSamplesHasMetadataConnectionWhere
  samplesHasMetadataConnection_SOME: SampleMetadataSamplesHasMetadataConnectionWhere
}

input SampleOptions {
  """
  Specify one or more SampleSort objects to sort Samples by. The sorts will be applied in the order in which they are arranged in the array.
  """
  sort: [SampleSort!]
  limit: Int
  offset: Int
}

input SamplePatientsHasSampleAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [SamplePatientsHasSampleAggregateInput!]
  OR: [SamplePatientsHasSampleAggregateInput!]
  node: SamplePatientsHasSampleNodeAggregationWhereInput
}

input SamplePatientsHasSampleConnectionSort {
  node: PatientSort
}

input SamplePatientsHasSampleConnectionWhere {
  AND: [SamplePatientsHasSampleConnectionWhere!]
  OR: [SamplePatientsHasSampleConnectionWhere!]
  node: PatientWhere
  node_NOT: PatientWhere
}

input SamplePatientsHasSampleNodeAggregationWhereInput {
  AND: [SamplePatientsHasSampleNodeAggregationWhereInput!]
  OR: [SamplePatientsHasSampleNodeAggregationWhereInput!]
  smilePatientId_EQUAL: String
  smilePatientId_AVERAGE_EQUAL: Float
  smilePatientId_LONGEST_EQUAL: Int
  smilePatientId_SHORTEST_EQUAL: Int
  smilePatientId_GT: Int
  smilePatientId_AVERAGE_GT: Float
  smilePatientId_LONGEST_GT: Int
  smilePatientId_SHORTEST_GT: Int
  smilePatientId_GTE: Int
  smilePatientId_AVERAGE_GTE: Float
  smilePatientId_LONGEST_GTE: Int
  smilePatientId_SHORTEST_GTE: Int
  smilePatientId_LT: Int
  smilePatientId_AVERAGE_LT: Float
  smilePatientId_LONGEST_LT: Int
  smilePatientId_SHORTEST_LT: Int
  smilePatientId_LTE: Int
  smilePatientId_AVERAGE_LTE: Float
  smilePatientId_LONGEST_LTE: Int
  smilePatientId_SHORTEST_LTE: Int
}

input SampleRequestsHasSampleAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [SampleRequestsHasSampleAggregateInput!]
  OR: [SampleRequestsHasSampleAggregateInput!]
  node: SampleRequestsHasSampleNodeAggregationWhereInput
}

input SampleRequestsHasSampleConnectionSort {
  node: RequestSort
}

input SampleRequestsHasSampleConnectionWhere {
  AND: [SampleRequestsHasSampleConnectionWhere!]
  OR: [SampleRequestsHasSampleConnectionWhere!]
  node: RequestWhere
  node_NOT: RequestWhere
}

input SampleRequestsHasSampleNodeAggregationWhereInput {
  AND: [SampleRequestsHasSampleNodeAggregationWhereInput!]
  OR: [SampleRequestsHasSampleNodeAggregationWhereInput!]
  dataAccessEmails_EQUAL: String
  dataAccessEmails_AVERAGE_EQUAL: Float
  dataAccessEmails_LONGEST_EQUAL: Int
  dataAccessEmails_SHORTEST_EQUAL: Int
  dataAccessEmails_GT: Int
  dataAccessEmails_AVERAGE_GT: Float
  dataAccessEmails_LONGEST_GT: Int
  dataAccessEmails_SHORTEST_GT: Int
  dataAccessEmails_GTE: Int
  dataAccessEmails_AVERAGE_GTE: Float
  dataAccessEmails_LONGEST_GTE: Int
  dataAccessEmails_SHORTEST_GTE: Int
  dataAccessEmails_LT: Int
  dataAccessEmails_AVERAGE_LT: Float
  dataAccessEmails_LONGEST_LT: Int
  dataAccessEmails_SHORTEST_LT: Int
  dataAccessEmails_LTE: Int
  dataAccessEmails_AVERAGE_LTE: Float
  dataAccessEmails_LONGEST_LTE: Int
  dataAccessEmails_SHORTEST_LTE: Int
  dataAnalystEmail_EQUAL: String
  dataAnalystEmail_AVERAGE_EQUAL: Float
  dataAnalystEmail_LONGEST_EQUAL: Int
  dataAnalystEmail_SHORTEST_EQUAL: Int
  dataAnalystEmail_GT: Int
  dataAnalystEmail_AVERAGE_GT: Float
  dataAnalystEmail_LONGEST_GT: Int
  dataAnalystEmail_SHORTEST_GT: Int
  dataAnalystEmail_GTE: Int
  dataAnalystEmail_AVERAGE_GTE: Float
  dataAnalystEmail_LONGEST_GTE: Int
  dataAnalystEmail_SHORTEST_GTE: Int
  dataAnalystEmail_LT: Int
  dataAnalystEmail_AVERAGE_LT: Float
  dataAnalystEmail_LONGEST_LT: Int
  dataAnalystEmail_SHORTEST_LT: Int
  dataAnalystEmail_LTE: Int
  dataAnalystEmail_AVERAGE_LTE: Float
  dataAnalystEmail_LONGEST_LTE: Int
  dataAnalystEmail_SHORTEST_LTE: Int
  dataAnalystName_EQUAL: String
  dataAnalystName_AVERAGE_EQUAL: Float
  dataAnalystName_LONGEST_EQUAL: Int
  dataAnalystName_SHORTEST_EQUAL: Int
  dataAnalystName_GT: Int
  dataAnalystName_AVERAGE_GT: Float
  dataAnalystName_LONGEST_GT: Int
  dataAnalystName_SHORTEST_GT: Int
  dataAnalystName_GTE: Int
  dataAnalystName_AVERAGE_GTE: Float
  dataAnalystName_LONGEST_GTE: Int
  dataAnalystName_SHORTEST_GTE: Int
  dataAnalystName_LT: Int
  dataAnalystName_AVERAGE_LT: Float
  dataAnalystName_LONGEST_LT: Int
  dataAnalystName_SHORTEST_LT: Int
  dataAnalystName_LTE: Int
  dataAnalystName_AVERAGE_LTE: Float
  dataAnalystName_LONGEST_LTE: Int
  dataAnalystName_SHORTEST_LTE: Int
  genePanel_EQUAL: String
  genePanel_AVERAGE_EQUAL: Float
  genePanel_LONGEST_EQUAL: Int
  genePanel_SHORTEST_EQUAL: Int
  genePanel_GT: Int
  genePanel_AVERAGE_GT: Float
  genePanel_LONGEST_GT: Int
  genePanel_SHORTEST_GT: Int
  genePanel_GTE: Int
  genePanel_AVERAGE_GTE: Float
  genePanel_LONGEST_GTE: Int
  genePanel_SHORTEST_GTE: Int
  genePanel_LT: Int
  genePanel_AVERAGE_LT: Float
  genePanel_LONGEST_LT: Int
  genePanel_SHORTEST_LT: Int
  genePanel_LTE: Int
  genePanel_AVERAGE_LTE: Float
  genePanel_LONGEST_LTE: Int
  genePanel_SHORTEST_LTE: Int
  igoProjectId_EQUAL: String
  igoProjectId_AVERAGE_EQUAL: Float
  igoProjectId_LONGEST_EQUAL: Int
  igoProjectId_SHORTEST_EQUAL: Int
  igoProjectId_GT: Int
  igoProjectId_AVERAGE_GT: Float
  igoProjectId_LONGEST_GT: Int
  igoProjectId_SHORTEST_GT: Int
  igoProjectId_GTE: Int
  igoProjectId_AVERAGE_GTE: Float
  igoProjectId_LONGEST_GTE: Int
  igoProjectId_SHORTEST_GTE: Int
  igoProjectId_LT: Int
  igoProjectId_AVERAGE_LT: Float
  igoProjectId_LONGEST_LT: Int
  igoProjectId_SHORTEST_LT: Int
  igoProjectId_LTE: Int
  igoProjectId_AVERAGE_LTE: Float
  igoProjectId_LONGEST_LTE: Int
  igoProjectId_SHORTEST_LTE: Int
  igoRequestId_EQUAL: String
  igoRequestId_AVERAGE_EQUAL: Float
  igoRequestId_LONGEST_EQUAL: Int
  igoRequestId_SHORTEST_EQUAL: Int
  igoRequestId_GT: Int
  igoRequestId_AVERAGE_GT: Float
  igoRequestId_LONGEST_GT: Int
  igoRequestId_SHORTEST_GT: Int
  igoRequestId_GTE: Int
  igoRequestId_AVERAGE_GTE: Float
  igoRequestId_LONGEST_GTE: Int
  igoRequestId_SHORTEST_GTE: Int
  igoRequestId_LT: Int
  igoRequestId_AVERAGE_LT: Float
  igoRequestId_LONGEST_LT: Int
  igoRequestId_SHORTEST_LT: Int
  igoRequestId_LTE: Int
  igoRequestId_AVERAGE_LTE: Float
  igoRequestId_LONGEST_LTE: Int
  igoRequestId_SHORTEST_LTE: Int
  investigatorEmail_EQUAL: String
  investigatorEmail_AVERAGE_EQUAL: Float
  investigatorEmail_LONGEST_EQUAL: Int
  investigatorEmail_SHORTEST_EQUAL: Int
  investigatorEmail_GT: Int
  investigatorEmail_AVERAGE_GT: Float
  investigatorEmail_LONGEST_GT: Int
  investigatorEmail_SHORTEST_GT: Int
  investigatorEmail_GTE: Int
  investigatorEmail_AVERAGE_GTE: Float
  investigatorEmail_LONGEST_GTE: Int
  investigatorEmail_SHORTEST_GTE: Int
  investigatorEmail_LT: Int
  investigatorEmail_AVERAGE_LT: Float
  investigatorEmail_LONGEST_LT: Int
  investigatorEmail_SHORTEST_LT: Int
  investigatorEmail_LTE: Int
  investigatorEmail_AVERAGE_LTE: Float
  investigatorEmail_LONGEST_LTE: Int
  investigatorEmail_SHORTEST_LTE: Int
  investigatorName_EQUAL: String
  investigatorName_AVERAGE_EQUAL: Float
  investigatorName_LONGEST_EQUAL: Int
  investigatorName_SHORTEST_EQUAL: Int
  investigatorName_GT: Int
  investigatorName_AVERAGE_GT: Float
  investigatorName_LONGEST_GT: Int
  investigatorName_SHORTEST_GT: Int
  investigatorName_GTE: Int
  investigatorName_AVERAGE_GTE: Float
  investigatorName_LONGEST_GTE: Int
  investigatorName_SHORTEST_GTE: Int
  investigatorName_LT: Int
  investigatorName_AVERAGE_LT: Float
  investigatorName_LONGEST_LT: Int
  investigatorName_SHORTEST_LT: Int
  investigatorName_LTE: Int
  investigatorName_AVERAGE_LTE: Float
  investigatorName_LONGEST_LTE: Int
  investigatorName_SHORTEST_LTE: Int
  labHeadEmail_EQUAL: String
  labHeadEmail_AVERAGE_EQUAL: Float
  labHeadEmail_LONGEST_EQUAL: Int
  labHeadEmail_SHORTEST_EQUAL: Int
  labHeadEmail_GT: Int
  labHeadEmail_AVERAGE_GT: Float
  labHeadEmail_LONGEST_GT: Int
  labHeadEmail_SHORTEST_GT: Int
  labHeadEmail_GTE: Int
  labHeadEmail_AVERAGE_GTE: Float
  labHeadEmail_LONGEST_GTE: Int
  labHeadEmail_SHORTEST_GTE: Int
  labHeadEmail_LT: Int
  labHeadEmail_AVERAGE_LT: Float
  labHeadEmail_LONGEST_LT: Int
  labHeadEmail_SHORTEST_LT: Int
  labHeadEmail_LTE: Int
  labHeadEmail_AVERAGE_LTE: Float
  labHeadEmail_LONGEST_LTE: Int
  labHeadEmail_SHORTEST_LTE: Int
  labHeadName_EQUAL: String
  labHeadName_AVERAGE_EQUAL: Float
  labHeadName_LONGEST_EQUAL: Int
  labHeadName_SHORTEST_EQUAL: Int
  labHeadName_GT: Int
  labHeadName_AVERAGE_GT: Float
  labHeadName_LONGEST_GT: Int
  labHeadName_SHORTEST_GT: Int
  labHeadName_GTE: Int
  labHeadName_AVERAGE_GTE: Float
  labHeadName_LONGEST_GTE: Int
  labHeadName_SHORTEST_GTE: Int
  labHeadName_LT: Int
  labHeadName_AVERAGE_LT: Float
  labHeadName_LONGEST_LT: Int
  labHeadName_SHORTEST_LT: Int
  labHeadName_LTE: Int
  labHeadName_AVERAGE_LTE: Float
  labHeadName_LONGEST_LTE: Int
  labHeadName_SHORTEST_LTE: Int
  namespace_EQUAL: String
  namespace_AVERAGE_EQUAL: Float
  namespace_LONGEST_EQUAL: Int
  namespace_SHORTEST_EQUAL: Int
  namespace_GT: Int
  namespace_AVERAGE_GT: Float
  namespace_LONGEST_GT: Int
  namespace_SHORTEST_GT: Int
  namespace_GTE: Int
  namespace_AVERAGE_GTE: Float
  namespace_LONGEST_GTE: Int
  namespace_SHORTEST_GTE: Int
  namespace_LT: Int
  namespace_AVERAGE_LT: Float
  namespace_LONGEST_LT: Int
  namespace_SHORTEST_LT: Int
  namespace_LTE: Int
  namespace_AVERAGE_LTE: Float
  namespace_LONGEST_LTE: Int
  namespace_SHORTEST_LTE: Int
  otherContactEmails_EQUAL: String
  otherContactEmails_AVERAGE_EQUAL: Float
  otherContactEmails_LONGEST_EQUAL: Int
  otherContactEmails_SHORTEST_EQUAL: Int
  otherContactEmails_GT: Int
  otherContactEmails_AVERAGE_GT: Float
  otherContactEmails_LONGEST_GT: Int
  otherContactEmails_SHORTEST_GT: Int
  otherContactEmails_GTE: Int
  otherContactEmails_AVERAGE_GTE: Float
  otherContactEmails_LONGEST_GTE: Int
  otherContactEmails_SHORTEST_GTE: Int
  otherContactEmails_LT: Int
  otherContactEmails_AVERAGE_LT: Float
  otherContactEmails_LONGEST_LT: Int
  otherContactEmails_SHORTEST_LT: Int
  otherContactEmails_LTE: Int
  otherContactEmails_AVERAGE_LTE: Float
  otherContactEmails_LONGEST_LTE: Int
  otherContactEmails_SHORTEST_LTE: Int
  piEmail_EQUAL: String
  piEmail_AVERAGE_EQUAL: Float
  piEmail_LONGEST_EQUAL: Int
  piEmail_SHORTEST_EQUAL: Int
  piEmail_GT: Int
  piEmail_AVERAGE_GT: Float
  piEmail_LONGEST_GT: Int
  piEmail_SHORTEST_GT: Int
  piEmail_GTE: Int
  piEmail_AVERAGE_GTE: Float
  piEmail_LONGEST_GTE: Int
  piEmail_SHORTEST_GTE: Int
  piEmail_LT: Int
  piEmail_AVERAGE_LT: Float
  piEmail_LONGEST_LT: Int
  piEmail_SHORTEST_LT: Int
  piEmail_LTE: Int
  piEmail_AVERAGE_LTE: Float
  piEmail_LONGEST_LTE: Int
  piEmail_SHORTEST_LTE: Int
  projectManagerName_EQUAL: String
  projectManagerName_AVERAGE_EQUAL: Float
  projectManagerName_LONGEST_EQUAL: Int
  projectManagerName_SHORTEST_EQUAL: Int
  projectManagerName_GT: Int
  projectManagerName_AVERAGE_GT: Float
  projectManagerName_LONGEST_GT: Int
  projectManagerName_SHORTEST_GT: Int
  projectManagerName_GTE: Int
  projectManagerName_AVERAGE_GTE: Float
  projectManagerName_LONGEST_GTE: Int
  projectManagerName_SHORTEST_GTE: Int
  projectManagerName_LT: Int
  projectManagerName_AVERAGE_LT: Float
  projectManagerName_LONGEST_LT: Int
  projectManagerName_SHORTEST_LT: Int
  projectManagerName_LTE: Int
  projectManagerName_AVERAGE_LTE: Float
  projectManagerName_LONGEST_LTE: Int
  projectManagerName_SHORTEST_LTE: Int
  qcAccessEmails_EQUAL: String
  qcAccessEmails_AVERAGE_EQUAL: Float
  qcAccessEmails_LONGEST_EQUAL: Int
  qcAccessEmails_SHORTEST_EQUAL: Int
  qcAccessEmails_GT: Int
  qcAccessEmails_AVERAGE_GT: Float
  qcAccessEmails_LONGEST_GT: Int
  qcAccessEmails_SHORTEST_GT: Int
  qcAccessEmails_GTE: Int
  qcAccessEmails_AVERAGE_GTE: Float
  qcAccessEmails_LONGEST_GTE: Int
  qcAccessEmails_SHORTEST_GTE: Int
  qcAccessEmails_LT: Int
  qcAccessEmails_AVERAGE_LT: Float
  qcAccessEmails_LONGEST_LT: Int
  qcAccessEmails_SHORTEST_LT: Int
  qcAccessEmails_LTE: Int
  qcAccessEmails_AVERAGE_LTE: Float
  qcAccessEmails_LONGEST_LTE: Int
  qcAccessEmails_SHORTEST_LTE: Int
  requestJson_EQUAL: String
  requestJson_AVERAGE_EQUAL: Float
  requestJson_LONGEST_EQUAL: Int
  requestJson_SHORTEST_EQUAL: Int
  requestJson_GT: Int
  requestJson_AVERAGE_GT: Float
  requestJson_LONGEST_GT: Int
  requestJson_SHORTEST_GT: Int
  requestJson_GTE: Int
  requestJson_AVERAGE_GTE: Float
  requestJson_LONGEST_GTE: Int
  requestJson_SHORTEST_GTE: Int
  requestJson_LT: Int
  requestJson_AVERAGE_LT: Float
  requestJson_LONGEST_LT: Int
  requestJson_SHORTEST_LT: Int
  requestJson_LTE: Int
  requestJson_AVERAGE_LTE: Float
  requestJson_LONGEST_LTE: Int
  requestJson_SHORTEST_LTE: Int
  smileRequestId_EQUAL: String
  smileRequestId_AVERAGE_EQUAL: Float
  smileRequestId_LONGEST_EQUAL: Int
  smileRequestId_SHORTEST_EQUAL: Int
  smileRequestId_GT: Int
  smileRequestId_AVERAGE_GT: Float
  smileRequestId_LONGEST_GT: Int
  smileRequestId_SHORTEST_GT: Int
  smileRequestId_GTE: Int
  smileRequestId_AVERAGE_GTE: Float
  smileRequestId_LONGEST_GTE: Int
  smileRequestId_SHORTEST_GTE: Int
  smileRequestId_LT: Int
  smileRequestId_AVERAGE_LT: Float
  smileRequestId_LONGEST_LT: Int
  smileRequestId_SHORTEST_LT: Int
  smileRequestId_LTE: Int
  smileRequestId_AVERAGE_LTE: Float
  smileRequestId_LONGEST_LTE: Int
  smileRequestId_SHORTEST_LTE: Int
}

input SampleSampleAliasesIsAliasAggregateInput {
  count: Int
  count_LT: Int
  count_LTE: Int
  count_GT: Int
  count_GTE: Int
  AND: [SampleSampleAliasesIsAliasAggregateInput!]
  OR: [SampleSampleAliasesIsAliasAggregateInput!]
  node: SampleSampleAliasesIsAliasNodeAggregationWhereInput
}

input SampleSampleAliasesIsAliasConnectionSort {
  node: SampleAliasSort
}

input SampleSampleAliasesIsAliasConnectionWhere {
  AND: [SampleSampleAliasesIsAliasConnectionWhere!]
  OR: [SampleSampleAliasesIsAliasConnectionWhere!]
  node: SampleAliasWhere
  node_NOT: SampleAliasWhere
}

input SampleSampleAliasesIsAliasNodeAggregationWhereInput {
  AND: [SampleSampleAliasesIsAliasNodeAggregationWhereInput!]
  OR: [SampleSampleAliasesIsAliasNodeAggregationWhereInput!]
  namespace_EQUAL: String
  namespace_AVERAGE_EQUAL: Float
  namespace_LONGEST_EQUAL: Int
  namespace_SHORTEST_EQUAL: Int
  namespace_GT: Int
  namespace_AVERAGE_GT: Float
  namespace_LONGEST_GT: Int
  namespace_SHORTEST_GT: Int
  namespace_GTE: Int
  namespace_AVERAGE_GTE: Float
  namespace_LONGEST_GTE: Int
  namespace_SHORTEST_GTE: Int
  namespace_LT: Int
  namespace_AVERAGE_LT: Float
  namespace_LONGEST_LT: Int
  namespace_SHORTEST_LT: Int
  namespace_LTE: Int
  namespace_AVERAGE_LTE: Float
  namespace_LONGEST_LTE: Int
  namespace_SHORTEST_LTE: Int
  value_EQUAL: String
  value_AVERAGE_EQUAL: Float
  value_LONGEST_EQUAL: Int
  value_SHORTEST_EQUAL: Int
  value_GT: Int
  value_AVERAGE_GT: Float
  value_LONGEST_GT: Int
  value_SHORTEST_GT: Int
  value_GTE: Int
  value_AVERAGE_GTE: Float
  value_LONGEST_GTE: Int
  value_SHORTEST_GTE: Int
  value_LT: Int
  value_AVERAGE_LT: Float
  value_LONGEST_LT: Int
  value_SHORTEST_LT: Int
  value_LTE: Int
  value_AVERAGE_LTE: Float
  value_LONGEST_LTE: Int
  value_SHORTEST_LTE: Int
}

"""
Fields to sort Samples by. The order in which sorts are applied is not guaranteed when specifying many fields in one SampleSort object.
"""
input SampleSort {
  datasource: SortDirection
  sampleCategory: SortDirection
  sampleClass: SortDirection
  smileSampleId: SortDirection
}

input SampleWhere {
  OR: [SampleWhere!]
  AND: [SampleWhere!]
  datasource: String
  datasource_NOT: String
  datasource_IN: [String!]
  datasource_NOT_IN: [String!]
  datasource_CONTAINS: String
  datasource_NOT_CONTAINS: String
  datasource_STARTS_WITH: String
  datasource_NOT_STARTS_WITH: String
  datasource_ENDS_WITH: String
  datasource_NOT_ENDS_WITH: String
  sampleCategory: String
  sampleCategory_NOT: String
  sampleCategory_IN: [String!]
  sampleCategory_NOT_IN: [String!]
  sampleCategory_CONTAINS: String
  sampleCategory_NOT_CONTAINS: String
  sampleCategory_STARTS_WITH: String
  sampleCategory_NOT_STARTS_WITH: String
  sampleCategory_ENDS_WITH: String
  sampleCategory_NOT_ENDS_WITH: String
  sampleClass: String
  sampleClass_NOT: String
  sampleClass_IN: [String!]
  sampleClass_NOT_IN: [String!]
  sampleClass_CONTAINS: String
  sampleClass_NOT_CONTAINS: String
  sampleClass_STARTS_WITH: String
  sampleClass_NOT_STARTS_WITH: String
  sampleClass_ENDS_WITH: String
  sampleClass_NOT_ENDS_WITH: String
  smileSampleId: String
  smileSampleId_NOT: String
  smileSampleId_IN: [String!]
  smileSampleId_NOT_IN: [String!]
  smileSampleId_CONTAINS: String
  smileSampleId_NOT_CONTAINS: String
  smileSampleId_STARTS_WITH: String
  smileSampleId_NOT_STARTS_WITH: String
  smileSampleId_ENDS_WITH: String
  smileSampleId_NOT_ENDS_WITH: String
  hasMetadataSampleMetadata: SampleMetadataWhere
    @deprecated(reason: "Use `hasMetadataSampleMetadata_SOME` instead.")
  hasMetadataSampleMetadata_NOT: SampleMetadataWhere
    @deprecated(reason: "Use `hasMetadataSampleMetadata_NONE` instead.")
  hasMetadataSampleMetadataAggregate: SampleHasMetadataSampleMetadataAggregateInput

  """
  Return Samples where all of the related SampleMetadata match this filter
  """
  hasMetadataSampleMetadata_ALL: SampleMetadataWhere

  """
  Return Samples where none of the related SampleMetadata match this filter
  """
  hasMetadataSampleMetadata_NONE: SampleMetadataWhere

  """
  Return Samples where one of the related SampleMetadata match this filter
  """
  hasMetadataSampleMetadata_SINGLE: SampleMetadataWhere

  """
  Return Samples where some of the related SampleMetadata match this filter
  """
  hasMetadataSampleMetadata_SOME: SampleMetadataWhere
  patientsHasSample: PatientWhere
    @deprecated(reason: "Use `patientsHasSample_SOME` instead.")
  patientsHasSample_NOT: PatientWhere
    @deprecated(reason: "Use `patientsHasSample_NONE` instead.")
  patientsHasSampleAggregate: SamplePatientsHasSampleAggregateInput

  """
  Return Samples where all of the related Patients match this filter
  """
  patientsHasSample_ALL: PatientWhere

  """
  Return Samples where none of the related Patients match this filter
  """
  patientsHasSample_NONE: PatientWhere

  """
  Return Samples where one of the related Patients match this filter
  """
  patientsHasSample_SINGLE: PatientWhere

  """
  Return Samples where some of the related Patients match this filter
  """
  patientsHasSample_SOME: PatientWhere
  requestsHasSample: RequestWhere
    @deprecated(reason: "Use `requestsHasSample_SOME` instead.")
  requestsHasSample_NOT: RequestWhere
    @deprecated(reason: "Use `requestsHasSample_NONE` instead.")
  requestsHasSampleAggregate: SampleRequestsHasSampleAggregateInput

  """
  Return Samples where all of the related Requests match this filter
  """
  requestsHasSample_ALL: RequestWhere

  """
  Return Samples where none of the related Requests match this filter
  """
  requestsHasSample_NONE: RequestWhere

  """
  Return Samples where one of the related Requests match this filter
  """
  requestsHasSample_SINGLE: RequestWhere

  """
  Return Samples where some of the related Requests match this filter
  """
  requestsHasSample_SOME: RequestWhere
  sampleAliasesIsAlias: SampleAliasWhere
    @deprecated(reason: "Use `sampleAliasesIsAlias_SOME` instead.")
  sampleAliasesIsAlias_NOT: SampleAliasWhere
    @deprecated(reason: "Use `sampleAliasesIsAlias_NONE` instead.")
  sampleAliasesIsAliasAggregate: SampleSampleAliasesIsAliasAggregateInput

  """
  Return Samples where all of the related SampleAliases match this filter
  """
  sampleAliasesIsAlias_ALL: SampleAliasWhere

  """
  Return Samples where none of the related SampleAliases match this filter
  """
  sampleAliasesIsAlias_NONE: SampleAliasWhere

  """
  Return Samples where one of the related SampleAliases match this filter
  """
  sampleAliasesIsAlias_SINGLE: SampleAliasWhere

  """
  Return Samples where some of the related SampleAliases match this filter
  """
  sampleAliasesIsAlias_SOME: SampleAliasWhere
  hasMetadataSampleMetadataConnection: SampleHasMetadataSampleMetadataConnectionWhere
    @deprecated(
      reason: "Use `hasMetadataSampleMetadataConnection_SOME` instead."
    )
  hasMetadataSampleMetadataConnection_NOT: SampleHasMetadataSampleMetadataConnectionWhere
    @deprecated(
      reason: "Use `hasMetadataSampleMetadataConnection_NONE` instead."
    )
  hasMetadataSampleMetadataConnection_ALL: SampleHasMetadataSampleMetadataConnectionWhere
  hasMetadataSampleMetadataConnection_NONE: SampleHasMetadataSampleMetadataConnectionWhere
  hasMetadataSampleMetadataConnection_SINGLE: SampleHasMetadataSampleMetadataConnectionWhere
  hasMetadataSampleMetadataConnection_SOME: SampleHasMetadataSampleMetadataConnectionWhere
  patientsHasSampleConnection: SamplePatientsHasSampleConnectionWhere
    @deprecated(reason: "Use `patientsHasSampleConnection_SOME` instead.")
  patientsHasSampleConnection_NOT: SamplePatientsHasSampleConnectionWhere
    @deprecated(reason: "Use `patientsHasSampleConnection_NONE` instead.")
  patientsHasSampleConnection_ALL: SamplePatientsHasSampleConnectionWhere
  patientsHasSampleConnection_NONE: SamplePatientsHasSampleConnectionWhere
  patientsHasSampleConnection_SINGLE: SamplePatientsHasSampleConnectionWhere
  patientsHasSampleConnection_SOME: SamplePatientsHasSampleConnectionWhere
  requestsHasSampleConnection: SampleRequestsHasSampleConnectionWhere
    @deprecated(reason: "Use `requestsHasSampleConnection_SOME` instead.")
  requestsHasSampleConnection_NOT: SampleRequestsHasSampleConnectionWhere
    @deprecated(reason: "Use `requestsHasSampleConnection_NONE` instead.")
  requestsHasSampleConnection_ALL: SampleRequestsHasSampleConnectionWhere
  requestsHasSampleConnection_NONE: SampleRequestsHasSampleConnectionWhere
  requestsHasSampleConnection_SINGLE: SampleRequestsHasSampleConnectionWhere
  requestsHasSampleConnection_SOME: SampleRequestsHasSampleConnectionWhere
  sampleAliasesIsAliasConnection: SampleSampleAliasesIsAliasConnectionWhere
    @deprecated(reason: "Use `sampleAliasesIsAliasConnection_SOME` instead.")
  sampleAliasesIsAliasConnection_NOT: SampleSampleAliasesIsAliasConnectionWhere
    @deprecated(reason: "Use `sampleAliasesIsAliasConnection_NONE` instead.")
  sampleAliasesIsAliasConnection_ALL: SampleSampleAliasesIsAliasConnectionWhere
  sampleAliasesIsAliasConnection_NONE: SampleSampleAliasesIsAliasConnectionWhere
  sampleAliasesIsAliasConnection_SINGLE: SampleSampleAliasesIsAliasConnectionWhere
  sampleAliasesIsAliasConnection_SOME: SampleSampleAliasesIsAliasConnectionWhere
}
