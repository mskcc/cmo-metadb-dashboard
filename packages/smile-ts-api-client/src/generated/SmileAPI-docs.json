{
  "swagger": "2.0",
  "info": {
    "title": "CMO SMILE REST API"
  },
  "tags": [
    {
      "name": "request-controller",
      "description": "Request Controller"
    },
    {
      "name": "sample-controller",
      "description": "Sample Controller"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    }
  ],
  "paths": {
    "/error": {
      "get": {
        "tags": ["basic-error-controller"],
        "summary": "error",
        "operationId": "errorUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": ["basic-error-controller"],
        "summary": "error",
        "operationId": "errorUsingHEAD",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": ["basic-error-controller"],
        "summary": "error",
        "operationId": "errorUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": ["basic-error-controller"],
        "summary": "error",
        "operationId": "errorUsingPUT",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": ["basic-error-controller"],
        "summary": "error",
        "operationId": "errorUsingDELETE",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": ["basic-error-controller"],
        "summary": "error",
        "operationId": "errorUsingOPTIONS",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": ["basic-error-controller"],
        "summary": "error",
        "operationId": "errorUsingPATCH",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/request": {
      "post": {
        "tags": ["request-controller"],
        "summary": "Returns a list of SmileRequest given a list of Request IDs.",
        "operationId": "fetchSmileRequestListPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "requestIds",
            "description": "List of Request IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublishedSmileRequest"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/request/{requestId}": {
      "get": {
        "tags": ["request-controller"],
        "summary": "Returns a SmileRequest given a Request ID",
        "operationId": "fetchSmileRequestGET",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Request ID to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublishedSmileRequest"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/requestsByImportDate": {
      "post": {
        "tags": ["request-controller"],
        "summary": "Returns a list of request summaries or list of request IDs importedinto the database within the provided date range.",
        "operationId": "fetchRequestListByImportDatePOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "dateRange",
            "description": "JSON with 'startDate' (required) and 'endDate' (optional) to query for.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DateRange"
            }
          },
          {
            "name": "returnType",
            "in": "query",
            "description": "returnType",
            "required": false,
            "type": "string",
            "enum": ["REQUEST_ID_LIST", "REQUEST_SUMMARY_LIST"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sampleById/{inputId}": {
      "get": {
        "tags": ["sample-controller"],
        "summary": "Fetch SmileSample by inputId",
        "operationId": "fetchSmileSampleByInputIdGET",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "inputId",
            "in": "path",
            "description": "input id to search with",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublishedSmileSample"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/samples/{cmoPatientId}": {
      "get": {
        "tags": ["sample-controller"],
        "summary": "Fetch SampleMetadata list by CMO Patient ID",
        "operationId": "fetchSampleMetadataListByCmoPatientIdGET",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cmoPatientId",
            "in": "path",
            "description": "CMO Patient ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublishedSmileSample"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/samplesByDate/{importDate}": {
      "get": {
        "tags": ["sample-controller"],
        "summary": "Fetch SmileSampleIdMapping list by inputDate",
        "operationId": "fetchSmileSampleIdMappingListByInputDateGET",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "importDate",
            "in": "path",
            "description": "Import date to search from",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SmileSampleIdMapping"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "DateRange": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        }
      }
    },
    "Library": {
      "type": "object",
      "properties": {
        "barcodeId": {
          "type": "string"
        },
        "barcodeIndex": {
          "type": "string"
        },
        "captureConcentrationNm": {
          "type": "string"
        },
        "captureInputNg": {
          "type": "string"
        },
        "captureName": {
          "type": "string"
        },
        "dnaInputNg": {
          "type": "number",
          "format": "double"
        },
        "libraryConcentrationNgul": {
          "type": "number",
          "format": "double"
        },
        "libraryIgoId": {
          "type": "string"
        },
        "libraryVolume": {
          "type": "number",
          "format": "double"
        },
        "numFastQs": {
          "type": "integer",
          "format": "int32"
        },
        "runs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Run"
          }
        }
      }
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "PatientAlias": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PublishedSmileRequest": {
      "type": "object",
      "properties": {
        "bicAnalysis": {
          "type": "boolean"
        },
        "dataAccessEmails": {
          "type": "string"
        },
        "dataAnalystEmail": {
          "type": "string"
        },
        "dataAnalystName": {
          "type": "string"
        },
        "genePanel": {
          "type": "string"
        },
        "igoProjectId": {
          "type": "string"
        },
        "igoRequestId": {
          "type": "string"
        },
        "investigatorEmail": {
          "type": "string"
        },
        "investigatorName": {
          "type": "string"
        },
        "isCmoRequest": {
          "type": "boolean"
        },
        "labHeadEmail": {
          "type": "string"
        },
        "labHeadName": {
          "type": "string"
        },
        "libraryType": {
          "type": "string"
        },
        "otherContactEmails": {
          "type": "string"
        },
        "piEmail": {
          "type": "string"
        },
        "pooledNormals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "projectManagerName": {
          "type": "string"
        },
        "qcAccessEmails": {
          "type": "string"
        },
        "requestJson": {
          "type": "string"
        },
        "samples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublishedSmileSample"
          }
        },
        "smileRequestId": {
          "type": "string"
        },
        "strand": {
          "type": "string"
        }
      }
    },
    "PublishedSmileSample": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "baitSet": {
          "type": "string"
        },
        "cfDNA2dBarcode": {
          "type": "string"
        },
        "cmoInfoIgoId": {
          "type": "string"
        },
        "cmoPatientId": {
          "type": "string"
        },
        "cmoSampleIdFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cmoSampleName": {
          "type": "string"
        },
        "collectionYear": {
          "type": "string"
        },
        "datasource": {
          "type": "string"
        },
        "genePanel": {
          "type": "string"
        },
        "igoComplete": {
          "type": "boolean"
        },
        "importDate": {
          "type": "string"
        },
        "investigatorSampleId": {
          "type": "string"
        },
        "libraries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Library"
          }
        },
        "oncotreeCode": {
          "type": "string"
        },
        "patientAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientAlias"
          }
        },
        "preservation": {
          "type": "string"
        },
        "primaryId": {
          "type": "string"
        },
        "qcReports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QcReport"
          }
        },
        "sampleAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleAlias"
          }
        },
        "sampleClass": {
          "type": "string"
        },
        "sampleName": {
          "type": "string"
        },
        "sampleOrigin": {
          "type": "string"
        },
        "sampleType": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "smilePatientId": {
          "type": "string"
        },
        "smileSampleId": {
          "type": "string"
        },
        "species": {
          "type": "string"
        },
        "tissueLocation": {
          "type": "string"
        },
        "tubeId": {
          "type": "string"
        },
        "tumorOrNormal": {
          "type": "string"
        }
      }
    },
    "QcReport": {
      "type": "object",
      "properties": {
        "IGORecommendation": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "investigatorDecision": {
          "type": "string"
        },
        "qcReportType": {
          "type": "string",
          "enum": ["DNA", "RNA", "LIBRARY"]
        }
      }
    },
    "Run": {
      "type": "object",
      "properties": {
        "fastqs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "flowCellId": {
          "type": "string"
        },
        "flowCellLanes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "readLength": {
          "type": "string"
        },
        "runDate": {
          "type": "string"
        },
        "runId": {
          "type": "string"
        },
        "runMode": {
          "type": "string"
        }
      }
    },
    "SampleAlias": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SmileSampleIdMapping": {
      "type": "object",
      "properties": {
        "cmoSampleName": {
          "type": "string"
        },
        "importDate": {
          "type": "string"
        },
        "primaryId": {
          "type": "string"
        },
        "smileSampleId": {
          "type": "string"
        }
      }
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      }
    }
  }
}
